{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Math\u00e9matiques \u00e0 Mimard En construction","title":"Accueil"},{"location":"index.html#mathematiques_a_mimard","text":"En construction","title":"Math\u00e9matiques \u00e0 Mimard"},{"location":"Cours/c01.html","text":"En construction Cours","title":"En construction"},{"location":"Cours/c01.html#en_construction","text":"Cours","title":"En construction"},{"location":"Cours/Premi%C3%A8re%20NSI/c01.html","text":"En construction","title":"En construction"},{"location":"Cours/Premi%C3%A8re%20NSI/c01.html#en_construction","text":"","title":"En construction"},{"location":"Cours/Premi%C3%A8re%20NSI/Accueil/c01.html","text":"En construction","title":"En construction"},{"location":"Cours/Premi%C3%A8re%20NSI/Accueil/c01.html#en_construction","text":"","title":"En construction"},{"location":"Cours/Premi%C3%A8re%20NSI/Codage/Au%20programme/Le%20son/c01.html","text":"En construction","title":"En construction"},{"location":"Cours/Premi%C3%A8re%20NSI/Codage/Au%20programme/Le%20son/c01.html#en_construction","text":"","title":"En construction"},{"location":"Cours/Premi%C3%A8re%20NSI/Codage/Au%20programme/Les%20flottants%20suite/c01.html","text":"En construction","title":"En construction"},{"location":"Cours/Premi%C3%A8re%20NSI/Codage/Au%20programme/Les%20flottants%20suite/c01.html#en_construction","text":"","title":"En construction"},{"location":"Cours/Premi%C3%A8re%20NSI/Codage/Au%20programme/Les%20images/c01.html","text":"En construction","title":"En construction"},{"location":"Cours/Premi%C3%A8re%20NSI/Codage/Au%20programme/Les%20images/c01.html#en_construction","text":"","title":"En construction"},{"location":"Cours/Premi%C3%A8re%20NSI/Codage/Les%20bases/Binaire/c01.html","text":"En construction","title":"En construction"},{"location":"Cours/Premi%C3%A8re%20NSI/Codage/Les%20bases/Binaire/c01.html#en_construction","text":"","title":"En construction"},{"location":"Cours/Premi%C3%A8re%20NSI/Codage/Les%20bases/Hexad%C3%A9cimal/c01.html","text":"En construction","title":"En construction"},{"location":"Cours/Premi%C3%A8re%20NSI/Codage/Les%20bases/Hexad%C3%A9cimal/c01.html#en_construction","text":"","title":"En construction"},{"location":"Cours/Premi%C3%A8re%20NSI/Pr%C3%A9sentation/c01.html","text":"En construction","title":"Pr\u00e9sentation"},{"location":"Cours/Premi%C3%A8re%20NSI/Pr%C3%A9sentation/c01.html#en_construction","text":"","title":"En construction"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/for.html","text":"La boucle for A retenir La boucle for permet d'ex\u00e9cuter un nombre connu de fois des instructions. Si il faut r\u00e9p\u00e9ter 10 fois, on \u00e9crit : som = 0 for compt in range ( 10 ): som = som + compt print ( som ) Il y a d'autres fa\u00e7ons d'utiliser range ! Un classique important Pour calculer \\(0+1+2+3+\\ldots+9\\) , il faut accumuler/ajouter dans une variable initialis\u00e9e \u00e0 0 (valeur qui ne modifie pas le r\u00e9sultat d'une addition) les valeurs utiles. C'est ce que fait le programme pr\u00e9c\u00e9dent. Modifier le programme pr\u00e9c\u00e9dent pour calculer \\(0+1+2+3+\\ldots 50\\) . Modifier le programme pr\u00e9c\u00e9dent pour calculer \\(1\\times 2\\times 3 \\times \\ldots \\times 9\\) Pour aller plus loin avec d'autres questions du m\u00eame type : cf ici Une boucle for peut donc s'utiliser lorsque le nombre de r\u00e9p\u00e9tition des instructions est connu (explicitement comme dans l'exemple pr\u00e9c\u00e9dent ou avec une variable cf ci-dessous) Exemple nb_rep = int ( input ( \"Nombre de r\u00e9p\u00e9tition ? \" )) for co in range ( nb_rep ): print ( \"Je ne dois pas recopier b\u00eatement !\" ) R\u00e9flechissez ! Lorsque vous voulez utiliser une boucle for , vous devez vous poser la question suivante : \u00ab est-ce que mon compteur de boucle est utilis\u00e9 dans les instructions \u00e0 r\u00e9p\u00e9ter ? \u00bb Comparez les deux programmes suivants Le compteur de boucle n'intervient pas dans les instructions print ( \"Attention : \" ) for co in range ( 10 ): print ( \"Alerte intrusion !\" ) Le compteur de boucle intervient dans les instructions print ( \"Attention : \" ) for co in range ( 10 ): print ( \"Explosion dans \" + str ( 10 - co )) print ( \"Boum !!!\" ) Dans le premier programme, peu importe les valeurs prises par le compteur co ! Il est possible d'\u00e9crire : print ( \"Attention : \" ) for co in range ( 20 , 30 ): print ( \"Alerte intrusion !\" ) Alors que dans le second, une telle modification est beaucoup plus difficile \u00e0 effectuer (et totalement inappropri\u00e9e) ! Exercice Ecrire un programme qui demande \u00e0 l'utilisateur un nombre de lignes et qui \u00e9crit X sur le nombre de lignes recquis. Par exemple, sur 5 lignes : on a : X X X X X R\u00e9ponse nb_ligne = int ( input ( \"Nombre de lignes ? \" )) for co in range ( nb_ligne ): print ( \"X\" ) Exercice Ecrire un programme qui demande \u00e0 l'utilisateur un nombre de lignes et qui dessine un triangle plein de X sur le nombre de lignes recquis. Par exemple, sur 5 lignes : on a : X XX XXX XXXX XXXXX R\u00e9ponse nb_ligne = int ( input ( \"Nombre de lignes ? \" )) for co in range ( nb_ligne ): print ( \"X\" * ( co + 1 )) Exercice Ecrire un programme qui demande \u00e0 l'utilisateur un nombre de lignes et qui dessine un triangle invers\u00e9 plein de X sur le nombre de lignes recquis. Par exemple, sur 5 lignes : on a : XXXXX XXXX XXX XX X R\u00e9ponse nb_ligne = int ( input ( \"Nombre de lignes ? \" )) for co in range ( nb_ligne ): print ( \"X\" * ( nb_ligne - co )) Exercice plus difficile Ecrire un programme qui demande \u00e0 l'utilisateur un nombre de lignes et qui dessine un sapin plein de A sur le nombre de lignes recquis. Par exemple, sur 5 lignes : on a : A AAA AAAAA AAAAAAA AAAAAAAAA R\u00e9ponse nb_ligne = int ( input ( \"Nombre de lignes ? \" )) for co in range ( nb_ligne ): print ( \" \" * ( nb_ligne - ( co + 1 )) + \"^\" * ( 2 * co + 1 ) + \" \" * ( nb_ligne - ( co + 1 )))","title":"La boucle for"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/for.html#la_boucle_for","text":"A retenir La boucle for permet d'ex\u00e9cuter un nombre connu de fois des instructions. Si il faut r\u00e9p\u00e9ter 10 fois, on \u00e9crit : som = 0 for compt in range ( 10 ): som = som + compt print ( som ) Il y a d'autres fa\u00e7ons d'utiliser range ! Un classique important Pour calculer \\(0+1+2+3+\\ldots+9\\) , il faut accumuler/ajouter dans une variable initialis\u00e9e \u00e0 0 (valeur qui ne modifie pas le r\u00e9sultat d'une addition) les valeurs utiles. C'est ce que fait le programme pr\u00e9c\u00e9dent. Modifier le programme pr\u00e9c\u00e9dent pour calculer \\(0+1+2+3+\\ldots 50\\) . Modifier le programme pr\u00e9c\u00e9dent pour calculer \\(1\\times 2\\times 3 \\times \\ldots \\times 9\\) Pour aller plus loin avec d'autres questions du m\u00eame type : cf ici Une boucle for peut donc s'utiliser lorsque le nombre de r\u00e9p\u00e9tition des instructions est connu (explicitement comme dans l'exemple pr\u00e9c\u00e9dent ou avec une variable cf ci-dessous) Exemple nb_rep = int ( input ( \"Nombre de r\u00e9p\u00e9tition ? \" )) for co in range ( nb_rep ): print ( \"Je ne dois pas recopier b\u00eatement !\" ) R\u00e9flechissez ! Lorsque vous voulez utiliser une boucle for , vous devez vous poser la question suivante : \u00ab est-ce que mon compteur de boucle est utilis\u00e9 dans les instructions \u00e0 r\u00e9p\u00e9ter ? \u00bb Comparez les deux programmes suivants Le compteur de boucle n'intervient pas dans les instructions print ( \"Attention : \" ) for co in range ( 10 ): print ( \"Alerte intrusion !\" ) Le compteur de boucle intervient dans les instructions print ( \"Attention : \" ) for co in range ( 10 ): print ( \"Explosion dans \" + str ( 10 - co )) print ( \"Boum !!!\" ) Dans le premier programme, peu importe les valeurs prises par le compteur co ! Il est possible d'\u00e9crire : print ( \"Attention : \" ) for co in range ( 20 , 30 ): print ( \"Alerte intrusion !\" ) Alors que dans le second, une telle modification est beaucoup plus difficile \u00e0 effectuer (et totalement inappropri\u00e9e) ! Exercice Ecrire un programme qui demande \u00e0 l'utilisateur un nombre de lignes et qui \u00e9crit X sur le nombre de lignes recquis. Par exemple, sur 5 lignes : on a : X X X X X R\u00e9ponse nb_ligne = int ( input ( \"Nombre de lignes ? \" )) for co in range ( nb_ligne ): print ( \"X\" ) Exercice Ecrire un programme qui demande \u00e0 l'utilisateur un nombre de lignes et qui dessine un triangle plein de X sur le nombre de lignes recquis. Par exemple, sur 5 lignes : on a : X XX XXX XXXX XXXXX R\u00e9ponse nb_ligne = int ( input ( \"Nombre de lignes ? \" )) for co in range ( nb_ligne ): print ( \"X\" * ( co + 1 )) Exercice Ecrire un programme qui demande \u00e0 l'utilisateur un nombre de lignes et qui dessine un triangle invers\u00e9 plein de X sur le nombre de lignes recquis. Par exemple, sur 5 lignes : on a : XXXXX XXXX XXX XX X R\u00e9ponse nb_ligne = int ( input ( \"Nombre de lignes ? \" )) for co in range ( nb_ligne ): print ( \"X\" * ( nb_ligne - co )) Exercice plus difficile Ecrire un programme qui demande \u00e0 l'utilisateur un nombre de lignes et qui dessine un sapin plein de A sur le nombre de lignes recquis. Par exemple, sur 5 lignes : on a : A AAA AAAAA AAAAAAA AAAAAAAAA R\u00e9ponse nb_ligne = int ( input ( \"Nombre de lignes ? \" )) for co in range ( nb_ligne ): print ( \" \" * ( nb_ligne - ( co + 1 )) + \"^\" * ( 2 * co + 1 ) + \" \" * ( nb_ligne - ( co + 1 )))","title":"La boucle for"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/if_elif.html","text":"if, elif if A retenir La boucle if ex\u00e9cute certaines instructions si une condition (c'est un propri\u00e9t\u00e9 qui est soit vraie soit fausse) est r\u00e9alis\u00e9e et d'autres sinon. if age >= 18 : print ( \"Je suis majeur(e)\" ) else : print ( \"Je suis mineur(e)\" ) Attention Toutes les lignes des instructions \u00e0 ex\u00e9cuter dans un if ou un else doivent avoir un tabulation de plus que la ligne avec if ou else . a = int ( input ( \"Donner votre note entre 0 et 20 : \" )) if a < 10 : print ( \"Il faut revoir les bases\" ) # uniquement pour une note < 10 print ( \"Vous ferez mieux la prochaine fois\" ) # uniquement pour une note < 10 else : print ( \"Bon ensemble\" ) # uniquement pour une note >= 10 print ( \"Revoyez les notions o\u00f9 vous vous \u00eates tromp\u00e9s.\" ) # pour toutes les notes elif Il est possible de remplacer un else : if ... : par elif ... : Exemple \u00e0 bien comprendre Programme 1 un_nb = int ( input ( \"Choisir un entier entre 0 et 99 (compris) \" )) if un_nb <= 20 : print ( \"Jeton bleu\" ) if un_nb <= 50 : print ( \"Jeton vert\" ) if un_nb <= 75 : print ( \"Jeton rouge\" ) else : print ( \"Jeton jaune\" ) Programme 2 un_nb = int ( input ( \"Choisir un entier entre 0 et 99 (compris) \" )) if un_nb <= 20 : print ( \"Jeton bleu\" ) elif un_nb <= 50 : print ( \"Jeton vert\" ) elif un_nb <= 75 : print ( \"Jeton rouge\" ) else : print ( \"Jeton jaune\" ) Qu'affiche le programme 1 si : un_nb vaut 18 un_nb vaut 45 un_nb vaut 72 un_nb vaut 83 Qu'affiche le programme 2 si : un_nb vaut 18 un_nb vaut 45 un_nb vaut 72 un_nb vaut 83 Les conditions A retenir Les conditions (dans un if ou un while ) sont des bool\u00e9ens . Elles ne peuvent donc prendre que deux valeurs : True ou False Elles peuvent \u00eatre obtenue de diff\u00e9rentes fa\u00e7on : un test des bool\u00e9ens s\u00e9par\u00e9s par or ou and un bool\u00e9en retourn\u00e9 par une fonction True ou False (A \u00e9viter si possible) ... Les tests Voici un liste (non exhaustive) des tests possibles : test d'\u00e9galit\u00e9 : a == b (A ne pas faire avec des flottants ) test de la non \u00e9galit\u00e9 : a != b (A ne pas faire avec des flottants ) test d'in\u00e9gailt\u00e9 strict : a > b ou a < b (avec des str voir l'ordre lexicographique ) test d'in\u00e9gailt\u00e9 large : a >= b ou a <= b (avec des str voir l'ordre lexicographique ) test d'appartenance \u00e0 une liste : x in liste1 test d'appartenance \u00e0 une cha\u00eene de caract\u00e8res : x in ch1 test d'appartenance \u00ab aux cl\u00e9s d'un dictionnaires \u00bb : x in dico1 test de type : isinstance(a , int) , isinstance(a , bool) , isinstance(a , list) , isinstance(a , dict) , ... Un bon usage Il est inutile de tester si un bool\u00e9en est \u00e9gal \u00e0 True ! A \u00e9viter def est_mention_TB ( note ): if note >= 16 : return True return False ma_note = int ( input ( \"Votre note ? \" )) if est_mention_TB ( ma_note ) == True : # Inutile !! print ( \"F\u00e9licitation pour votre mention TB!\" ) A pr\u00e9f\u00e9rer def est_mention_TB ( note ): if note >= 16 : return True return False ma_note = int ( input ( \"Votre note ? \" )) if est_mention_TB ( ma_note ): print ( \"F\u00e9licitation pour votre mention TB!\" ) De fa\u00e7on analogue avec un False , il est pr\u00e9f\u00e9rable d'utiliser un not ! A \u00e9viter def avoir_le_bac ( note ): if note >= 10 : return True return False ma_note = int ( input ( \"Votre note ? \" )) if avoir_le_bac ( ma_note ) == False : # Inutile !! print ( \"Dommage ! Mais peut-\u00eatre \u00eates-vous au rattrapage ?\" ) A pr\u00e9f\u00e9rer def avoir_le_bac ( note ): if note >= 10 : return True return False ma_note = int ( input ( \"Votre note ? \" )) if not ( avoir_le_bac ( ma_note )): print ( \"Dommage ! Mais peut-\u00eatre \u00eates-vous au rattrapage ?\" )","title":"if, elif et les conditions"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/if_elif.html#if_elif","text":"","title":"if, elif"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/if_elif.html#if","text":"A retenir La boucle if ex\u00e9cute certaines instructions si une condition (c'est un propri\u00e9t\u00e9 qui est soit vraie soit fausse) est r\u00e9alis\u00e9e et d'autres sinon. if age >= 18 : print ( \"Je suis majeur(e)\" ) else : print ( \"Je suis mineur(e)\" ) Attention Toutes les lignes des instructions \u00e0 ex\u00e9cuter dans un if ou un else doivent avoir un tabulation de plus que la ligne avec if ou else . a = int ( input ( \"Donner votre note entre 0 et 20 : \" )) if a < 10 : print ( \"Il faut revoir les bases\" ) # uniquement pour une note < 10 print ( \"Vous ferez mieux la prochaine fois\" ) # uniquement pour une note < 10 else : print ( \"Bon ensemble\" ) # uniquement pour une note >= 10 print ( \"Revoyez les notions o\u00f9 vous vous \u00eates tromp\u00e9s.\" ) # pour toutes les notes","title":"if"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/if_elif.html#elif","text":"Il est possible de remplacer un else : if ... : par elif ... : Exemple \u00e0 bien comprendre Programme 1 un_nb = int ( input ( \"Choisir un entier entre 0 et 99 (compris) \" )) if un_nb <= 20 : print ( \"Jeton bleu\" ) if un_nb <= 50 : print ( \"Jeton vert\" ) if un_nb <= 75 : print ( \"Jeton rouge\" ) else : print ( \"Jeton jaune\" ) Programme 2 un_nb = int ( input ( \"Choisir un entier entre 0 et 99 (compris) \" )) if un_nb <= 20 : print ( \"Jeton bleu\" ) elif un_nb <= 50 : print ( \"Jeton vert\" ) elif un_nb <= 75 : print ( \"Jeton rouge\" ) else : print ( \"Jeton jaune\" ) Qu'affiche le programme 1 si : un_nb vaut 18 un_nb vaut 45 un_nb vaut 72 un_nb vaut 83 Qu'affiche le programme 2 si : un_nb vaut 18 un_nb vaut 45 un_nb vaut 72 un_nb vaut 83","title":"elif"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/if_elif.html#les_conditions","text":"A retenir Les conditions (dans un if ou un while ) sont des bool\u00e9ens . Elles ne peuvent donc prendre que deux valeurs : True ou False Elles peuvent \u00eatre obtenue de diff\u00e9rentes fa\u00e7on : un test des bool\u00e9ens s\u00e9par\u00e9s par or ou and un bool\u00e9en retourn\u00e9 par une fonction True ou False (A \u00e9viter si possible) ... Les tests Voici un liste (non exhaustive) des tests possibles : test d'\u00e9galit\u00e9 : a == b (A ne pas faire avec des flottants ) test de la non \u00e9galit\u00e9 : a != b (A ne pas faire avec des flottants ) test d'in\u00e9gailt\u00e9 strict : a > b ou a < b (avec des str voir l'ordre lexicographique ) test d'in\u00e9gailt\u00e9 large : a >= b ou a <= b (avec des str voir l'ordre lexicographique ) test d'appartenance \u00e0 une liste : x in liste1 test d'appartenance \u00e0 une cha\u00eene de caract\u00e8res : x in ch1 test d'appartenance \u00ab aux cl\u00e9s d'un dictionnaires \u00bb : x in dico1 test de type : isinstance(a , int) , isinstance(a , bool) , isinstance(a , list) , isinstance(a , dict) , ... Un bon usage Il est inutile de tester si un bool\u00e9en est \u00e9gal \u00e0 True ! A \u00e9viter def est_mention_TB ( note ): if note >= 16 : return True return False ma_note = int ( input ( \"Votre note ? \" )) if est_mention_TB ( ma_note ) == True : # Inutile !! print ( \"F\u00e9licitation pour votre mention TB!\" ) A pr\u00e9f\u00e9rer def est_mention_TB ( note ): if note >= 16 : return True return False ma_note = int ( input ( \"Votre note ? \" )) if est_mention_TB ( ma_note ): print ( \"F\u00e9licitation pour votre mention TB!\" ) De fa\u00e7on analogue avec un False , il est pr\u00e9f\u00e9rable d'utiliser un not ! A \u00e9viter def avoir_le_bac ( note ): if note >= 10 : return True return False ma_note = int ( input ( \"Votre note ? \" )) if avoir_le_bac ( ma_note ) == False : # Inutile !! print ( \"Dommage ! Mais peut-\u00eatre \u00eates-vous au rattrapage ?\" ) A pr\u00e9f\u00e9rer def avoir_le_bac ( note ): if note >= 10 : return True return False ma_note = int ( input ( \"Votre note ? \" )) if not ( avoir_le_bac ( ma_note )): print ( \"Dommage ! Mais peut-\u00eatre \u00eates-vous au rattrapage ?\" )","title":"Les conditions"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/in_out.html","text":"Les m\u00e9thodes de bases : Entr\u00e8e/sortie A retenir Pour afficher en console un r\u00e9sultat, il suffit d'utiliser la fonction print ! Elle peut prendre 0 argument mais aussi plusieurs ! print () # n'affiche rien, puis effectue un retour \u00e0 la ligne print ( \"Hello\" ) # affiche Hello, puis effectue un retour \u00e0 la ligne print ( 3 + 5 ) # affiche 8, puis effectue un retour \u00e0 la ligne print ( 3 + 5 , \"hello\" ) # affiche 8 hello (notez l'espace !!), puis effectue un retour \u00e0 la ligne Cette fonction renvoie None : c'est-\u00e0-dire rien ! Il est pr\u00e9f\u00e9rable d'utiliser une chaine de caract\u00e8re dans un print . Pour cela, il suffit d'utiliser la concat\u00e9nation et le transtypage ou la m\u00e9thode format . A retenir Pour r\u00e9cup\u00e9rer ce qu'un utilisateur tape au clavier, il suffit d'utiliser la fonction input ! Elle peut prendre 0 argument mais aussi plusieurs ! En g\u00e9n\u00e9ral, on utilisera un argument qui est une cha\u00eene de caract\u00e8res (c'est-\u00e0-dire un texte) qui explique \u00e0 l'utilisateur ce qu'il doit faire ! Cette fonction renvoie une cha\u00eene de caract\u00e8re (type str ). Il faut donc la r\u00e9cup\u00e9rer dans une variable ! nom = input () # n'affiche rien mais attend que l'utilisateur tape au clavier nom = input ( \"Votre nom ? \" ) # affiche Votre nom ?, puis attend que l'utilisateur tape au clavier Attention Ce que renvoie input est un str ! Il est donc impossible de faire des op\u00e9rations math\u00e9matiques avec ! Si n\u00e9cessaire, il faut le transtyper ( cast en anglais), par exemple, avec les fonctions : int pour avoir un entier float pour avoir un r\u00e9el age = input ( \"Votre age ? \" ) # age est du type str annee_naissance = 2023 - age # d\u00e9clenche une erreur TypeError: unsupported operand type(s) for -: 'str' and 'int' age = int ( input ( \"Votre age ? \" )) # age est maintenant du type int annee_naissance = 2023 - age # le calcul est bien effectu\u00e9 Exercices \u00e0 maitriser Exercice Demander \u00e0 l'utilisateur son ann\u00e9e de naissance et l'ann\u00e9e en cours. Calculer et afficher alors son age. R\u00e9ponse annee_nais = int ( input ( \"Votre ann\u00e9e de naissance ? \" )) annee = int ( input ( \"Quelle est l'ann\u00e9e ? \" )) age = annee - annee_nais print ( age )","title":"print/input"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/in_out.html#les_methodes_de_bases_entreesortie","text":"A retenir Pour afficher en console un r\u00e9sultat, il suffit d'utiliser la fonction print ! Elle peut prendre 0 argument mais aussi plusieurs ! print () # n'affiche rien, puis effectue un retour \u00e0 la ligne print ( \"Hello\" ) # affiche Hello, puis effectue un retour \u00e0 la ligne print ( 3 + 5 ) # affiche 8, puis effectue un retour \u00e0 la ligne print ( 3 + 5 , \"hello\" ) # affiche 8 hello (notez l'espace !!), puis effectue un retour \u00e0 la ligne Cette fonction renvoie None : c'est-\u00e0-dire rien ! Il est pr\u00e9f\u00e9rable d'utiliser une chaine de caract\u00e8re dans un print . Pour cela, il suffit d'utiliser la concat\u00e9nation et le transtypage ou la m\u00e9thode format . A retenir Pour r\u00e9cup\u00e9rer ce qu'un utilisateur tape au clavier, il suffit d'utiliser la fonction input ! Elle peut prendre 0 argument mais aussi plusieurs ! En g\u00e9n\u00e9ral, on utilisera un argument qui est une cha\u00eene de caract\u00e8res (c'est-\u00e0-dire un texte) qui explique \u00e0 l'utilisateur ce qu'il doit faire ! Cette fonction renvoie une cha\u00eene de caract\u00e8re (type str ). Il faut donc la r\u00e9cup\u00e9rer dans une variable ! nom = input () # n'affiche rien mais attend que l'utilisateur tape au clavier nom = input ( \"Votre nom ? \" ) # affiche Votre nom ?, puis attend que l'utilisateur tape au clavier Attention Ce que renvoie input est un str ! Il est donc impossible de faire des op\u00e9rations math\u00e9matiques avec ! Si n\u00e9cessaire, il faut le transtyper ( cast en anglais), par exemple, avec les fonctions : int pour avoir un entier float pour avoir un r\u00e9el age = input ( \"Votre age ? \" ) # age est du type str annee_naissance = 2023 - age # d\u00e9clenche une erreur TypeError: unsupported operand type(s) for -: 'str' and 'int' age = int ( input ( \"Votre age ? \" )) # age est maintenant du type int annee_naissance = 2023 - age # le calcul est bien effectu\u00e9","title":"Les m\u00e9thodes de bases : Entr\u00e8e/sortie"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/in_out.html#exercices_a_maitriser","text":"Exercice Demander \u00e0 l'utilisateur son ann\u00e9e de naissance et l'ann\u00e9e en cours. Calculer et afficher alors son age. R\u00e9ponse annee_nais = int ( input ( \"Votre ann\u00e9e de naissance ? \" )) annee = int ( input ( \"Quelle est l'ann\u00e9e ? \" )) age = annee - annee_nais print ( age )","title":"Exercices \u00e0 maitriser"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/list.html","text":"Les listes D\u00e9finition A retenir Une liste (ou du moins ce qui sera appel\u00e9e liste pour l'instant ) est une structure de donn\u00e9e tr\u00e8s importanate ! C'est une s\u00e9quence ou une suite (donc l'ordre compte) d'\u00e9l\u00e9ments (par forc\u00e9ment distincts) not\u00e9e entre des crochets. L = [ 2 , 3 , 4 , \"bonjour\" , True ] A l'instar des cha\u00eenes de caract\u00e8res, les \u00e9l\u00e9ments d'une liste sont rep\u00e9r\u00e9s par des indices, qui commencent \u00e0 0! liste : [ 2 , 3 , 4 , \"bonjour\" , True ] Indice : 0 1 2 3 4 Des m\u00e9thodes communes aux list et aux str ... On retrouve des m\u00e9thodes communes \u00e0 celle des str ! Dans tout ce qui suit, on utilise l'exemple suivant : liste_a_ = [ 1 , - 5 , 10 , 15 , 2 , 3 , 6 , 13 ] connaitre le nombre de caract\u00e8res ou la longueur d'une cha\u00eene : len(liste_a) correspond \u00e0 8 acc\u00e9der \u00e0 un caract\u00e8re \u00e0 partir de son indice : liste_a[2] correspond \u00e0 10 acc\u00e9der aux derniers caract\u00e8res : liste_a[len(liste_a)-1] correspond \u00e0 13 . On peut aussi \u00e9crire liste_a[-1] acc\u00e9der \u00e0 une tranche : liste_a[2:5] correspond aux caract\u00e8res dont les indices sont sup\u00e9rieurs ou \u00e9gaux \u00e0 2 et strictement inf\u00e9rieur \u00e0 5. Ainsi, liste_a[2:5] correspond \u00e0 [10,15,2] acc\u00e9der \u00e0 une tranche contenant les premiers caract\u00e8res : liste_a[0:5] correspond aux 5 premiers caract\u00e8res (dont les indices sont sup\u00e9rieurs ou \u00e9gaux \u00e0 0 et strictement inf\u00e9rieur \u00e0 5). Ainsi, liste_a[0:5] correspond \u00e0 [1,-5,10,15,2] . On peut aussi \u00e9crire liste_a[:5] acc\u00e9der \u00e0 une tranche depuis le dernier caract\u00e8re : liste_a[len(liste_a)-3:len(liste_a)] correspond aux 3 derniers caract\u00e8res. Ainsi, liste_a[len(liste_a)-3:len(liste_a)] correspond \u00e0 [3, 6, 13] . On peut aussi \u00e9crire ``liste_a[-3:] acc\u00e9der \u00e0 toute la cha\u00eene sauf les derniers : liste_a[0:len(liste_a)-5] correspond \u00e0 toute la cha\u00eene sauf les 5 derniers caract\u00e8res. Ainsi, liste_a[0:len(liste_a) - 5] correspond \u00e0 [1, -5, 10] . On peut aussi \u00e9crire liste_a[:-5] On trouve auusi la concat\u00e9nation : liste_b = liste_a + [1000] et la r\u00e9p\u00e9tition liste_c = [5]*10 En r\u00e9sum\u00e9: liste_a = [ 1 , - 5 , 10 , 15 , 2 , 3 , 6 , 13 ] print ( len ( liste_a )) # affiche 8 print ( liste_a [ 2 ]) # affiche 10 print ( liste_a [ len ( liste_a ) - 1 ]) # affiche 13 print ( liste_a [ - 1 ]) # affiche 13 print ( liste_a [ 2 : 5 ]) # affiche [10,15,2] print ( liste_a [ 0 : 5 ]) # affiche [1,-5,10,15,2] print ( liste_a [: 5 ]) # affiche [1,-5,10,15,2] print ( liste_a [ len ( liste_a ) - 3 : len ( liste_a )]) # affiche [3, 6, 13] print ( liste_a [ - 3 :]) # affiche [3, 6, 13] print ( liste_a [ 0 : len ( liste_a ) - 5 ]) # affiche [1, -5, 10] print ( liste_a [: - 5 ]) # affiche [1, -5, 10] liste_b = liste_a + [ 1000 ] print ( liste_b ) # affiche [1, -5, 10, 15, 2, 3, 6, 13, 1000] liste_c = [ 5 ] * 10 print ( liste_c ) # affiche [5, 5, 5, 5, 5, 5, 5, 5, 5, 5] M\u00e9thodes sp\u00e9cifiques aux listes ... et celles sp\u00e9cifiques aux list Les listes sont des mutables ! Elles poss\u00e8dent donc des m\u00e9thodes sp\u00e9cifiques qui modifie directement (en place dit-on) la liste en question : modifier un \u00e9l\u00e9ment en connaissant son indice : liste_a[2] = 300 ajouter un \u00e9l\u00e9ment \u00e0 la fin : liste_a.append(-25) liste_a = [ 1 , - 5 , 10 , 15 , 2 , 3 , 6 , 13 ] liste_a [ 2 ] = 300 print ( liste_a ) # affiche [1, -5, 300, 15, 2, 3, 6, 13] liste_a . append ( - 25 ) # inutile d'utiliser une affection = print ( liste_a ) # affiche [1, -5, 300, 15, 2, 3, 6, 13, -25] Manipulation des listes Parcourir une liste Parcourir une liste avec des indices Pour r\u00e9cup\u00e9rer les \u00e9l\u00e9ments d'une listes les uns apr\u00e8s les autres avec les indices , il faut utiliser une boucle for , la fonction range et la longueur de la cha\u00eene. liste_a = [ 1 , 5 , 2 , 6 , 4 , 7 , 8 ] for idx in range ( len ( liste_a )): elt = liste_a [ idx ] print ( elt ) affiche 1 5 2 6 4 7 8 Il est aussi possible de ne pas passer par la variable elt : liste_a = [ 1 , 5 , 2 , 6 , 4 , 7 , 8 ] for idx in range ( len ( liste_a )): print ( liste_a [ idx ]) Parcourir une liste sans les indices Pour r\u00e9cup\u00e9rer les \u00e9l\u00e9ments d'une listes les uns apr\u00e8s les autres sans les indices , il faut seulement utiliser une boucle for . Il est alors plus difficile d'acc\u00e9der aux indices. liste_a = [ 1 , 5 , 2 , 6 , 4 , 7 , 8 ] for elt in liste_a : print ( elt ) affiche 1 5 2 6 4 7 8 Ins\u00e9rer une cha\u00eene Pour ins\u00e9rer des \u00e9l\u00e9ments dans une liste, il est possible d'utiliser les tranches. Ins\u00e9rer une cha\u00eene On souhaite ins\u00e9rer une liste (\u00e9ventuellement contenant un seul \u00e9l\u00e9ment) dans une cha\u00eene. Par exemple, dans la liste liste_a = [1,5,2,6,4,7,8] , on souhaite ins\u00e9rer 100 entre le 2 et le 6 . cha\u00eene : [ 1 , 5 , 2 , 6 , 4 , 7 , 8 ] Indice : 0 1 2 3 4 5 6 Il faut concat\u00e9ner les cha\u00eenes suivantes : la sous liste dont les indices commencent \u00e0 0 et sont strictement inf\u00e9rieur \u00e0 3 (Faite attention \u00e0 ce dernier point !!!) la liste que l'on souhaite ins\u00e9rer la sous liste dont les indices vont de l'indice 3 jusqu'au dernier liste_a = [ 1 , 5 , 2 , 6 , 4 , 7 , 8 ] a_inserer = [ 100 ] # ATTENTION il faut une liste ! M\u00eame pour un \u00e9l\u00e9ment ! liste_a = liste_a [ 0 : 3 ] + a_inserer + liste_a [ 3 :] print ( liste_a ) # affiche Bonbon ! Ajouter une liste \u00e0 la fin Il est inutile d'utiliser des tranches ! Il suffit de concat\u00e9ner \u00e0 droite. liste_a = [ 1 , 5 , 2 , 6 , 4 , 7 , 8 ] a_inserer = [ 100 , 150 ] # ATTENTION il faut une liste ! M\u00eame pour un \u00e9l\u00e9ment ! liste_a = liste_a + a_inserer print ( liste_a ) # affiche [1,5,2,6,4,7,8,100,150] Ajouter un \u00e9l\u00e9ment \u00e0 la fin d'une liste : append Pour ajouter un \u00e9l\u00e9ment \u00e0 la fin, il est pr\u00e9f\u00e9rable d'utiliser liste_a.append(100) ! Ajouter une liste au d\u00e9but Cela revient \u00e0 ajouter une liste \u00e0 la fin, non ? liste_a = [ 1 , 5 , 2 , 6 , 4 , 7 , 8 ] debut = [ 100 , 150 ] # ATTENTION il faut une liste ! M\u00eame pour un \u00e9l\u00e9ment ! liste_a = debut + liste_a print ( liste_a ) # affiche [100,150,1,5,2,6,4,7,8] Les listes sont des mutables ! En tant que mutable , une affectation liste_a = doit \u00eatre utilis\u00e9e en connaissance de cause, en particulier dans des fonctions ! Il est souvent pr\u00e9f\u00e9rable d'utiliser une boucle for et la m\u00e9thode append ! liste_a = [ 1 , 5 , 2 , 6 , 4 , 7 , 8 ] a_inserer = [ 100 , 150 ] # ATTENTION il faut une liste ! M\u00eame pour un \u00e9l\u00e9ment ! for idx in range ( len ( a_inserer )): liste_a . append ( a_inserer [ idx ]) print ( liste_a ) # affiche [1,5,2,6,4,7,8,100,150] Cr\u00e9er une liste Cr\u00e9er une liste Il suffit ce commencer avec une liste vide et d'accumuler les el\u00e9ments voulus. une_liste = [ 102 , 104 , 97 , 97 , 100 , 97 , 98 , 99 , 104 , 99 ] liste = [] for idx in range ( len ( une_liste )): if une_liste [ idx ] >= 100 : liste . append ( une_liste [ idx ]) print ( liste ) # affiche [102, 104, 100, 104] Diverses m\u00e9thodes autour des listes A apprendre en faisant les exercices [ ] : la liste vide. L=[ ] permet de cr\u00e9er une liste \u00e0 laquelle il sera possible d'ajouter des \u00e9l\u00e9ments 4 in L : retourne True si 4 est dans L , False sinon. L.index(x) : retourne l'indice de l'\u00e9l\u00e9ment x (si il est dans L , sinon il y a un message d'erreur) L.count(x) : retourne le nombre d'occurrences de l'\u00e9l\u00e9ment x (si il est dans la liste L ) L1 == L2 : retourne True si L1 et L2 sont identiques, False sinon. for elt in L : : parcourt la liste L A = L : copie par r\u00e9f\u00e9rence la liste L Exercices Exercice","title":"Les listes"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/list.html#les_listes","text":"","title":"Les listes"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/list.html#definition","text":"A retenir Une liste (ou du moins ce qui sera appel\u00e9e liste pour l'instant ) est une structure de donn\u00e9e tr\u00e8s importanate ! C'est une s\u00e9quence ou une suite (donc l'ordre compte) d'\u00e9l\u00e9ments (par forc\u00e9ment distincts) not\u00e9e entre des crochets. L = [ 2 , 3 , 4 , \"bonjour\" , True ] A l'instar des cha\u00eenes de caract\u00e8res, les \u00e9l\u00e9ments d'une liste sont rep\u00e9r\u00e9s par des indices, qui commencent \u00e0 0! liste : [ 2 , 3 , 4 , \"bonjour\" , True ] Indice : 0 1 2 3 4 Des m\u00e9thodes communes aux list et aux str ... On retrouve des m\u00e9thodes communes \u00e0 celle des str ! Dans tout ce qui suit, on utilise l'exemple suivant : liste_a_ = [ 1 , - 5 , 10 , 15 , 2 , 3 , 6 , 13 ] connaitre le nombre de caract\u00e8res ou la longueur d'une cha\u00eene : len(liste_a) correspond \u00e0 8 acc\u00e9der \u00e0 un caract\u00e8re \u00e0 partir de son indice : liste_a[2] correspond \u00e0 10 acc\u00e9der aux derniers caract\u00e8res : liste_a[len(liste_a)-1] correspond \u00e0 13 . On peut aussi \u00e9crire liste_a[-1] acc\u00e9der \u00e0 une tranche : liste_a[2:5] correspond aux caract\u00e8res dont les indices sont sup\u00e9rieurs ou \u00e9gaux \u00e0 2 et strictement inf\u00e9rieur \u00e0 5. Ainsi, liste_a[2:5] correspond \u00e0 [10,15,2] acc\u00e9der \u00e0 une tranche contenant les premiers caract\u00e8res : liste_a[0:5] correspond aux 5 premiers caract\u00e8res (dont les indices sont sup\u00e9rieurs ou \u00e9gaux \u00e0 0 et strictement inf\u00e9rieur \u00e0 5). Ainsi, liste_a[0:5] correspond \u00e0 [1,-5,10,15,2] . On peut aussi \u00e9crire liste_a[:5] acc\u00e9der \u00e0 une tranche depuis le dernier caract\u00e8re : liste_a[len(liste_a)-3:len(liste_a)] correspond aux 3 derniers caract\u00e8res. Ainsi, liste_a[len(liste_a)-3:len(liste_a)] correspond \u00e0 [3, 6, 13] . On peut aussi \u00e9crire ``liste_a[-3:] acc\u00e9der \u00e0 toute la cha\u00eene sauf les derniers : liste_a[0:len(liste_a)-5] correspond \u00e0 toute la cha\u00eene sauf les 5 derniers caract\u00e8res. Ainsi, liste_a[0:len(liste_a) - 5] correspond \u00e0 [1, -5, 10] . On peut aussi \u00e9crire liste_a[:-5] On trouve auusi la concat\u00e9nation : liste_b = liste_a + [1000] et la r\u00e9p\u00e9tition liste_c = [5]*10 En r\u00e9sum\u00e9: liste_a = [ 1 , - 5 , 10 , 15 , 2 , 3 , 6 , 13 ] print ( len ( liste_a )) # affiche 8 print ( liste_a [ 2 ]) # affiche 10 print ( liste_a [ len ( liste_a ) - 1 ]) # affiche 13 print ( liste_a [ - 1 ]) # affiche 13 print ( liste_a [ 2 : 5 ]) # affiche [10,15,2] print ( liste_a [ 0 : 5 ]) # affiche [1,-5,10,15,2] print ( liste_a [: 5 ]) # affiche [1,-5,10,15,2] print ( liste_a [ len ( liste_a ) - 3 : len ( liste_a )]) # affiche [3, 6, 13] print ( liste_a [ - 3 :]) # affiche [3, 6, 13] print ( liste_a [ 0 : len ( liste_a ) - 5 ]) # affiche [1, -5, 10] print ( liste_a [: - 5 ]) # affiche [1, -5, 10] liste_b = liste_a + [ 1000 ] print ( liste_b ) # affiche [1, -5, 10, 15, 2, 3, 6, 13, 1000] liste_c = [ 5 ] * 10 print ( liste_c ) # affiche [5, 5, 5, 5, 5, 5, 5, 5, 5, 5]","title":"D\u00e9finition"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/list.html#methodes_specifiques_aux_listes","text":"... et celles sp\u00e9cifiques aux list Les listes sont des mutables ! Elles poss\u00e8dent donc des m\u00e9thodes sp\u00e9cifiques qui modifie directement (en place dit-on) la liste en question : modifier un \u00e9l\u00e9ment en connaissant son indice : liste_a[2] = 300 ajouter un \u00e9l\u00e9ment \u00e0 la fin : liste_a.append(-25) liste_a = [ 1 , - 5 , 10 , 15 , 2 , 3 , 6 , 13 ] liste_a [ 2 ] = 300 print ( liste_a ) # affiche [1, -5, 300, 15, 2, 3, 6, 13] liste_a . append ( - 25 ) # inutile d'utiliser une affection = print ( liste_a ) # affiche [1, -5, 300, 15, 2, 3, 6, 13, -25]","title":"M\u00e9thodes sp\u00e9cifiques aux listes"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/list.html#manipulation_des_listes","text":"","title":"Manipulation des listes"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/list.html#parcourir_une_liste","text":"Parcourir une liste avec des indices Pour r\u00e9cup\u00e9rer les \u00e9l\u00e9ments d'une listes les uns apr\u00e8s les autres avec les indices , il faut utiliser une boucle for , la fonction range et la longueur de la cha\u00eene. liste_a = [ 1 , 5 , 2 , 6 , 4 , 7 , 8 ] for idx in range ( len ( liste_a )): elt = liste_a [ idx ] print ( elt ) affiche 1 5 2 6 4 7 8 Il est aussi possible de ne pas passer par la variable elt : liste_a = [ 1 , 5 , 2 , 6 , 4 , 7 , 8 ] for idx in range ( len ( liste_a )): print ( liste_a [ idx ]) Parcourir une liste sans les indices Pour r\u00e9cup\u00e9rer les \u00e9l\u00e9ments d'une listes les uns apr\u00e8s les autres sans les indices , il faut seulement utiliser une boucle for . Il est alors plus difficile d'acc\u00e9der aux indices. liste_a = [ 1 , 5 , 2 , 6 , 4 , 7 , 8 ] for elt in liste_a : print ( elt ) affiche 1 5 2 6 4 7 8","title":"Parcourir une liste"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/list.html#inserer_une_chaine","text":"Pour ins\u00e9rer des \u00e9l\u00e9ments dans une liste, il est possible d'utiliser les tranches. Ins\u00e9rer une cha\u00eene On souhaite ins\u00e9rer une liste (\u00e9ventuellement contenant un seul \u00e9l\u00e9ment) dans une cha\u00eene. Par exemple, dans la liste liste_a = [1,5,2,6,4,7,8] , on souhaite ins\u00e9rer 100 entre le 2 et le 6 . cha\u00eene : [ 1 , 5 , 2 , 6 , 4 , 7 , 8 ] Indice : 0 1 2 3 4 5 6 Il faut concat\u00e9ner les cha\u00eenes suivantes : la sous liste dont les indices commencent \u00e0 0 et sont strictement inf\u00e9rieur \u00e0 3 (Faite attention \u00e0 ce dernier point !!!) la liste que l'on souhaite ins\u00e9rer la sous liste dont les indices vont de l'indice 3 jusqu'au dernier liste_a = [ 1 , 5 , 2 , 6 , 4 , 7 , 8 ] a_inserer = [ 100 ] # ATTENTION il faut une liste ! M\u00eame pour un \u00e9l\u00e9ment ! liste_a = liste_a [ 0 : 3 ] + a_inserer + liste_a [ 3 :] print ( liste_a ) # affiche Bonbon ! Ajouter une liste \u00e0 la fin Il est inutile d'utiliser des tranches ! Il suffit de concat\u00e9ner \u00e0 droite. liste_a = [ 1 , 5 , 2 , 6 , 4 , 7 , 8 ] a_inserer = [ 100 , 150 ] # ATTENTION il faut une liste ! M\u00eame pour un \u00e9l\u00e9ment ! liste_a = liste_a + a_inserer print ( liste_a ) # affiche [1,5,2,6,4,7,8,100,150] Ajouter un \u00e9l\u00e9ment \u00e0 la fin d'une liste : append Pour ajouter un \u00e9l\u00e9ment \u00e0 la fin, il est pr\u00e9f\u00e9rable d'utiliser liste_a.append(100) ! Ajouter une liste au d\u00e9but Cela revient \u00e0 ajouter une liste \u00e0 la fin, non ? liste_a = [ 1 , 5 , 2 , 6 , 4 , 7 , 8 ] debut = [ 100 , 150 ] # ATTENTION il faut une liste ! M\u00eame pour un \u00e9l\u00e9ment ! liste_a = debut + liste_a print ( liste_a ) # affiche [100,150,1,5,2,6,4,7,8] Les listes sont des mutables ! En tant que mutable , une affectation liste_a = doit \u00eatre utilis\u00e9e en connaissance de cause, en particulier dans des fonctions ! Il est souvent pr\u00e9f\u00e9rable d'utiliser une boucle for et la m\u00e9thode append ! liste_a = [ 1 , 5 , 2 , 6 , 4 , 7 , 8 ] a_inserer = [ 100 , 150 ] # ATTENTION il faut une liste ! M\u00eame pour un \u00e9l\u00e9ment ! for idx in range ( len ( a_inserer )): liste_a . append ( a_inserer [ idx ]) print ( liste_a ) # affiche [1,5,2,6,4,7,8,100,150]","title":"Ins\u00e9rer une cha\u00eene"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/list.html#creer_une_liste","text":"Cr\u00e9er une liste Il suffit ce commencer avec une liste vide et d'accumuler les el\u00e9ments voulus. une_liste = [ 102 , 104 , 97 , 97 , 100 , 97 , 98 , 99 , 104 , 99 ] liste = [] for idx in range ( len ( une_liste )): if une_liste [ idx ] >= 100 : liste . append ( une_liste [ idx ]) print ( liste ) # affiche [102, 104, 100, 104]","title":"Cr\u00e9er une liste"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/list.html#diverses_methodes_autour_des_listes","text":"A apprendre en faisant les exercices [ ] : la liste vide. L=[ ] permet de cr\u00e9er une liste \u00e0 laquelle il sera possible d'ajouter des \u00e9l\u00e9ments 4 in L : retourne True si 4 est dans L , False sinon. L.index(x) : retourne l'indice de l'\u00e9l\u00e9ment x (si il est dans L , sinon il y a un message d'erreur) L.count(x) : retourne le nombre d'occurrences de l'\u00e9l\u00e9ment x (si il est dans la liste L ) L1 == L2 : retourne True si L1 et L2 sont identiques, False sinon. for elt in L : : parcourt la liste L A = L : copie par r\u00e9f\u00e9rence la liste L","title":"Diverses m\u00e9thodes autour des listes"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/list.html#exercices","text":"Exercice","title":"Exercices"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/ortho.html","text":"Bien \u00e9crire en python A retenir Pour bien \u00e9crire un code python, il est indispensable de savoir \u00e9crire des mots, des syntaxes, des phrases (...) en python. Ainsi les principaux mots rencontr\u00e9s sont if, else, elif, while, for, range, def, print, input, int, str . Ils ne commencent JAMAIS par une majuscule ! Soyez attentifs Certains \u00e9l\u00e9ments ne varient jamais ! Ainsi, les lignes commen\u00e7ant par if, else, elif, while, for, def se termine toujours par un \u00ab : \u00bb De plus la ligne suivante commence toujours avec une tabulation de plus que celle avec if, else, elif, while, for, def Exercice Corriger les erreurs dans les codes suivants : 1. If a > 3 print ( \"C'est plus grand que 3 !\" ) 2. for i in Range ( 2 , 5 ): print ( \"Hello !\" ) Solution AFAIRE A retenir Certains mots en python d\u00e9signent des fonctions. Il sont donc suivis de parenth\u00e8ses (sauf dans certains cas cf Callback par exemple !). A l'int\u00e9rieur de ces parenth\u00e8ses, il peut y avoir entre 0 et plusieurs arguments qui seront toutjours s\u00e9par\u00e9s par une virgule. Il faut bien respecter l'ordre impos\u00e9 et le type de chaque argument impos\u00e9. A tout moment dans une console python, vous pouvez obtenir des renseignements sur une fonction en tapant help(nom_de_la_fonction) Au d\u00e9but, vous utiliserez principalement les fonctions range, print, input, int, str . Ainsi, print est une fonction. Il y a donc toujours des parenth\u00e8ses. Elle peut prendre 0 argument mais aussi plusieurs ! print () # n'affiche rien, puis effectue un retour \u00e0 la ligne print ( \"Hello\" ) # affiche Hello, puis effectue un retour \u00e0 la ligne print ( 3 + 5 ) # affiche 8, puis effectue un retour \u00e0 la ligne print ( 3 + 5 , \"hello\" ) # affiche 8 hello (notez l'espace !!), puis effectue un retour \u00e0 la ligne Tr\u00e8s important La fonction range prend obligatoirement au moins un argument ! Ainsi, range() d\u00e9clenche une erreur ! De plus, ces arguments sont toujours de type int ! Ainis, si la variable liste contient une liste, range(liste) d\u00e9clenche une erreur ! Exemple \u00e0 retenir Rque : afin d'avoir une vue pour range (cf iterable ), on le transforme en une liste ! La fonction range avec un argument : list ( range ( 5 )) # affiche [0,1,2,3,4] Plus g\u00e9n\u00e9ralement, range(n) est une (sorte) de liste \u00e0 \\(n\\) \u00e9l\u00e9ments commen\u00e7ant \u00e0 \\(0\\) . Elle se termine donc \u00e0 \\(\\mathbf{n-1}\\) ! La fonction range avec deux arguments : list ( range ( 2 , 7 )) # affiche [2,3,4,5,6] Plus g\u00e9n\u00e9ralement, range(a,b) est une (sorte) de liste \u00e0 \\(b - a\\) \u00e9l\u00e9ments commen\u00e7ant \u00e0 \\(0\\) . Elle se termine donc \u00e0 \\(\\mathbf{b-1}\\) ! Il est possible d'utiliser la fonction range avec trois arguments : cf ici Bilan Quand vous \u00e9crivez, du code python, en particulier sur feuille, pensez \u00e0 v\u00e9rifier ces \u00e9l\u00e9ments &laquo d'orthographe \u00bb","title":"Bien \u00e9crire en python"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/ortho.html#bien_ecrire_en_python","text":"A retenir Pour bien \u00e9crire un code python, il est indispensable de savoir \u00e9crire des mots, des syntaxes, des phrases (...) en python. Ainsi les principaux mots rencontr\u00e9s sont if, else, elif, while, for, range, def, print, input, int, str . Ils ne commencent JAMAIS par une majuscule ! Soyez attentifs Certains \u00e9l\u00e9ments ne varient jamais ! Ainsi, les lignes commen\u00e7ant par if, else, elif, while, for, def se termine toujours par un \u00ab : \u00bb De plus la ligne suivante commence toujours avec une tabulation de plus que celle avec if, else, elif, while, for, def Exercice Corriger les erreurs dans les codes suivants : 1. If a > 3 print ( \"C'est plus grand que 3 !\" ) 2. for i in Range ( 2 , 5 ): print ( \"Hello !\" ) Solution AFAIRE A retenir Certains mots en python d\u00e9signent des fonctions. Il sont donc suivis de parenth\u00e8ses (sauf dans certains cas cf Callback par exemple !). A l'int\u00e9rieur de ces parenth\u00e8ses, il peut y avoir entre 0 et plusieurs arguments qui seront toutjours s\u00e9par\u00e9s par une virgule. Il faut bien respecter l'ordre impos\u00e9 et le type de chaque argument impos\u00e9. A tout moment dans une console python, vous pouvez obtenir des renseignements sur une fonction en tapant help(nom_de_la_fonction) Au d\u00e9but, vous utiliserez principalement les fonctions range, print, input, int, str . Ainsi, print est une fonction. Il y a donc toujours des parenth\u00e8ses. Elle peut prendre 0 argument mais aussi plusieurs ! print () # n'affiche rien, puis effectue un retour \u00e0 la ligne print ( \"Hello\" ) # affiche Hello, puis effectue un retour \u00e0 la ligne print ( 3 + 5 ) # affiche 8, puis effectue un retour \u00e0 la ligne print ( 3 + 5 , \"hello\" ) # affiche 8 hello (notez l'espace !!), puis effectue un retour \u00e0 la ligne Tr\u00e8s important La fonction range prend obligatoirement au moins un argument ! Ainsi, range() d\u00e9clenche une erreur ! De plus, ces arguments sont toujours de type int ! Ainis, si la variable liste contient une liste, range(liste) d\u00e9clenche une erreur ! Exemple \u00e0 retenir Rque : afin d'avoir une vue pour range (cf iterable ), on le transforme en une liste ! La fonction range avec un argument : list ( range ( 5 )) # affiche [0,1,2,3,4] Plus g\u00e9n\u00e9ralement, range(n) est une (sorte) de liste \u00e0 \\(n\\) \u00e9l\u00e9ments commen\u00e7ant \u00e0 \\(0\\) . Elle se termine donc \u00e0 \\(\\mathbf{n-1}\\) ! La fonction range avec deux arguments : list ( range ( 2 , 7 )) # affiche [2,3,4,5,6] Plus g\u00e9n\u00e9ralement, range(a,b) est une (sorte) de liste \u00e0 \\(b - a\\) \u00e9l\u00e9ments commen\u00e7ant \u00e0 \\(0\\) . Elle se termine donc \u00e0 \\(\\mathbf{b-1}\\) ! Il est possible d'utiliser la fonction range avec trois arguments : cf ici Bilan Quand vous \u00e9crivez, du code python, en particulier sur feuille, pensez \u00e0 v\u00e9rifier ces \u00e9l\u00e9ments &laquo d'orthographe \u00bb","title":"Bien \u00e9crire en python"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/str.html","text":"Les cha\u00eenes de caract\u00e8res : str Les indices A retenir Une cha\u00eene de caract\u00e8re est de type str . Elle peut \u00eatre \u00e9crite entre des guillemets simples 'Bonjour !' entre des guillemets doubles \"Bonjour !\" entre des guillemets doubles r\u00e9p\u00e9t\u00e9s trois fois \"\"\"Bonjour !\"\"\" Dans une cha\u00eene, chaque caract\u00e8re est rep\u00e9r\u00e9 par un indice ! cha\u00eene : B o n j o u r ! Indice : 0 1 2 3 4 5 6 7 8 Attention En python, les indices commencent toujours \u00e0 0 ! A conna\u00eetre Dans tout ce qui suit, on utilise l'exemple suivant : mot = \"Bonjour !\" connaitre le nombre de caract\u00e8res ou la longueur d'une cha\u00eene : len(mot) correspond \u00e0 9 acc\u00e9der \u00e0 un caract\u00e8re \u00e0 partir de son indice : mot[2] correspond \u00e0 n acc\u00e9der aux derniers caract\u00e8res : mot[len(mot)-1] correspond \u00e0 ! . On peut aussi \u00e9crire mot[-1] acc\u00e9der \u00e0 une tranche : mot[2:5] correspond aux caract\u00e8res dont les indices sont sup\u00e9rieurs ou \u00e9gaux \u00e0 2 et strictement inf\u00e9rieur \u00e0 5. Ainsi, mot[2:5] correspond \u00e0 njo acc\u00e9der \u00e0 une tranche contenant les premiers caract\u00e8res : mot[0:5] correspond aux 5 premiers caract\u00e8res (dont les indices sont sup\u00e9rieurs ou \u00e9gaux \u00e0 0 et strictement inf\u00e9rieur \u00e0 5). Ainsi, mot[0:5] correspond \u00e0 Bonjo . On peut aussi \u00e9crire mot[:5] acc\u00e9der \u00e0 une tranche depuis le dernier caract\u00e8re : mot[len(mot)-3:len(mot)] correspond aux 3 derniers caract\u00e8res. Ainsi, mot[len(mot)-3:len(mot)] correspond \u00e0 r ! . On peut aussi \u00e9crire ``mot[-3:] acc\u00e9der \u00e0 toute la cha\u00eene sauf les derniers : mot[0:len(mot)-5] correspond \u00e0 toute la cha\u00eene sauf les 5 derniers caract\u00e8res. Ainsi, mot[0:len(mot) - 5] correspond \u00e0 Bonj . On peut aussi \u00e9crire mot[:-5] En r\u00e9sum\u00e9: mot = \"Bonjour !\" print ( len ( mot )) # affiche 9 print ( mot [ 2 ]) # affiche n print ( mot [ len ( mot ) - 1 ]) # affiche ! print ( mot [ - 1 ]) # affiche ! print ( mot [ 2 : 5 ]) # affiche njo print ( mot [ 0 : 5 ]) # affiche Bonjo print ( mot [: 5 ]) # affiche Bonjo print ( mot [ len ( mot ) - 3 : len ( mot )]) # affiche r ! print ( mot [ - 3 :]) # affiche r ! print ( mot [ 0 : len ( mot ) - 5 ]) # affiche Bonj print ( mot [: - 5 ]) # affiche Bonj Attention Le nombre de caract\u00e8res ne correspond pas au dernier indice ! En effet, le dernier indice est toujours len(...) - 1 . Concat\u00e9nation et r\u00e9p\u00e9tition A conna\u00eetre Dans tout ce qui suit, on utilise l'exemple suivant : mot = \"Bonjour !\" mot_suiv = \"Tout le monde !\" La concat\u00e9nation consiste \u00e0 coller plusieurs chaines de caract\u00e8res. Cela s'effectue \u00e0 l'aide du symbole + . Ainsi, mot + \" \" + mot_suiv correspond \u00e0 Bonjour ! Tout le monde ! Pour r\u00e9p\u00e9ter une chaine : mot*2 correspond \u00e0 'Bonjour !Bonjour !' et \"a\"*5 correpsond \u00e0 aaaaa Attention Il faut avoir uniquement des str pour une concat\u00e9nation ! Par exemple \"Bonjour +1000 d\u00e9clenche une erreur : TypeError: can only concatenate str (not \"int\") to str Transtypage Il est possible de transformer presque tous les type en str en utilisant la fonction str ! mot = \"Bonjour \" + str ( 1000 ) print ( mot ) # Affiche Bonjour 1000 Manipulation des cha\u00eenes de caract\u00e8res Parcourir une cha\u00eene de caract\u00e8res Parcourir une cha\u00eene de caract\u00e8res avec des indices Pour r\u00e9cup\u00e9rer les caract\u00e8res d'une cha\u00eene les uns apr\u00e8s les autres avec les indices , il faut utiliser une boucle for , la fonction range et la longueur de la cha\u00eene. mot = \"Bonjour !\" for idx in range ( len ( mot )): car = mot [ idx ] print ( car ) affiche B o n j o u r ! Il est aussi possible de ne pas passer par la variable car : mot = \"Bonjour !\" for idx in range ( len ( mot )): print ( mot [ idx ]) Parcourir une cha\u00eene de caract\u00e8res sans les indices POur r\u00e9cup\u00e9rer les caract\u00e8res d'une cha\u00eene les uns apr\u00e8s les autres sans les indices , il faut seulement utiliser une boucle `for . Il est alors plus difficile d'acc\u00e9der aux indices ! mot = \"Bonjour !\" for car in mot : print ( car ) affiche B o n j o u r ! Modifier une cha\u00eene de caract\u00e8res Attention Une cha\u00eene de caract\u00e8res (type str ) est un non mutable (ou immuable ). Il est donc impossible de faire, par exemple, mot[2] = \"r\" !! Ins\u00e9rer une cha\u00eene Pour modifier une cha\u00eene de caract\u00e8res, il est possible d'utiliser les tranches. Ins\u00e9rer une cha\u00eene On souhaite ins\u00e9rer une cha\u00eene de caract\u00e8res (\u00e9ventuellement un caract\u00e8re seul) dans une cha\u00eene. Par exemple, on souhaite ins\u00e9rer bon entre le n et l'espace dans la cha\u00eene suivante. cha\u00eene : B o n ! Indice : 0 1 2 3 4 Il faut concat\u00e9ner les cha\u00eenes suivantes : la cha\u00eene dont les indices commencent \u00e0 0 et sont strictement inf\u00e9rieur \u00e0 3 (Faite attention \u00e0 ce dernier point !!!) la cha\u00eene que l'on souhaite ins\u00e9rer la cha\u00eene dont les indices vont de l'indice 3 jusqu'au dernier mot = \"Bon !\" a_inserer = \"bon\" mot2 = mot [ 0 : 3 ] + a_inserer + mot [ 3 :] print ( mot2 ) # affiche Bonbon ! Ajouter une cha\u00eene \u00e0 la fin Il est inutile d'utiliser des tranches ! Il suffit de concat\u00e9ner \u00e0 droite. mot = \"Hello\" mot2 = \" world !\" mot3 = mot + mot2 print ( mot3 ) # affiche Hello world ! Ajouter une cha\u00eene au d\u00e9but Il est inutile d'utiliser des tranches ! Il suffit de concat\u00e9ner \u00e0 gauche. mot = \"Jedi\" mot2 = \"Maitre \" mot3 = mot2 + mot print ( mot3 ) # affiche Maitre Jedi Modifier un caract\u00e8re Modifier un caract\u00e8re On souhaite modifier un caract\u00e8re d'une cha\u00eene. Par exemple, on souhaite corriger chebal . cha\u00eene : c h e b a l Indice : 0 1 2 3 4 5 Il faut alors concat\u00e9ner les cha\u00eenes suivantes : la tranche du d\u00e9but jusqu'au caract\u00e8re \u00e0 remplacer le caract\u00e8re de remplacement la tranche commen\u00e7ant apr\u00e8s le caract\u00e8re \u00e0 remplacer mot = \"chebal\" mot2 = mot [ 0 : 3 ] + \"v\" + mot [ 4 :] # voyez la diff\u00e9rence avec l'insertion de la m\u00e9thode pr\u00e9c\u00e9dente print ( mot2 ) # affiche cheval ! Cr\u00e9er une cha\u00eene Cr\u00e9er une cha\u00eene de caract\u00e8res Il suffit de commencer avec une cha\u00eene vide \"\" et d'accumuler les cha\u00eenes de caract\u00e8res voulues. mot_cache = \"SeehccraeCt\" mot = \"\" for idx in range ( len ( mot_cache )): if idx % 2 == 0 : # On ne prend ques les indices pairs mot = mot + mot_cache [ idx ] # On accumule les caract\u00e8res \u00e0 la fin (\u00e0 droite) print ( mot ) # affiche Secret Accumuler au d\u00e9but Il est possible d'accumuler au d\u00e9but (\u00e0 gauche) mot_cache = \"SeehccraeCt\" mot = \"\" for idx in range ( len ( mot_cache )): if idx % 2 == 1 : # On ne prend ques les indices impairs mot = mot_cache [ idx ] + mot # On accumule les caract\u00e8res \u00e0 la fin (\u00e0 droite) print ( mot ) # affiche Cache Diverses m\u00e9thodes autour des str A apprendre en faisant les exercices '' ou \"\" (sans espace) : la cha\u00eene vide. les caract\u00e8res sp\u00e9ciaux : \\n pour le retour \u00e0 la ligne, \\t pour une tabulation 'rrr' in C : retourne True si 'rrr' est dans C , False sinon (cf les bool\u00e9ens ). C.index(x) : retourne l'indice de l'\u00e9l\u00e9ment x (si il est dans C , sinon il y a un message d'erreur) C.find(x) : retourne l'indice de l'\u00e9l\u00e9ment x (si il est dans C , sinon il retourne -1) C.count(x) : retourne le nombre d\u2019occurrences de l'\u00e9l\u00e9ment x . C1 == C2 : retourne True si C1 et C2 sont identiques, False sinon. \\textbf{Attention \u00e0 la casse (majuscule, minuscule) !} Exercice \u00e0 maitriser Exercice Demander un pr\u00e9nom et un age et dire bonjour \u00e0 l'utilisateur en lui donnantson age. Pour une personne de 20 ans qui s'appelle Luke, l'affichage attendu est Bonjour Luke. Vous avez 20 ans. R\u00e9ponse nom = input ( \"Votre nom ? \" ) age = int ( input ( \"Votre age ? \" )) reponse = \"Bonjour \" + nom + \". Vous avez \" + str ( age ) + \" ans.\" print ( reponse ) Exercice A l'aide des taranches, compl\u00e9ter le programme suivant pour obtenir une cha\u00eene o\u00f9 l'alphabet aura \u00e9t\u00e9 remis dans le bonne ordre. melange = \"QRSTABCDELMNUVFGHIJKWXYZOP\" alphabet = ... # compl\u00e9ter avec des tranches print ( alphabet ) # affiche ABCEFGHIJKLMNOPQRSTUVWXYZ R\u00e9ponse melange = \"QRSTABCDELMNUVFGHIJKWXYZOP\" alphabet = melange [ 4 : 9 ] + melange [ 14 : 20 ] + melange [ 9 : 12 ] + melange [ - 2 :] + melange [: 4 ] + melange [ 12 : 14 ] + melange [ 20 : 24 ] print ( alphabet ) # affiche ABCEFGHIJKLMNOPQRSTUVWXYZ Exercice mots=\"La revolution informatique\" . En utilisant les m\u00e9thodes pr\u00e9c\u00e9dentes : Donner le code qui affiche : le nombre de caract\u00e8re de mots ; True si le mot \"la\" est dans mots , False sinon. la position de la premi\u00e8re lettre r ; Et (plus difficile) la seconde ; Donner le code : qui affiche les deux premiers caract\u00e8res de mots qui extrait le mot \"revolution\" de mots qui teste le r\u00e9sultat pr\u00e9c\u00e9dent : c'est-\u00e0-dire qui renvoie 'True' si le code a bien trouv\u00e9 le mot revolution ( False sinon) en utilisant des tranches de la cha\u00eene de caract\u00e8res \\verb mots , affecter \u00e0 la variable modif la cha\u00eene de caract\u00e8re \"informatique revolution La\" . R\u00e9ponse # Quesiton 1.a. print ( len ( mots )) # Quesiton 1.b. print ( 'la' in mots ) # Question 1.c. print ( mots . find ( 'r' )) premier = mots . find ( 'r' ) print ( m [ premier + 1 :] . find ( 'r' )) # Question 2.a. print ( mots [ 0 : 2 ]) #ou print ( mots [: 2 ]) # Question 2.b. print ( mots [ 3 : 13 ]) # Question 2.c. essai = mots [ 3 : 13 ] motCherche = \"revolution\" print ( essai == motCherche ) # Question 2.d. modif = mots [ 14 :] + mots [ 2 : 14 ] + mots [: 2 ] print ( modif ) Exercice Pour un spectacle, le tarif normal est de 25 \u20ac et le tarif r\u00e9duit est de 18 \u20ac. \u00c9crire un programme qui demande \u00e0 l'utilisateur le nombre de place total, puis le nombre de place \u00e0 tarif r\u00e9duit. Afficher alors le prix \u00e0 payer. Par exemple, pour 10 places dont 3 au tarif r\u00e9duit, il faut afficher : Le co\u00fbt total est de 229 euros. R\u00e9ponse nbPlace = int ( input ( \"Nombre de place ? \" )) nbReduit = int ( input ( \"Nombre de tarif r\u00e9duit ? \" )) cout = nbReduit * 18 + ( nbPlace - nbReduit ) * 25 print ( \"Le co\u00fbt total est de\" , cout , \"euros\" ) print ( \"Le co\u00fbt total est de \" + str ( cout ) + \" euros\" ) print ( \"Le co\u00fbt total est de {} euros\" . format ( cout )) Exercice Pour cette exercice, revoir le cours sur if et elif . \u00c9crire un programme qui compte le nombre de voyelles dans la phrase : \u00ab Cela n'a aucun sens d'embaucher des gens intelligents et de leur dire quoi faire; Nous embauchons des gens intelligents pour qu'ils puissent nous dire quoi faire.\u00bb 1 phrase = \"Cela n'a aucun sens d'embaucher des gens intelligents et de leur dire quoi faire; Nous embauchons des gens intelligents pour qu'ils puissent nous dire quoi faire.\" # A COMPLETER R\u00e9ponse phrase = \"Cela n'a aucun sens d'embaucher des gens intelligents et de leur dire quoi faire; Nous embauchons des gens intelligents pour qu'ils puissent nous dire quoi faire.\" compt = 0 for elt in phrase : if elt == 'a' : compt = compt + 1 if elt == 'e' : compt = compt + 1 if elt == 'i' : compt = compt + 1 if elt == 'o' : compt = compt + 1 if elt == 'u' : compt = compt + 1 print ( compt ) Steve Jobs \u21a9","title":"Chaine de caract\u00e8res"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/str.html#les_chaines_de_caracteres_str","text":"","title":"Les cha\u00eenes de caract\u00e8res : str"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/str.html#les_indices","text":"A retenir Une cha\u00eene de caract\u00e8re est de type str . Elle peut \u00eatre \u00e9crite entre des guillemets simples 'Bonjour !' entre des guillemets doubles \"Bonjour !\" entre des guillemets doubles r\u00e9p\u00e9t\u00e9s trois fois \"\"\"Bonjour !\"\"\" Dans une cha\u00eene, chaque caract\u00e8re est rep\u00e9r\u00e9 par un indice ! cha\u00eene : B o n j o u r ! Indice : 0 1 2 3 4 5 6 7 8 Attention En python, les indices commencent toujours \u00e0 0 ! A conna\u00eetre Dans tout ce qui suit, on utilise l'exemple suivant : mot = \"Bonjour !\" connaitre le nombre de caract\u00e8res ou la longueur d'une cha\u00eene : len(mot) correspond \u00e0 9 acc\u00e9der \u00e0 un caract\u00e8re \u00e0 partir de son indice : mot[2] correspond \u00e0 n acc\u00e9der aux derniers caract\u00e8res : mot[len(mot)-1] correspond \u00e0 ! . On peut aussi \u00e9crire mot[-1] acc\u00e9der \u00e0 une tranche : mot[2:5] correspond aux caract\u00e8res dont les indices sont sup\u00e9rieurs ou \u00e9gaux \u00e0 2 et strictement inf\u00e9rieur \u00e0 5. Ainsi, mot[2:5] correspond \u00e0 njo acc\u00e9der \u00e0 une tranche contenant les premiers caract\u00e8res : mot[0:5] correspond aux 5 premiers caract\u00e8res (dont les indices sont sup\u00e9rieurs ou \u00e9gaux \u00e0 0 et strictement inf\u00e9rieur \u00e0 5). Ainsi, mot[0:5] correspond \u00e0 Bonjo . On peut aussi \u00e9crire mot[:5] acc\u00e9der \u00e0 une tranche depuis le dernier caract\u00e8re : mot[len(mot)-3:len(mot)] correspond aux 3 derniers caract\u00e8res. Ainsi, mot[len(mot)-3:len(mot)] correspond \u00e0 r ! . On peut aussi \u00e9crire ``mot[-3:] acc\u00e9der \u00e0 toute la cha\u00eene sauf les derniers : mot[0:len(mot)-5] correspond \u00e0 toute la cha\u00eene sauf les 5 derniers caract\u00e8res. Ainsi, mot[0:len(mot) - 5] correspond \u00e0 Bonj . On peut aussi \u00e9crire mot[:-5] En r\u00e9sum\u00e9: mot = \"Bonjour !\" print ( len ( mot )) # affiche 9 print ( mot [ 2 ]) # affiche n print ( mot [ len ( mot ) - 1 ]) # affiche ! print ( mot [ - 1 ]) # affiche ! print ( mot [ 2 : 5 ]) # affiche njo print ( mot [ 0 : 5 ]) # affiche Bonjo print ( mot [: 5 ]) # affiche Bonjo print ( mot [ len ( mot ) - 3 : len ( mot )]) # affiche r ! print ( mot [ - 3 :]) # affiche r ! print ( mot [ 0 : len ( mot ) - 5 ]) # affiche Bonj print ( mot [: - 5 ]) # affiche Bonj Attention Le nombre de caract\u00e8res ne correspond pas au dernier indice ! En effet, le dernier indice est toujours len(...) - 1 .","title":"Les indices"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/str.html#concatenation_et_repetition","text":"A conna\u00eetre Dans tout ce qui suit, on utilise l'exemple suivant : mot = \"Bonjour !\" mot_suiv = \"Tout le monde !\" La concat\u00e9nation consiste \u00e0 coller plusieurs chaines de caract\u00e8res. Cela s'effectue \u00e0 l'aide du symbole + . Ainsi, mot + \" \" + mot_suiv correspond \u00e0 Bonjour ! Tout le monde ! Pour r\u00e9p\u00e9ter une chaine : mot*2 correspond \u00e0 'Bonjour !Bonjour !' et \"a\"*5 correpsond \u00e0 aaaaa Attention Il faut avoir uniquement des str pour une concat\u00e9nation ! Par exemple \"Bonjour +1000 d\u00e9clenche une erreur : TypeError: can only concatenate str (not \"int\") to str Transtypage Il est possible de transformer presque tous les type en str en utilisant la fonction str ! mot = \"Bonjour \" + str ( 1000 ) print ( mot ) # Affiche Bonjour 1000","title":"Concat\u00e9nation et r\u00e9p\u00e9tition"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/str.html#manipulation_des_chaines_de_caracteres","text":"","title":"Manipulation des cha\u00eenes de caract\u00e8res"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/str.html#parcourir_une_chaine_de_caracteres","text":"Parcourir une cha\u00eene de caract\u00e8res avec des indices Pour r\u00e9cup\u00e9rer les caract\u00e8res d'une cha\u00eene les uns apr\u00e8s les autres avec les indices , il faut utiliser une boucle for , la fonction range et la longueur de la cha\u00eene. mot = \"Bonjour !\" for idx in range ( len ( mot )): car = mot [ idx ] print ( car ) affiche B o n j o u r ! Il est aussi possible de ne pas passer par la variable car : mot = \"Bonjour !\" for idx in range ( len ( mot )): print ( mot [ idx ]) Parcourir une cha\u00eene de caract\u00e8res sans les indices POur r\u00e9cup\u00e9rer les caract\u00e8res d'une cha\u00eene les uns apr\u00e8s les autres sans les indices , il faut seulement utiliser une boucle `for . Il est alors plus difficile d'acc\u00e9der aux indices ! mot = \"Bonjour !\" for car in mot : print ( car ) affiche B o n j o u r !","title":"Parcourir une cha\u00eene de caract\u00e8res"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/str.html#modifier_une_chaine_de_caracteres","text":"Attention Une cha\u00eene de caract\u00e8res (type str ) est un non mutable (ou immuable ). Il est donc impossible de faire, par exemple, mot[2] = \"r\" !!","title":"Modifier une cha\u00eene de caract\u00e8res"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/str.html#inserer_une_chaine","text":"Pour modifier une cha\u00eene de caract\u00e8res, il est possible d'utiliser les tranches. Ins\u00e9rer une cha\u00eene On souhaite ins\u00e9rer une cha\u00eene de caract\u00e8res (\u00e9ventuellement un caract\u00e8re seul) dans une cha\u00eene. Par exemple, on souhaite ins\u00e9rer bon entre le n et l'espace dans la cha\u00eene suivante. cha\u00eene : B o n ! Indice : 0 1 2 3 4 Il faut concat\u00e9ner les cha\u00eenes suivantes : la cha\u00eene dont les indices commencent \u00e0 0 et sont strictement inf\u00e9rieur \u00e0 3 (Faite attention \u00e0 ce dernier point !!!) la cha\u00eene que l'on souhaite ins\u00e9rer la cha\u00eene dont les indices vont de l'indice 3 jusqu'au dernier mot = \"Bon !\" a_inserer = \"bon\" mot2 = mot [ 0 : 3 ] + a_inserer + mot [ 3 :] print ( mot2 ) # affiche Bonbon ! Ajouter une cha\u00eene \u00e0 la fin Il est inutile d'utiliser des tranches ! Il suffit de concat\u00e9ner \u00e0 droite. mot = \"Hello\" mot2 = \" world !\" mot3 = mot + mot2 print ( mot3 ) # affiche Hello world ! Ajouter une cha\u00eene au d\u00e9but Il est inutile d'utiliser des tranches ! Il suffit de concat\u00e9ner \u00e0 gauche. mot = \"Jedi\" mot2 = \"Maitre \" mot3 = mot2 + mot print ( mot3 ) # affiche Maitre Jedi","title":"Ins\u00e9rer une cha\u00eene"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/str.html#modifier_un_caractere","text":"Modifier un caract\u00e8re On souhaite modifier un caract\u00e8re d'une cha\u00eene. Par exemple, on souhaite corriger chebal . cha\u00eene : c h e b a l Indice : 0 1 2 3 4 5 Il faut alors concat\u00e9ner les cha\u00eenes suivantes : la tranche du d\u00e9but jusqu'au caract\u00e8re \u00e0 remplacer le caract\u00e8re de remplacement la tranche commen\u00e7ant apr\u00e8s le caract\u00e8re \u00e0 remplacer mot = \"chebal\" mot2 = mot [ 0 : 3 ] + \"v\" + mot [ 4 :] # voyez la diff\u00e9rence avec l'insertion de la m\u00e9thode pr\u00e9c\u00e9dente print ( mot2 ) # affiche cheval !","title":"Modifier un caract\u00e8re"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/str.html#creer_une_chaine","text":"Cr\u00e9er une cha\u00eene de caract\u00e8res Il suffit de commencer avec une cha\u00eene vide \"\" et d'accumuler les cha\u00eenes de caract\u00e8res voulues. mot_cache = \"SeehccraeCt\" mot = \"\" for idx in range ( len ( mot_cache )): if idx % 2 == 0 : # On ne prend ques les indices pairs mot = mot + mot_cache [ idx ] # On accumule les caract\u00e8res \u00e0 la fin (\u00e0 droite) print ( mot ) # affiche Secret Accumuler au d\u00e9but Il est possible d'accumuler au d\u00e9but (\u00e0 gauche) mot_cache = \"SeehccraeCt\" mot = \"\" for idx in range ( len ( mot_cache )): if idx % 2 == 1 : # On ne prend ques les indices impairs mot = mot_cache [ idx ] + mot # On accumule les caract\u00e8res \u00e0 la fin (\u00e0 droite) print ( mot ) # affiche Cache","title":"Cr\u00e9er une cha\u00eene"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/str.html#diverses_methodes_autour_des_str","text":"A apprendre en faisant les exercices '' ou \"\" (sans espace) : la cha\u00eene vide. les caract\u00e8res sp\u00e9ciaux : \\n pour le retour \u00e0 la ligne, \\t pour une tabulation 'rrr' in C : retourne True si 'rrr' est dans C , False sinon (cf les bool\u00e9ens ). C.index(x) : retourne l'indice de l'\u00e9l\u00e9ment x (si il est dans C , sinon il y a un message d'erreur) C.find(x) : retourne l'indice de l'\u00e9l\u00e9ment x (si il est dans C , sinon il retourne -1) C.count(x) : retourne le nombre d\u2019occurrences de l'\u00e9l\u00e9ment x . C1 == C2 : retourne True si C1 et C2 sont identiques, False sinon. \\textbf{Attention \u00e0 la casse (majuscule, minuscule) !}","title":"Diverses m\u00e9thodes autour des str"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/str.html#exercice_a_maitriser","text":"Exercice Demander un pr\u00e9nom et un age et dire bonjour \u00e0 l'utilisateur en lui donnantson age. Pour une personne de 20 ans qui s'appelle Luke, l'affichage attendu est Bonjour Luke. Vous avez 20 ans. R\u00e9ponse nom = input ( \"Votre nom ? \" ) age = int ( input ( \"Votre age ? \" )) reponse = \"Bonjour \" + nom + \". Vous avez \" + str ( age ) + \" ans.\" print ( reponse ) Exercice A l'aide des taranches, compl\u00e9ter le programme suivant pour obtenir une cha\u00eene o\u00f9 l'alphabet aura \u00e9t\u00e9 remis dans le bonne ordre. melange = \"QRSTABCDELMNUVFGHIJKWXYZOP\" alphabet = ... # compl\u00e9ter avec des tranches print ( alphabet ) # affiche ABCEFGHIJKLMNOPQRSTUVWXYZ R\u00e9ponse melange = \"QRSTABCDELMNUVFGHIJKWXYZOP\" alphabet = melange [ 4 : 9 ] + melange [ 14 : 20 ] + melange [ 9 : 12 ] + melange [ - 2 :] + melange [: 4 ] + melange [ 12 : 14 ] + melange [ 20 : 24 ] print ( alphabet ) # affiche ABCEFGHIJKLMNOPQRSTUVWXYZ Exercice mots=\"La revolution informatique\" . En utilisant les m\u00e9thodes pr\u00e9c\u00e9dentes : Donner le code qui affiche : le nombre de caract\u00e8re de mots ; True si le mot \"la\" est dans mots , False sinon. la position de la premi\u00e8re lettre r ; Et (plus difficile) la seconde ; Donner le code : qui affiche les deux premiers caract\u00e8res de mots qui extrait le mot \"revolution\" de mots qui teste le r\u00e9sultat pr\u00e9c\u00e9dent : c'est-\u00e0-dire qui renvoie 'True' si le code a bien trouv\u00e9 le mot revolution ( False sinon) en utilisant des tranches de la cha\u00eene de caract\u00e8res \\verb mots , affecter \u00e0 la variable modif la cha\u00eene de caract\u00e8re \"informatique revolution La\" . R\u00e9ponse # Quesiton 1.a. print ( len ( mots )) # Quesiton 1.b. print ( 'la' in mots ) # Question 1.c. print ( mots . find ( 'r' )) premier = mots . find ( 'r' ) print ( m [ premier + 1 :] . find ( 'r' )) # Question 2.a. print ( mots [ 0 : 2 ]) #ou print ( mots [: 2 ]) # Question 2.b. print ( mots [ 3 : 13 ]) # Question 2.c. essai = mots [ 3 : 13 ] motCherche = \"revolution\" print ( essai == motCherche ) # Question 2.d. modif = mots [ 14 :] + mots [ 2 : 14 ] + mots [: 2 ] print ( modif ) Exercice Pour un spectacle, le tarif normal est de 25 \u20ac et le tarif r\u00e9duit est de 18 \u20ac. \u00c9crire un programme qui demande \u00e0 l'utilisateur le nombre de place total, puis le nombre de place \u00e0 tarif r\u00e9duit. Afficher alors le prix \u00e0 payer. Par exemple, pour 10 places dont 3 au tarif r\u00e9duit, il faut afficher : Le co\u00fbt total est de 229 euros. R\u00e9ponse nbPlace = int ( input ( \"Nombre de place ? \" )) nbReduit = int ( input ( \"Nombre de tarif r\u00e9duit ? \" )) cout = nbReduit * 18 + ( nbPlace - nbReduit ) * 25 print ( \"Le co\u00fbt total est de\" , cout , \"euros\" ) print ( \"Le co\u00fbt total est de \" + str ( cout ) + \" euros\" ) print ( \"Le co\u00fbt total est de {} euros\" . format ( cout )) Exercice Pour cette exercice, revoir le cours sur if et elif . \u00c9crire un programme qui compte le nombre de voyelles dans la phrase : \u00ab Cela n'a aucun sens d'embaucher des gens intelligents et de leur dire quoi faire; Nous embauchons des gens intelligents pour qu'ils puissent nous dire quoi faire.\u00bb 1 phrase = \"Cela n'a aucun sens d'embaucher des gens intelligents et de leur dire quoi faire; Nous embauchons des gens intelligents pour qu'ils puissent nous dire quoi faire.\" # A COMPLETER R\u00e9ponse phrase = \"Cela n'a aucun sens d'embaucher des gens intelligents et de leur dire quoi faire; Nous embauchons des gens intelligents pour qu'ils puissent nous dire quoi faire.\" compt = 0 for elt in phrase : if elt == 'a' : compt = compt + 1 if elt == 'e' : compt = compt + 1 if elt == 'i' : compt = compt + 1 if elt == 'o' : compt = compt + 1 if elt == 'u' : compt = compt + 1 print ( compt ) Steve Jobs \u21a9","title":"Exercice \u00e0 maitriser"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/while.html","text":"La boucle while A retenir Lorsqu'il faut r\u00e9p\u00e9ter des instructions sans conna\u00eetre \u00e0 l'avance le nombre d'it\u00e9ration, il faut utiliser la boucle while . choix = \"y\" while choix == \"y\" : print ( \"Si vous voulez continuer, taper 'y'\" ) choix = input () print ( \"Au revoir\" ) ATTENTION Le principal danger d'une boucle while est la boucle infinie. Il faut donc imp\u00e9rativement v\u00e9rifier qu'au minimum les instructions dans la boucle permettent de faire \u00e9voluer la condition ! Par exemple: a = 5 while a < 10 : # la condition porte sur a b = a + b Ici, la condition porte sur a et les instructions dans la boucle `while ne font jamais \u00e9voluer cette condition ! Il y a donc une boucle infinie. Malheureusement, cette v\u00e9rification indispensable n'est pas une condition suffisante pour \u00e9viter une boucle infinie ! L'utilisation de variants de boucle permet de s'assurer de la terminaison d'une boucle while ! for vs While M\u00eame si, en th\u00e9orie, il est possible de remplacer les boucles for par des boucles while , il ne faut pas le faire ! En effet, le risque d'une boucle infinie n'existe pas avec la boucle for ! Par contre, lorsqu'il faut parcourir une liste ou une chaine ou un dictionnaire et v\u00e9rifier une condtion, une boucle while est plus adapt\u00e9e ! A \u00e9viter L = [ 5 , 3 , 4 , - 1 , 4 , 6 ] rep = len ( L ) trouve = False for idx in range ( len ( L )): if not ( trouve ) and L [ idx ] < 0 : trouve = True rep = idx print ( rep ) Mieux ! L = [ 5 , 3 , 4 , - 1 , 4 , 6 ] for idx in range ( len ( L )): if L [ idx ] < 0 : break print ( idx ) A pr\u00e9f\u00e9rer idx = 0 L = [ 5 , 3 , 4 , - 1 , 4 , 6 ] while idx < len ( L ) and L [ idx ] >= 0 : idx = idx + 1 print ( idx )","title":"La boucle while"},{"location":"Cours/Premi%C3%A8re%20NSI/Python/Les%20bases/while.html#la_boucle_while","text":"A retenir Lorsqu'il faut r\u00e9p\u00e9ter des instructions sans conna\u00eetre \u00e0 l'avance le nombre d'it\u00e9ration, il faut utiliser la boucle while . choix = \"y\" while choix == \"y\" : print ( \"Si vous voulez continuer, taper 'y'\" ) choix = input () print ( \"Au revoir\" ) ATTENTION Le principal danger d'une boucle while est la boucle infinie. Il faut donc imp\u00e9rativement v\u00e9rifier qu'au minimum les instructions dans la boucle permettent de faire \u00e9voluer la condition ! Par exemple: a = 5 while a < 10 : # la condition porte sur a b = a + b Ici, la condition porte sur a et les instructions dans la boucle `while ne font jamais \u00e9voluer cette condition ! Il y a donc une boucle infinie. Malheureusement, cette v\u00e9rification indispensable n'est pas une condition suffisante pour \u00e9viter une boucle infinie ! L'utilisation de variants de boucle permet de s'assurer de la terminaison d'une boucle while ! for vs While M\u00eame si, en th\u00e9orie, il est possible de remplacer les boucles for par des boucles while , il ne faut pas le faire ! En effet, le risque d'une boucle infinie n'existe pas avec la boucle for ! Par contre, lorsqu'il faut parcourir une liste ou une chaine ou un dictionnaire et v\u00e9rifier une condtion, une boucle while est plus adapt\u00e9e ! A \u00e9viter L = [ 5 , 3 , 4 , - 1 , 4 , 6 ] rep = len ( L ) trouve = False for idx in range ( len ( L )): if not ( trouve ) and L [ idx ] < 0 : trouve = True rep = idx print ( rep ) Mieux ! L = [ 5 , 3 , 4 , - 1 , 4 , 6 ] for idx in range ( len ( L )): if L [ idx ] < 0 : break print ( idx ) A pr\u00e9f\u00e9rer idx = 0 L = [ 5 , 3 , 4 , - 1 , 4 , 6 ] while idx < len ( L ) and L [ idx ] >= 0 : idx = idx + 1 print ( idx )","title":"La boucle while"},{"location":"Cours/Premi%C3%A8re%20STI2D/c01.html","text":"En construction","title":"Premi\u00e8re STI2D"},{"location":"Cours/Premi%C3%A8re%20STI2D/c01.html#en_construction","text":"","title":"En construction"},{"location":"Cours/Premi%C3%A8re%20g%C3%A9n%C3%A9rale/c01.html","text":"En construction","title":"Premi\u00e8re g\u00e9n\u00e9rale"},{"location":"Cours/Premi%C3%A8re%20g%C3%A9n%C3%A9rale/c01.html#en_construction","text":"","title":"En construction"},{"location":"Cours/Seconde/c01.html","text":"En construction seconde","title":"Seconde"},{"location":"Cours/Seconde/c01.html#en_construction","text":"seconde","title":"En construction"},{"location":"Cours/Terminale%20STI2D/c01.html","text":"En construction","title":"Terminale STI2D"},{"location":"Cours/Terminale%20STI2D/c01.html#en_construction","text":"","title":"En construction"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/index_term_G.html","text":"Math\u00e9matiques - Terminale Sp\u00e9cialit\u00e9 Math La progression Rentr\u00e9e D\u00e9rivation, convexit\u00e9 et primitive Suites et r\u00e9currence Loi binomiale Limite de suite Vecteurs de l'espace Limites de fonctions Orthogonalit\u00e9 dans l'espace - Produit scalaire - Equation cart\u00e9sienne Continuit\u00e9 Logarithme n\u00e9p\u00e9rien Equations pram\u00e9triques Equations diff\u00e9rentielles D\u00e9nombrement : arrangements, permutations et combinaison Calcul int\u00e9gral Somme de variables al\u00e9atoires Fonctions trigonom\u00e9triques Loi des grands nombres Naturellement, le travail autour de python se fera tout au long de l'ann\u00e9e. La pr\u00e9paration au grand oral occupera quelques s\u00e9ances avant l'\u00e9preuve \u00e9crite, mais elle occupera surtout des semaines qui suivent l'examen.","title":"Accueil TGEN"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/index_term_G.html#mathematiques_-_terminale_specialite_math","text":"","title":"Math\u00e9matiques - Terminale Sp\u00e9cialit\u00e9 Math"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/index_term_G.html#la_progression","text":"Rentr\u00e9e D\u00e9rivation, convexit\u00e9 et primitive Suites et r\u00e9currence Loi binomiale Limite de suite Vecteurs de l'espace Limites de fonctions Orthogonalit\u00e9 dans l'espace - Produit scalaire - Equation cart\u00e9sienne Continuit\u00e9 Logarithme n\u00e9p\u00e9rien Equations pram\u00e9triques Equations diff\u00e9rentielles D\u00e9nombrement : arrangements, permutations et combinaison Calcul int\u00e9gral Somme de variables al\u00e9atoires Fonctions trigonom\u00e9triques Loi des grands nombres Naturellement, le travail autour de python se fera tout au long de l'ann\u00e9e. La pr\u00e9paration au grand oral occupera quelques s\u00e9ances avant l'\u00e9preuve \u00e9crite, mais elle occupera surtout des semaines qui suivent l'examen.","title":"La progression"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/01_Fonction_derivable.html","text":"Fonction d\u00e9rivable D\u00e9finition Soit \\(f\\) une fonction d\u00e9finie sur un intervalle \\(I\\) contenant \\(a\\) . \\(f\\) est d\u00e9rivable en \\(a\\) de nombre d\u00e9riv\u00e9 \\(f'(a)\\) signifie: \\[ \\lim\\limits_{h\\to 0}\\dfrac{f(a+h)-f(a)}{h}=f'(a) \\] ou encore \\[ \\lim\\limits_{x\\to a}\\dfrac{f(x)-f(a)}{x-a}=f'(a) \\] (avec \\(f'(a)\\) nombre fini ). \\(f\\) est d\u00e9rivable sur \\(I\\) signifie que \\(f\\) est d\u00e9rivable en tout \\(x\\) de \\(I\\) . La fonction d\u00e9riv\u00e9e de \\(f\\) not\u00e9e \\(f'\\) est la fonction qui, \u00e0 tout \\(x\\) de I associe le nombre \\(f'(x)\\) . Exemple Etudier la d\u00e9rivabilit\u00e9 en 2 de la fonction \\(f:x\\mapsto x^2+2\\) . Question Soit \\(h\\neq0\\) \\(\\dfrac{f(2+h)-f(2)}{h}=\\dfrac{(2+h)^2+2-6}{h}= \\dfrac{h^2+4h}{h}=h+4\\) . Or \\[ \\lim_{h \\to 0}(h+4)=4 \\] Donc \\(f\\) est d\u00e9rivable en 2 et \\(f'(2)=4\\) . Exemple Etudier la d\u00e9rivabilit\u00e9 en 0 de la fonction \\(f:x \\mapsto \\sqrt{x}\\) . Question La fonction racine carr\u00e9e est d\u00e9finie pour \\(x\\geq 0\\) . Soit \\(h>0\\) \\(\\dfrac{f(0+h)-f(0)}{h}=\\dfrac{\\sqrt{h}}{h}=\\dfrac{1}{\\sqrt{h}}\\) , or \\[ \\lim_{h \\to 0} \\dfrac{1}{\\sqrt{h}}=+\\infty \\] donc \\[ \\lim_{h \\to 0} \\dfrac{f(0+h)-f(0)}{h}=+\\infty \\] Donc la fonction racine carr\u00e9e n'est pas d\u00e9rivable en 0. Rappel : Le coefficient directeur d'une droite passant par \\(A(x_A,y_B)\\) et $B(x_B,y_B) $ est \\(m= \\dfrac{y_B-y_A}{x_B-x_A}\\) . Interpr\u00e9tation graphique de la d\u00e9rivabilit\u00e9 Si \\(A(a,f(a))\\) et \\(M(x,f(x))\\) alors \\(\\dfrac{f(x)-f(a)}{x-a}\\) est le coefficient directeur de la droite (AM). Lorsque \\(x\\) tend vers \\(a\\) , cette droite (AM) tend vers une position limite la tangente \u00e0 la courbe \\(C_f\\) au point A. Th\u00e9or\u00e8me Dire que \\(f\\) est d\u00e9rivable en \\(a\\) signifie que \\(C_f\\) admet au point \\(A(a,f(a))\\) une tangente \\(T_A\\) non verticale (ou 2 demi-tangentes \u00e0 droites et \u00e0 gauche de A confondues). Le coefficient directeur de la tangente au point d'abscisse \\(a\\) est \\(f'(a)\\) . Une \u00e9quation de la tangente \\(T_A\\) (on dit aussi au point d'abscisse \\(a\\) ) est \\[ y=f'(a)(x-a)+f(a) \\]","title":"Fonction d\u00e9rivable"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/01_Fonction_derivable.html#fonction_derivable","text":"D\u00e9finition Soit \\(f\\) une fonction d\u00e9finie sur un intervalle \\(I\\) contenant \\(a\\) . \\(f\\) est d\u00e9rivable en \\(a\\) de nombre d\u00e9riv\u00e9 \\(f'(a)\\) signifie: \\[ \\lim\\limits_{h\\to 0}\\dfrac{f(a+h)-f(a)}{h}=f'(a) \\] ou encore \\[ \\lim\\limits_{x\\to a}\\dfrac{f(x)-f(a)}{x-a}=f'(a) \\] (avec \\(f'(a)\\) nombre fini ). \\(f\\) est d\u00e9rivable sur \\(I\\) signifie que \\(f\\) est d\u00e9rivable en tout \\(x\\) de \\(I\\) . La fonction d\u00e9riv\u00e9e de \\(f\\) not\u00e9e \\(f'\\) est la fonction qui, \u00e0 tout \\(x\\) de I associe le nombre \\(f'(x)\\) . Exemple Etudier la d\u00e9rivabilit\u00e9 en 2 de la fonction \\(f:x\\mapsto x^2+2\\) . Question Soit \\(h\\neq0\\) \\(\\dfrac{f(2+h)-f(2)}{h}=\\dfrac{(2+h)^2+2-6}{h}= \\dfrac{h^2+4h}{h}=h+4\\) . Or \\[ \\lim_{h \\to 0}(h+4)=4 \\] Donc \\(f\\) est d\u00e9rivable en 2 et \\(f'(2)=4\\) . Exemple Etudier la d\u00e9rivabilit\u00e9 en 0 de la fonction \\(f:x \\mapsto \\sqrt{x}\\) . Question La fonction racine carr\u00e9e est d\u00e9finie pour \\(x\\geq 0\\) . Soit \\(h>0\\) \\(\\dfrac{f(0+h)-f(0)}{h}=\\dfrac{\\sqrt{h}}{h}=\\dfrac{1}{\\sqrt{h}}\\) , or \\[ \\lim_{h \\to 0} \\dfrac{1}{\\sqrt{h}}=+\\infty \\] donc \\[ \\lim_{h \\to 0} \\dfrac{f(0+h)-f(0)}{h}=+\\infty \\] Donc la fonction racine carr\u00e9e n'est pas d\u00e9rivable en 0. Rappel : Le coefficient directeur d'une droite passant par \\(A(x_A,y_B)\\) et $B(x_B,y_B) $ est \\(m= \\dfrac{y_B-y_A}{x_B-x_A}\\) . Interpr\u00e9tation graphique de la d\u00e9rivabilit\u00e9 Si \\(A(a,f(a))\\) et \\(M(x,f(x))\\) alors \\(\\dfrac{f(x)-f(a)}{x-a}\\) est le coefficient directeur de la droite (AM). Lorsque \\(x\\) tend vers \\(a\\) , cette droite (AM) tend vers une position limite la tangente \u00e0 la courbe \\(C_f\\) au point A. Th\u00e9or\u00e8me Dire que \\(f\\) est d\u00e9rivable en \\(a\\) signifie que \\(C_f\\) admet au point \\(A(a,f(a))\\) une tangente \\(T_A\\) non verticale (ou 2 demi-tangentes \u00e0 droites et \u00e0 gauche de A confondues). Le coefficient directeur de la tangente au point d'abscisse \\(a\\) est \\(f'(a)\\) . Une \u00e9quation de la tangente \\(T_A\\) (on dit aussi au point d'abscisse \\(a\\) ) est \\[ y=f'(a)(x-a)+f(a) \\]","title":"Fonction d\u00e9rivable"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation%20-%20les%20bases/01_deriv_base_tgte.html","text":"D\u00e9rivation et tangente : techniques de base Th\u00e9or\u00e8me Si \\(f\\) est une fonction d\u00e9rivable sur \\(I\\) , \\(\\mathcal{C}_f\\) sa courbe repr\u00e9sentative et \\(a\\) est un r\u00e9el de \\(I\\) , alors l'\u00e9quation de la tangente \u00e0 \\(\\mathcal{C}_f\\) au point d'abscisse \\(a\\) est : \\[ y = f'(a)(x-a) + f(a) \\] Exemple Soit \\(f(x) = x^2+3x-5\\) . 1/ D\u00e9terminer l'\u00e9quation de la tangente \u00e0 la courbe de \\(f\\) au point d'abscisse \\(2\\) 2/ Tracer la courbe de \\(f\\) et sa tangente. Solution 1/ \\(f(2) = 5\\) . \\(f'(x) = 2x +3\\) . Donc \\(f'(2) = 7\\) . Ainsi, l'\u00e9quaiton de la tangente est \\(y = 7(x-2) + 5\\) c'est-\u00e0-dire \\(y=7x + 9\\) . 2/ A FAIRE Exemple Soit \\(f\\) une fonction dont la courbe est donn\u00e9e ci-dessous. La droite \\(d\\) est la tangente au point \\(A\\) d'abscisse \\(-1\\) . D\u00e9terminer \\(f'(-1)\\) . Courbe A FAIRE Solution A FAIRE Th\u00e9or\u00e8me Si \\(f\\) est une fonction d\u00e9rivable sur \\(I\\) et si \\(a\\) poss\u00e8de un maximum local en \\(x = a\\) , alors sa tangente au point d'abscisse \\(a\\) a pour coefficient directeur \\(0\\) . Cette tangente est alors horizontale. IMAGE A FAIRE Warning Attention la r\u00e9ciproque est fausse : Il existe des fonctions qui poss\u00e8dent une tangente horizontale et pourtant il n'y a pas de maximum local. C'est le cas de la \\(f(x) = x^3\\) au point d'abscisse \\(0\\) . IMAGE A FAIRE Il est important : de savoir trouver l'\u00e9quation d'une tangente de savoir retrouver un nombre d\u00e9riv\u00e9e \u00e0 partir de la lecture graphique d'une tangente","title":"D\u00e9rivation et tangente"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation%20-%20les%20bases/01_deriv_base_tgte.html#derivation_et_tangente_techniques_de_base","text":"Th\u00e9or\u00e8me Si \\(f\\) est une fonction d\u00e9rivable sur \\(I\\) , \\(\\mathcal{C}_f\\) sa courbe repr\u00e9sentative et \\(a\\) est un r\u00e9el de \\(I\\) , alors l'\u00e9quation de la tangente \u00e0 \\(\\mathcal{C}_f\\) au point d'abscisse \\(a\\) est : \\[ y = f'(a)(x-a) + f(a) \\] Exemple Soit \\(f(x) = x^2+3x-5\\) . 1/ D\u00e9terminer l'\u00e9quation de la tangente \u00e0 la courbe de \\(f\\) au point d'abscisse \\(2\\) 2/ Tracer la courbe de \\(f\\) et sa tangente. Solution 1/ \\(f(2) = 5\\) . \\(f'(x) = 2x +3\\) . Donc \\(f'(2) = 7\\) . Ainsi, l'\u00e9quaiton de la tangente est \\(y = 7(x-2) + 5\\) c'est-\u00e0-dire \\(y=7x + 9\\) . 2/ A FAIRE Exemple Soit \\(f\\) une fonction dont la courbe est donn\u00e9e ci-dessous. La droite \\(d\\) est la tangente au point \\(A\\) d'abscisse \\(-1\\) . D\u00e9terminer \\(f'(-1)\\) . Courbe A FAIRE Solution A FAIRE Th\u00e9or\u00e8me Si \\(f\\) est une fonction d\u00e9rivable sur \\(I\\) et si \\(a\\) poss\u00e8de un maximum local en \\(x = a\\) , alors sa tangente au point d'abscisse \\(a\\) a pour coefficient directeur \\(0\\) . Cette tangente est alors horizontale. IMAGE A FAIRE Warning Attention la r\u00e9ciproque est fausse : Il existe des fonctions qui poss\u00e8dent une tangente horizontale et pourtant il n'y a pas de maximum local. C'est le cas de la \\(f(x) = x^3\\) au point d'abscisse \\(0\\) . IMAGE A FAIRE Il est important : de savoir trouver l'\u00e9quation d'une tangente de savoir retrouver un nombre d\u00e9riv\u00e9e \u00e0 partir de la lecture graphique d'une tangente","title":"D\u00e9rivation et tangente : techniques de base"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation%20-%20les%20bases/02_deriv_base_formule.html","text":"D\u00e9rivation et formule Il est imp\u00e9ratif de connaitre par c\u0153ur les formules suivantes : \\[ \\begin{array}{|c|c|c|c|} \\hline \\rule[-4pt]{0pt}{15pt} \\text{Fonction $f$ d\u00e9finie sur} & \\text{Par :}& \\text{a pour fonction d\u00e9riv\u00e9e}&\\text{la fonction est d\u00e9rivable sur}\\\\ \\hline \\rule[-4pt]{0pt}{15pt} \\mathbf{R} & f(x) = k \\ \\text{(cste)} & f'(x) = 0 & \\mathbf{R} \\\\ \\hline \\rule[-4pt]{0pt}{15pt} \\mathbf{R} & f(x) = x^n \\ \\ n \\in \\mathbb{N},\\ n>0 & f'(x) = nx^{n-1} & \\mathbf{R} \\\\ \\hline \\rule[-4pt]{0pt}{15pt} \\mathbf{R}^* & f(x) = x^n \\ \\ n \\in \\mathbb{Z},\\ n<0 & f'(x) = nx^{n-1} & \\mathbf{R}^* \\\\ \\rule[-12pt]{0pt}{30pt} & \\text{Ou } f(x) = \\frac{1}{x^n} \\ n \\in \\mathbb{N},\\ n \\neq 0 & f'(x) = \\frac{-n}{x^{n+1}} & \\\\ \\hline \\rule[-12pt]{0pt}{30pt} \\left[0;+\\infty \\right[ & f(x) = \\sqrt{x} & f'(x) = \\frac{1}{2 \\sqrt{x}} & ]0;+\\infty[\\\\ \\hline \\rule[-4pt]{0pt}{15pt} \\mathbf{R} & f(x) = \\cos{x} & f'(x) = -\\sin{x} & \\mathbf{R}\\\\ \\hline \\rule[-4pt]{0pt}{15pt} \\mathbf{R} & f(x) = \\sin{x} & f'(x) = \\cos{x} & \\mathbf{R}\\\\ \\hline \\rule[-12pt]{0pt}{30pt} ]0;+\\infty[ & f(x) = \\ln (x) & f'(x) = \\dfrac{1}{x} & ]0;+\\infty[ \\\\ \\hline \\rule[-4pt]{0pt}{15pt} \\mathbf{R} & f(x) = \\text{e}^{x}=\\exp (x) & f'(x) = \\text{e}^{x}=\\exp (x) & \\mathbf{R}\\\\ \\hline \\end{array} \\] Exemple Calculer la d\u00e9riv\u00e9e des fonctions suivantes : \\(f(x) = x^5\\) \\(f(x) = \\dfrac{1}{x^3}\\) Courbe A FAIRE Solution A FAIRE Th\u00e9or\u00e8me Si \\(u\\) et \\(v\\) sont deux fonctions d\u00e9rivables sur \\(I\\) et \\(\\lambda\\) un r\u00e9el, alors : \\(u+v\\) est d\u00e9rivable sur \\(I\\) et pour tout \\(x\\) de \\(I\\) \\((u+v)'(x) = u'(x) + v'(x)\\) \\(\\lambda u\\) est d\u00e9rivable sur \\(I\\) et pour tout \\(x\\) de \\(I\\) : \\((\\lambda u)'(x) = \\lambda \\times u'(x)\\) Exemple Calculer la d\u00e9riv\u00e9e des fonctions suivantes : \\(f(x) = 3x^4-5x^3+2x+1\\) \\(f(x) = \\dfrac{1}{x^3} - 5\\times \\text{e}^{x} - 2\\sqrt{x}\\) Courbe A FAIRE Solution A FAIRE Astuce \\(f(x) = \\dfrac{k}{x^n} = k \\times \\dfrac{1}{x^n}\\) (c'est plus simple que la formule d'un quotient) \\(f(x) = \\dfrac{x^n}{k} = \\dfrac{1}{k} \\times x^n\\) (c'est plus simple que la formule d'un quotient) Exemple Calculer la d\u00e9riv\u00e9e des fonctions suivantes : \\(f(x) = 3x^4-5x^3+2x+1\\) \\(f(x) = \\dfrac{1}{x^3} - 5\\times \\text{e}^{x} - 2\\sqrt{x}\\) Courbe A FAIRE Solution A FAIRE Il est imp\u00e9ratif de connaitre par c\u0153ur les formules suivantes : Si \\(u\\) et \\(v\\) sont deux fonctions d\u00e9rivables sur \\(I\\) : \\[ \\begin{array}{|c|c|c|c|} \\hline \\rule[-4pt]{0pt}{15pt} \\text{Fonction $f$ d\u00e9finie sur} & \\text{Par :}& \\text{a pour fonction d\u00e9riv\u00e9e}&\\text{la fonction est d\u00e9rivable sur}\\\\ \\hline \\rule[-4pt]{0pt}{15pt} I & u + v & u' + v' & I \\\\ \\hline \\rule[-4pt]{0pt}{15pt} I & k \\times u \\text{ (k un r\u00e9el constant)} & k \\times u' & I \\\\ \\hline \\rule[-4pt]{0pt}{15pt} I & u \\times v & u'\\times v + u \\times v' & I \\\\ \\hline \\begin{array}{c} J \\subset I \\text{ tel que }\\\\ \\text{pour tout } x \\in J,\\ v(x) \\neq 0 \\end{array} & \\dfrac{1}{v} & \\dfrac{- v'}{v^2} & \\begin{array}{c} J \\subset I \\text{ tel que }\\\\ \\text{pour tout } x \\in J,\\ v(x) \\neq 0 \\end{array}\\\\ \\hline \\begin{array}{c} J \\subset I \\text{ tel que }\\\\ \\text{pour tout } x \\in J,\\ v(x) \\neq 0 \\end{array}& \\dfrac{u}{v} & \\dfrac{u'v-v'u}{v^2} & \\begin{array}{c} J \\subset I \\text{ tel que }\\\\ \\text{pour tout } x \\in J,\\ v(x) \\neq 0 \\end{array}\\\\ \\hline \\begin{array}{c} J \\subset I \\text{ tel que }\\\\ \\text{pour tout } x \\in J,\\ u(x) \\geq 0 \\end{array}& \\sqrt{u} & \\dfrac{u'}{2 \\sqrt{u}} & \\begin{array}{c} J \\subset I \\text{ tel que }\\\\ \\text{pour tout } x \\in J,\\ u(x) > 0 \\end{array}\\\\ \\hline \\begin{array}{c} v \\text{ est d\u00e9finie sur } J\\\\ u \\text{ est d\u00e9finie sur } I\\\\ \\text{ et } \\forall x \\in I,\\ u(x) \\in J \\end{array}& v \\circ u & u' \\times \\left( v' \\circ u \\right) & I \\\\ \\hline \\end{array} \\] Quant \u00e0 la derni\u00e8re formule du tableau pr\u00e9c\u00e9dent, elle peut s'appliquer aux cas particuliers les plus rencontr\u00e9s : \\[ \\begin{array}{|c|c|c|c|} \\hline \\rule[-4pt]{0pt}{15pt} \\text{Fonction $f$ d\u00e9finie sur} & \\text{Par :}& \\text{a pour fonction d\u00e9riv\u00e9e}&\\text{la fonction est d\u00e9rivable sur}\\\\ \\hline I & \\text{e}^{u}=\\exp (u) & u' \\text{e}^{u}=u' \\exp (u) & I \\\\ \\hline \\rule[-12pt]{0pt}{30pt} \\begin{array}{c} J \\subset I \\text{ tel que }\\\\ \\text{pour tout } x \\in J,\\ u(x) > 0 \\end{array}& \\ln (u) \\ (u>0) & \\dfrac{u'}{u} & \\begin{array}{c} J \\subset I \\text{ tel que }\\\\ \\text{pour tout } x \\in J,\\ u(x) > 0 \\end{array}\\\\ \\hline \\rule[-4pt]{0pt}{15pt} I & \\cos(u) & -u' \\times \\sin (u) & I \\\\ \\hline \\rule[-4pt]{0pt}{15pt} I & \\sin(u) & u' \\times \\cos (u) & I \\\\ \\hline \\rule[-12pt]{0pt}{30pt} mx+p>0 & \\ln(mx+p) & \\dfrac{m}{mx+p} & mx+p>0 \\\\ \\hline \\rule[-4pt]{0pt}{15pt} \\mathbf{R} & \\exp(mx+p)=\\text{e}^{mx+p} & m\\exp(mx+p) = m \\text{e}^{mx+p} & \\mathbf{R} \\\\ \\hline \\mathbf{R} & \\cos(mx+p) & -m\\sin(mx+p) & \\mathbf{R} \\\\ \\hline \\mathbf{R} & \\sin(mx+p) & m\\cos(mx+p) & \\mathbf{R} \\\\ \\hline \\end{array} \\] Exemple A FAIRE Solution A FAIRE Il est indispensable de savoir d\u00e9river les fonctions en utilisant les formules pr\u00e9c\u00e9dents ! Attention Il faut faire attention aux parenth\u00e8ses, invisibles dans les formules pr\u00e9c\u00e9dentes ! Par exemple : \\[ \\left(\\dfrac{u}{v}\\right)'(x) = \\dfrac{(u'(x)) \\times (v(x)) - (v'(x)) \\times (u(x))}{(u(x))^2} \\] Exemple D\u00e9river \\(f(x) = \\dfrac{2x^2-3}{x^3-4}\\) Solution A FAIRE","title":"D\u00e9rivation et formule"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation%20-%20les%20bases/02_deriv_base_formule.html#derivation_et_formule","text":"Il est imp\u00e9ratif de connaitre par c\u0153ur les formules suivantes : \\[ \\begin{array}{|c|c|c|c|} \\hline \\rule[-4pt]{0pt}{15pt} \\text{Fonction $f$ d\u00e9finie sur} & \\text{Par :}& \\text{a pour fonction d\u00e9riv\u00e9e}&\\text{la fonction est d\u00e9rivable sur}\\\\ \\hline \\rule[-4pt]{0pt}{15pt} \\mathbf{R} & f(x) = k \\ \\text{(cste)} & f'(x) = 0 & \\mathbf{R} \\\\ \\hline \\rule[-4pt]{0pt}{15pt} \\mathbf{R} & f(x) = x^n \\ \\ n \\in \\mathbb{N},\\ n>0 & f'(x) = nx^{n-1} & \\mathbf{R} \\\\ \\hline \\rule[-4pt]{0pt}{15pt} \\mathbf{R}^* & f(x) = x^n \\ \\ n \\in \\mathbb{Z},\\ n<0 & f'(x) = nx^{n-1} & \\mathbf{R}^* \\\\ \\rule[-12pt]{0pt}{30pt} & \\text{Ou } f(x) = \\frac{1}{x^n} \\ n \\in \\mathbb{N},\\ n \\neq 0 & f'(x) = \\frac{-n}{x^{n+1}} & \\\\ \\hline \\rule[-12pt]{0pt}{30pt} \\left[0;+\\infty \\right[ & f(x) = \\sqrt{x} & f'(x) = \\frac{1}{2 \\sqrt{x}} & ]0;+\\infty[\\\\ \\hline \\rule[-4pt]{0pt}{15pt} \\mathbf{R} & f(x) = \\cos{x} & f'(x) = -\\sin{x} & \\mathbf{R}\\\\ \\hline \\rule[-4pt]{0pt}{15pt} \\mathbf{R} & f(x) = \\sin{x} & f'(x) = \\cos{x} & \\mathbf{R}\\\\ \\hline \\rule[-12pt]{0pt}{30pt} ]0;+\\infty[ & f(x) = \\ln (x) & f'(x) = \\dfrac{1}{x} & ]0;+\\infty[ \\\\ \\hline \\rule[-4pt]{0pt}{15pt} \\mathbf{R} & f(x) = \\text{e}^{x}=\\exp (x) & f'(x) = \\text{e}^{x}=\\exp (x) & \\mathbf{R}\\\\ \\hline \\end{array} \\] Exemple Calculer la d\u00e9riv\u00e9e des fonctions suivantes : \\(f(x) = x^5\\) \\(f(x) = \\dfrac{1}{x^3}\\) Courbe A FAIRE Solution A FAIRE Th\u00e9or\u00e8me Si \\(u\\) et \\(v\\) sont deux fonctions d\u00e9rivables sur \\(I\\) et \\(\\lambda\\) un r\u00e9el, alors : \\(u+v\\) est d\u00e9rivable sur \\(I\\) et pour tout \\(x\\) de \\(I\\) \\((u+v)'(x) = u'(x) + v'(x)\\) \\(\\lambda u\\) est d\u00e9rivable sur \\(I\\) et pour tout \\(x\\) de \\(I\\) : \\((\\lambda u)'(x) = \\lambda \\times u'(x)\\) Exemple Calculer la d\u00e9riv\u00e9e des fonctions suivantes : \\(f(x) = 3x^4-5x^3+2x+1\\) \\(f(x) = \\dfrac{1}{x^3} - 5\\times \\text{e}^{x} - 2\\sqrt{x}\\) Courbe A FAIRE Solution A FAIRE Astuce \\(f(x) = \\dfrac{k}{x^n} = k \\times \\dfrac{1}{x^n}\\) (c'est plus simple que la formule d'un quotient) \\(f(x) = \\dfrac{x^n}{k} = \\dfrac{1}{k} \\times x^n\\) (c'est plus simple que la formule d'un quotient) Exemple Calculer la d\u00e9riv\u00e9e des fonctions suivantes : \\(f(x) = 3x^4-5x^3+2x+1\\) \\(f(x) = \\dfrac{1}{x^3} - 5\\times \\text{e}^{x} - 2\\sqrt{x}\\) Courbe A FAIRE Solution A FAIRE Il est imp\u00e9ratif de connaitre par c\u0153ur les formules suivantes : Si \\(u\\) et \\(v\\) sont deux fonctions d\u00e9rivables sur \\(I\\) : \\[ \\begin{array}{|c|c|c|c|} \\hline \\rule[-4pt]{0pt}{15pt} \\text{Fonction $f$ d\u00e9finie sur} & \\text{Par :}& \\text{a pour fonction d\u00e9riv\u00e9e}&\\text{la fonction est d\u00e9rivable sur}\\\\ \\hline \\rule[-4pt]{0pt}{15pt} I & u + v & u' + v' & I \\\\ \\hline \\rule[-4pt]{0pt}{15pt} I & k \\times u \\text{ (k un r\u00e9el constant)} & k \\times u' & I \\\\ \\hline \\rule[-4pt]{0pt}{15pt} I & u \\times v & u'\\times v + u \\times v' & I \\\\ \\hline \\begin{array}{c} J \\subset I \\text{ tel que }\\\\ \\text{pour tout } x \\in J,\\ v(x) \\neq 0 \\end{array} & \\dfrac{1}{v} & \\dfrac{- v'}{v^2} & \\begin{array}{c} J \\subset I \\text{ tel que }\\\\ \\text{pour tout } x \\in J,\\ v(x) \\neq 0 \\end{array}\\\\ \\hline \\begin{array}{c} J \\subset I \\text{ tel que }\\\\ \\text{pour tout } x \\in J,\\ v(x) \\neq 0 \\end{array}& \\dfrac{u}{v} & \\dfrac{u'v-v'u}{v^2} & \\begin{array}{c} J \\subset I \\text{ tel que }\\\\ \\text{pour tout } x \\in J,\\ v(x) \\neq 0 \\end{array}\\\\ \\hline \\begin{array}{c} J \\subset I \\text{ tel que }\\\\ \\text{pour tout } x \\in J,\\ u(x) \\geq 0 \\end{array}& \\sqrt{u} & \\dfrac{u'}{2 \\sqrt{u}} & \\begin{array}{c} J \\subset I \\text{ tel que }\\\\ \\text{pour tout } x \\in J,\\ u(x) > 0 \\end{array}\\\\ \\hline \\begin{array}{c} v \\text{ est d\u00e9finie sur } J\\\\ u \\text{ est d\u00e9finie sur } I\\\\ \\text{ et } \\forall x \\in I,\\ u(x) \\in J \\end{array}& v \\circ u & u' \\times \\left( v' \\circ u \\right) & I \\\\ \\hline \\end{array} \\] Quant \u00e0 la derni\u00e8re formule du tableau pr\u00e9c\u00e9dent, elle peut s'appliquer aux cas particuliers les plus rencontr\u00e9s : \\[ \\begin{array}{|c|c|c|c|} \\hline \\rule[-4pt]{0pt}{15pt} \\text{Fonction $f$ d\u00e9finie sur} & \\text{Par :}& \\text{a pour fonction d\u00e9riv\u00e9e}&\\text{la fonction est d\u00e9rivable sur}\\\\ \\hline I & \\text{e}^{u}=\\exp (u) & u' \\text{e}^{u}=u' \\exp (u) & I \\\\ \\hline \\rule[-12pt]{0pt}{30pt} \\begin{array}{c} J \\subset I \\text{ tel que }\\\\ \\text{pour tout } x \\in J,\\ u(x) > 0 \\end{array}& \\ln (u) \\ (u>0) & \\dfrac{u'}{u} & \\begin{array}{c} J \\subset I \\text{ tel que }\\\\ \\text{pour tout } x \\in J,\\ u(x) > 0 \\end{array}\\\\ \\hline \\rule[-4pt]{0pt}{15pt} I & \\cos(u) & -u' \\times \\sin (u) & I \\\\ \\hline \\rule[-4pt]{0pt}{15pt} I & \\sin(u) & u' \\times \\cos (u) & I \\\\ \\hline \\rule[-12pt]{0pt}{30pt} mx+p>0 & \\ln(mx+p) & \\dfrac{m}{mx+p} & mx+p>0 \\\\ \\hline \\rule[-4pt]{0pt}{15pt} \\mathbf{R} & \\exp(mx+p)=\\text{e}^{mx+p} & m\\exp(mx+p) = m \\text{e}^{mx+p} & \\mathbf{R} \\\\ \\hline \\mathbf{R} & \\cos(mx+p) & -m\\sin(mx+p) & \\mathbf{R} \\\\ \\hline \\mathbf{R} & \\sin(mx+p) & m\\cos(mx+p) & \\mathbf{R} \\\\ \\hline \\end{array} \\] Exemple A FAIRE Solution A FAIRE Il est indispensable de savoir d\u00e9river les fonctions en utilisant les formules pr\u00e9c\u00e9dents ! Attention Il faut faire attention aux parenth\u00e8ses, invisibles dans les formules pr\u00e9c\u00e9dentes ! Par exemple : \\[ \\left(\\dfrac{u}{v}\\right)'(x) = \\dfrac{(u'(x)) \\times (v(x)) - (v'(x)) \\times (u(x))}{(u(x))^2} \\] Exemple D\u00e9river \\(f(x) = \\dfrac{2x^2-3}{x^3-4}\\) Solution A FAIRE","title":"D\u00e9rivation et formule"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation%20-%20les%20bases/03_deriv_utilis.html","text":"Utilisation de la d\u00e9rivation D\u00e9rivation et variations Dans la plupart des \u00e9nonc\u00e9s, vous serez amen\u00e9s \u00e0 d\u00e9river afin d'\u00e9tudier les variations d'une fonction. Mais, il est aussi possible de calculer une d\u00e9riv\u00e9e afin : d'\u00e9tudier la convexit\u00e9 d'une fonction et donc d'\u00e9tablir des in\u00e9galit\u00e9s (cf lien AFAIRE ) de v\u00e9rifier si une fonction est une primitive (cf lien AFAIRE ) de v\u00e9rifier si une fonction est une solution d'une \u00e9quation diff\u00e9rentielle de faire encore plus lors de vos futures \u00e9tudes ! Th\u00e9or\u00e8me Soit \\(f\\) une fonction d\u00e9rivable sur un intervalle \\(I\\) . \\(f'\\) est positive sur \\(I\\) \u00e9quivaut \u00e0 \\(f\\) est croissante sur \\(I\\) \\(f'\\) est n\u00e9gative sur \\(I\\) \u00e9quivaut \u00e0 \\(f\\) est d\u00e9croissante sur \\(I\\) \\(f'\\) est nulle sur \\(I\\) \u00e9quivaut \u00e0 \\(f\\) est constante sur \\(I\\) . Rappel : tableau de signe ( lien AFAIRE ), etude de signe et maximum et/ou minimum ( lien AFAIRE ), etude du signe d'un second degr\u00e9 ( lien AFAIRE ), \u00e9tude du signe d'une expression contenant une exponentielle ( lien vers premi\u00e8re AFAIRE et lien vers term et \\(\\ln\\) AFAIRE ), \u00e9tude du signe d'une expression contenant un logarithme ( lien vers premi\u00e8re AFAIRE et lien vers term et \\(\\ln\\) AFAIRE ). Exemple AFAIRE Th\u00e9or\u00e8me Soit \\(f\\) une fonction d\u00e9finie sur \\(I\\) et \\(a\\) r\u00e9el de \\(I\\) . Si \\(f'\\) s'annule en changeant de signe , alors \\(f\\) poss\u00e8de un extremum local au point d'abscisse \\(a\\) . En pratique, ce th\u00e9or\u00e8me n'est pas cit\u00e9 ! Mais il se voit au travers du tableau de variations ! Exemple AFAIRE D\u00e9riv\u00e9e seconde Exemple Soit \\(f\\) une fonction d\u00e9rivable sur \\(I\\) et \\(f'\\) sa d\u00e9riv\u00e9e. Si \\(f'\\) est d\u00e9rivable sur \\(I\\) , alors on dit que \\(f\\) est deux fois d\u00e9rivable. La d\u00e9riv\u00e9e de \\(f'\\) est appel\u00e9e la d\u00e9riv\u00e9e seconde de \\(f\\) est est not\u00e9e \\(f''\\) . Naturellement, il est possible de d\u00e9finir de fa\u00e7on analogue la d\u00e9riv\u00e9e troisi\u00e8me, quatri\u00e8me, \\(\\ldots\\) n-i\u00e8me. En physique, on utilise parfois la notation diff\u00e9rentielle : si la variable est \\(x\\) , \\(f'\\) se note \\(\\dfrac{\\text{d}f}{\\text{d}x}\\) et \\(f''\\) se note alors \\(\\dfrac{\\text{d}^2 f}{\\text{d}x^2}\\) . Cette notion de d\u00e9riv\u00e9e seconde peut se rencontrer avec les calculs de vitesse et d'acc\u00e9l\u00e9ration. Exemple Calculer la d\u00e9riv\u00e9e seconde des fonctions suivantes : \\(f(x)=x^3-5x^2+3x-1\\) \\(g(x)=5x-\\text{e}^x\\)","title":"Utilisation de la d\u00e9riv\u00e9e"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation%20-%20les%20bases/03_deriv_utilis.html#utilisation_de_la_derivation","text":"","title":"Utilisation de la d\u00e9rivation"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation%20-%20les%20bases/03_deriv_utilis.html#derivation_et_variations","text":"Dans la plupart des \u00e9nonc\u00e9s, vous serez amen\u00e9s \u00e0 d\u00e9river afin d'\u00e9tudier les variations d'une fonction. Mais, il est aussi possible de calculer une d\u00e9riv\u00e9e afin : d'\u00e9tudier la convexit\u00e9 d'une fonction et donc d'\u00e9tablir des in\u00e9galit\u00e9s (cf lien AFAIRE ) de v\u00e9rifier si une fonction est une primitive (cf lien AFAIRE ) de v\u00e9rifier si une fonction est une solution d'une \u00e9quation diff\u00e9rentielle de faire encore plus lors de vos futures \u00e9tudes ! Th\u00e9or\u00e8me Soit \\(f\\) une fonction d\u00e9rivable sur un intervalle \\(I\\) . \\(f'\\) est positive sur \\(I\\) \u00e9quivaut \u00e0 \\(f\\) est croissante sur \\(I\\) \\(f'\\) est n\u00e9gative sur \\(I\\) \u00e9quivaut \u00e0 \\(f\\) est d\u00e9croissante sur \\(I\\) \\(f'\\) est nulle sur \\(I\\) \u00e9quivaut \u00e0 \\(f\\) est constante sur \\(I\\) . Rappel : tableau de signe ( lien AFAIRE ), etude de signe et maximum et/ou minimum ( lien AFAIRE ), etude du signe d'un second degr\u00e9 ( lien AFAIRE ), \u00e9tude du signe d'une expression contenant une exponentielle ( lien vers premi\u00e8re AFAIRE et lien vers term et \\(\\ln\\) AFAIRE ), \u00e9tude du signe d'une expression contenant un logarithme ( lien vers premi\u00e8re AFAIRE et lien vers term et \\(\\ln\\) AFAIRE ). Exemple AFAIRE Th\u00e9or\u00e8me Soit \\(f\\) une fonction d\u00e9finie sur \\(I\\) et \\(a\\) r\u00e9el de \\(I\\) . Si \\(f'\\) s'annule en changeant de signe , alors \\(f\\) poss\u00e8de un extremum local au point d'abscisse \\(a\\) . En pratique, ce th\u00e9or\u00e8me n'est pas cit\u00e9 ! Mais il se voit au travers du tableau de variations ! Exemple AFAIRE","title":"D\u00e9rivation et variations"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation%20-%20les%20bases/03_deriv_utilis.html#derivee_seconde","text":"Exemple Soit \\(f\\) une fonction d\u00e9rivable sur \\(I\\) et \\(f'\\) sa d\u00e9riv\u00e9e. Si \\(f'\\) est d\u00e9rivable sur \\(I\\) , alors on dit que \\(f\\) est deux fois d\u00e9rivable. La d\u00e9riv\u00e9e de \\(f'\\) est appel\u00e9e la d\u00e9riv\u00e9e seconde de \\(f\\) est est not\u00e9e \\(f''\\) . Naturellement, il est possible de d\u00e9finir de fa\u00e7on analogue la d\u00e9riv\u00e9e troisi\u00e8me, quatri\u00e8me, \\(\\ldots\\) n-i\u00e8me. En physique, on utilise parfois la notation diff\u00e9rentielle : si la variable est \\(x\\) , \\(f'\\) se note \\(\\dfrac{\\text{d}f}{\\text{d}x}\\) et \\(f''\\) se note alors \\(\\dfrac{\\text{d}^2 f}{\\text{d}x^2}\\) . Cette notion de d\u00e9riv\u00e9e seconde peut se rencontrer avec les calculs de vitesse et d'acc\u00e9l\u00e9ration. Exemple Calculer la d\u00e9riv\u00e9e seconde des fonctions suivantes : \\(f(x)=x^3-5x^2+3x-1\\) \\(g(x)=5x-\\text{e}^x\\)","title":"D\u00e9riv\u00e9e seconde"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation%20-%20les%20bases/04_deriv_composee.html","text":"Composition de fonctions D\u00e9finition D\u00e9finition Soient \\(u\\) une fonction d\u00e9finie sur un intervalle \\(I\\) \u00e0 valeurs dans un intervalle \\(J\\) et \\(v\\) une fonction d\u00e9finie sur l'intervalle \\(J\\) . La compos\u00e9e de \\(\\mathbf{u}\\) par \\(\\mathbf{v}\\) , not\u00e9e \\(v \\circ u\\) , est la fonction d\u00e9finie sur \\(I\\) par : \\[ (v \\circ u) (x) = v(u(x)) \\] image AFAIRE Exemple On note \\(u(x)=x^2-1\\) , et \\(v(x)=\\sqrt{x}\\) . D\u00e9terminer \\(v \\circ u\\) d\u00e9finie sur \\(I=]-\\infty ; -1] \\cup [1; + \\infty[\\) \\(u \\circ v\\) d\u00e9finie sur \\(I=[0;+\\infty[\\) Solution \\((v \\circ u)(x)=\\sqrt{x^2-1}\\) . \\((u \\circ v)(x)=\\sqrt{x}^2-1=x-1\\) . Vous aurez surtout besoin de savoir \u00e9crire une fonction comme \u00e9tant la compos\u00e9e de deux fonctions de \u00ab r\u00e9f\u00e9rence \u00bb. Exemple Ecrire les fonctions suivantes comme la compos\u00e9e de deux fonctions \u00e0 d\u00e9terminer : \\(f(x)=\\text{e}^{x^2+x}\\) \\(g(x)=\\cos(3x+1)\\) \\(h(x)=\\text{e}^{2x}+3\\text{e}^{x}-5\\) Solution \\(f(x)=(v \\circ u)(x)\\) o\u00f9 \\(u(x)=x^2+x\\) et \\(v(x)=\\text{e}^x\\) \\(g(x)=(v \\circ u)(x)\\) o\u00f9 \\(u(x)=3x+1\\) et \\(v(x)=\\cos(x)\\) \\(h(x)=(v \\circ u)(x)\\) o\u00f9 \\(u(x)=\\text{e}^x\\) et \\(v(x)=x^2+3x-5\\) D\u00e9riv\u00e9e d'une compos\u00e9e. Th\u00e9or\u00e8me Soient \\(v\\) une fonction d\u00e9finie et d\u00e9rivable sur \\(J\\) et \\(u\\) une fonction d\u00e9finie et d\u00e9rivable sur \\(I\\) tel que \\(u(x) \\in J\\) pour tout \\(x \\in I\\) , alors la fonction \\(v \\circ u\\) est d\u00e9rivable sur \\(I\\) et : \\[ (v \\circ u)'(x)=u'(x) \\times v'(u(x)) \\] On note cette formule \\((v \\circ u)'=u' \\times (v' \\circ u)\\) Exemple Apr\u00e8s avoir d\u00e9terminer le domaine de d\u00e9rivabilit\u00e9, calculer la fonction d\u00e9riv\u00e9e des fonctions suivantes : \\(f(x)=\\text{e}^{x^2-5x}\\) \\(g(x)=\\sqrt{2-5x}\\) \\(h(x)=\\text{e}^{4x+7}\\) \\(k(x)=(x^2-2x+1)^3\\) Solution AFAIRE Remarque Dans le tableau des formules de d\u00e9rivations , les cas particuliers rendent optionnels cette formule ... cette ann\u00e9e de terminale uniquement . Par contre, \u00e9crire une fonction comme compos\u00e9e de deux fonctions est indispensable pour des calculs de limite. Et cela d\u00e8s cette ann\u00e9e !","title":"Compos\u00e9e de fonctions"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation%20-%20les%20bases/04_deriv_composee.html#composition_de_fonctions","text":"","title":"Composition de fonctions"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation%20-%20les%20bases/04_deriv_composee.html#definition","text":"D\u00e9finition Soient \\(u\\) une fonction d\u00e9finie sur un intervalle \\(I\\) \u00e0 valeurs dans un intervalle \\(J\\) et \\(v\\) une fonction d\u00e9finie sur l'intervalle \\(J\\) . La compos\u00e9e de \\(\\mathbf{u}\\) par \\(\\mathbf{v}\\) , not\u00e9e \\(v \\circ u\\) , est la fonction d\u00e9finie sur \\(I\\) par : \\[ (v \\circ u) (x) = v(u(x)) \\] image AFAIRE Exemple On note \\(u(x)=x^2-1\\) , et \\(v(x)=\\sqrt{x}\\) . D\u00e9terminer \\(v \\circ u\\) d\u00e9finie sur \\(I=]-\\infty ; -1] \\cup [1; + \\infty[\\) \\(u \\circ v\\) d\u00e9finie sur \\(I=[0;+\\infty[\\) Solution \\((v \\circ u)(x)=\\sqrt{x^2-1}\\) . \\((u \\circ v)(x)=\\sqrt{x}^2-1=x-1\\) . Vous aurez surtout besoin de savoir \u00e9crire une fonction comme \u00e9tant la compos\u00e9e de deux fonctions de \u00ab r\u00e9f\u00e9rence \u00bb. Exemple Ecrire les fonctions suivantes comme la compos\u00e9e de deux fonctions \u00e0 d\u00e9terminer : \\(f(x)=\\text{e}^{x^2+x}\\) \\(g(x)=\\cos(3x+1)\\) \\(h(x)=\\text{e}^{2x}+3\\text{e}^{x}-5\\) Solution \\(f(x)=(v \\circ u)(x)\\) o\u00f9 \\(u(x)=x^2+x\\) et \\(v(x)=\\text{e}^x\\) \\(g(x)=(v \\circ u)(x)\\) o\u00f9 \\(u(x)=3x+1\\) et \\(v(x)=\\cos(x)\\) \\(h(x)=(v \\circ u)(x)\\) o\u00f9 \\(u(x)=\\text{e}^x\\) et \\(v(x)=x^2+3x-5\\)","title":"D\u00e9finition"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation%20-%20les%20bases/04_deriv_composee.html#derivee_dune_composee","text":"Th\u00e9or\u00e8me Soient \\(v\\) une fonction d\u00e9finie et d\u00e9rivable sur \\(J\\) et \\(u\\) une fonction d\u00e9finie et d\u00e9rivable sur \\(I\\) tel que \\(u(x) \\in J\\) pour tout \\(x \\in I\\) , alors la fonction \\(v \\circ u\\) est d\u00e9rivable sur \\(I\\) et : \\[ (v \\circ u)'(x)=u'(x) \\times v'(u(x)) \\] On note cette formule \\((v \\circ u)'=u' \\times (v' \\circ u)\\) Exemple Apr\u00e8s avoir d\u00e9terminer le domaine de d\u00e9rivabilit\u00e9, calculer la fonction d\u00e9riv\u00e9e des fonctions suivantes : \\(f(x)=\\text{e}^{x^2-5x}\\) \\(g(x)=\\sqrt{2-5x}\\) \\(h(x)=\\text{e}^{4x+7}\\) \\(k(x)=(x^2-2x+1)^3\\) Solution AFAIRE Remarque Dans le tableau des formules de d\u00e9rivations , les cas particuliers rendent optionnels cette formule ... cette ann\u00e9e de terminale uniquement . Par contre, \u00e9crire une fonction comme compos\u00e9e de deux fonctions est indispensable pour des calculs de limite. Et cela d\u00e8s cette ann\u00e9e !","title":"D\u00e9riv\u00e9e d'une compos\u00e9e."},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation%20-%20les%20bases/05_Convexite.html","text":"Convexit\u00e9 Premi\u00e8re approche Une s\u00e9cante, une corde Soit \\(f\\) une fonction et \\(\\mathcal{C}_f\\) sa courbe repr\u00e9sentative dans un rep\u00e8re. Soient \\(A\\) et \\(B\\) deux points distincts de \\(\\mathcal{C}_f\\) , la droite \\((AB)\\) est appel\u00e9e s\u00e9cante de \\(\\mathcal{C}_f\\) . Par ailleurs, le segement \\([AB]\\) est appel\u00e9 corde \\([AB]\\) . Deux s\u00e9cantes : (AB) et (AC) On remarque Convexe Soit une fonction et \\(\\mathcal{C}_f\\) sa courbe repr\u00e9sentative dans un rep\u00e8re. On dit que \\(f\\) est convexe sur un intervalle \\(I\\) si \\(\\mathcal{C}_f\\) est en dessous de toutes ses s\u00e9cantes entre les deux points d'intersection, c'est-\u00e0-dire en dessous des cordes associ\u00e9es. Une fonction convexe sur son domaine La fonction exponentielle est au-dessous de ses s\u00e9cantes sur \\(\\mathbb{R}\\) ! Elle est convexe sur \\(\\mathbb{R}\\) (pas encore d\u00e9montr\u00e9). Concave Soit une fonction et \\(\\mathcal{C}_f\\) sa courbe repr\u00e9sentative dans un rep\u00e8re. On dit que \\(f\\) est concave sur un intervalle \\(I\\) si pour tout r\u00e9el \\(x\\) de \\(I\\) , \\(\\mathcal{C}_f\\) est au-dessus de chacune de ses s\u00e9cantes entre les deux points d'intersection. Une fonction concave sur son domaine Cette fonction (qui est la fonction logarithme) est au-dessus de ses s\u00e9cantes sur \\([0; +\\infty[\\) ! Elle est concave sur \\([0; +\\infty[\\) (pas encore d\u00e9montr\u00e9). Attention Il faut toujours pr\u00e9ciser l'intervalle sur lequel une fonction est convexe (ou concave) ! Attention Une fonction qui n'est pas convexe sur un intervalle \\(I\\) n'est pas une fonction concave sur \\(I\\) !! Comme pour le sens de variations, il faudra le plus souvent d\u00e9crire la convexit\u00e9 d'une fonction. Par exemple, une fonction est convexe sur \\([-5;2]\\) , concave sur \\([2;10]\\) et convexe sur \\([10; + \\infty[\\) . Une fonction quelconque Cette fonction est au-dessus de ses s\u00e9cantes sur \\(]-\\infty; 1]\\) ! Elle est concave sur \\(]-\\infty; 1]\\) (pas encore d\u00e9montr\u00e9). Cette fonction est au-dessous de ses s\u00e9cantes sur \\([1; +\\infty[\\) ! Elle est convexe sur \\([1; +\\infty[\\) (pas encore d\u00e9montr\u00e9). Une d\u00e9finition presque inutilisable Il est plut\u00f4t compliqu\u00e9 de d\u00e9montrer qu'une courbe est au-dessous au-dessus de toutes ses s\u00e9cantes sur un intervalle. Aussi, ne cherchez pas \u00e0 le faire ! Les th\u00e9or\u00e8mes ci-dessous sont beaucoup plus simples d'utilisation. L'\u00e9tude de la convexit\u00e9 d'une fonction permet (entre autre) d'affiner la compr\u00e9hension de son comportement : cela permet de savoir si la croissance \u00ab acc\u00e9l\u00e8re \u00bb ou \u00ab ralentit \u00bb. Convexit\u00e9 et d\u00e9rivation Convexe et d\u00e9rivation Soit \\(f\\) une fonction d\u00e9finie et deux fois d\u00e9rivable sur un intervalle I. \\(f\\) est convexe sur \\(I\\) \u00e9quivaut \u00e0 \\(f'\\) est croissante sur \\(I\\) . \\(f\\) est convexe sur \\(I\\) \u00e9quivaut \u00e0 \\(f''\\) est positive sur \\(I\\) . \\(f\\) est convexe sur \\(I\\) \u00e9quivaut \u00e0 \\(\\mathcal{C}_f\\) est au-dessus de ses tangentes sur \\(I\\) . Concave et d\u00e9rivation Soit \\(f\\) une fonction d\u00e9finie et deux fois d\u00e9rivable sur un intervalle I. \\(f\\) est concave sur \\(I\\) \u00e9quivaut \u00e0 \\(f'\\) est d\u00e9croissante sur \\(I\\) . \\(f\\) est concave sur \\(I\\) \u00e9quivaut \u00e0 \\(f''\\) est n\u00e9gative sur \\(I\\) . \\(f\\) est concave sur \\(I\\) \u00e9quivaut \u00e0 \\(\\mathcal{C}_f\\) est au-dessous de ses tangentes sur \\(I\\) . tangente et convexti\u00e9 Avec la convexit\u00e9 (resp. concavit\u00e9), la position relative entre une courbe et ses tangentes n'est connue que sur l'intervalle o\u00f9 la fonction est convexe (resp. concave). Courbe et tangente Cette fonction est concave sur \\(]-\\infty; 1]\\) . Elle est au-dessous de ses tangentes uniquement sur \\(]-\\infty; 1]\\) ! On remarque que la courbe passe en dessus de la tangente trac\u00e9e un peu plus loin sur \\([1; +\\infty[\\) . Cette fonction est convexe sur \\([1; +\\infty[\\) . Elle est au-dessus de ses tangentes uniquement sur \\([1; +\\infty[\\) ! On remarque que la courbe passe en dessous de la tangente trac\u00e9e un peu plus loin sur \\(]-\\infty; 1]\\) . Point d'inflexion Il est int\u00e9ressant de trouver le moment o\u00f9 se produit le changement de convexit\u00e9. D'o\u00f9 la d\u00e9finition : Point d'inflexion Un point d'inflexion est un point o\u00f9 la courbe repr\u00e9sentative d'une fonction traverse sa tangente. Caract\u00e9risation d'un point d'inflexion Soit \\(f\\) une fonction d\u00e9finie sur un intervalle \\(I\\) et \\(a\\) un r\u00e9el de \\(I\\) . Le point \\(A(a;f(a))\\) est un point d'inflexion de \\(\\mathcal{C}_f\\) si et seulement si la convexit\u00e9 de \\(f\\) change en \\(a\\) . Si de plus \\(f\\) est deux fois d\u00e9rivable sur \\(I\\) , alors le point \\(A(a;f(a))\\) est un point d'inflexion si et seulement \\(f''\\) s'annule et change de signe en \\(a\\) . Astuce Il est \u00e9vident que, pour trouver un point d'inflexion, le plus simple est d'\u00e9tudier le signe de \\(f''\\) ! Attention La seule r\u00e9solution de \\(f''(x) = 0\\) ne permet pas de conclure ! Il faut en plus savoir si la d\u00e9riv\u00e9e seconde change de signe !","title":"Convexit\u00e9"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation%20-%20les%20bases/05_Convexite.html#convexite","text":"","title":"Convexit\u00e9"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation%20-%20les%20bases/05_Convexite.html#premiere_approche","text":"Une s\u00e9cante, une corde Soit \\(f\\) une fonction et \\(\\mathcal{C}_f\\) sa courbe repr\u00e9sentative dans un rep\u00e8re. Soient \\(A\\) et \\(B\\) deux points distincts de \\(\\mathcal{C}_f\\) , la droite \\((AB)\\) est appel\u00e9e s\u00e9cante de \\(\\mathcal{C}_f\\) . Par ailleurs, le segement \\([AB]\\) est appel\u00e9 corde \\([AB]\\) . Deux s\u00e9cantes : (AB) et (AC) On remarque Convexe Soit une fonction et \\(\\mathcal{C}_f\\) sa courbe repr\u00e9sentative dans un rep\u00e8re. On dit que \\(f\\) est convexe sur un intervalle \\(I\\) si \\(\\mathcal{C}_f\\) est en dessous de toutes ses s\u00e9cantes entre les deux points d'intersection, c'est-\u00e0-dire en dessous des cordes associ\u00e9es. Une fonction convexe sur son domaine La fonction exponentielle est au-dessous de ses s\u00e9cantes sur \\(\\mathbb{R}\\) ! Elle est convexe sur \\(\\mathbb{R}\\) (pas encore d\u00e9montr\u00e9). Concave Soit une fonction et \\(\\mathcal{C}_f\\) sa courbe repr\u00e9sentative dans un rep\u00e8re. On dit que \\(f\\) est concave sur un intervalle \\(I\\) si pour tout r\u00e9el \\(x\\) de \\(I\\) , \\(\\mathcal{C}_f\\) est au-dessus de chacune de ses s\u00e9cantes entre les deux points d'intersection. Une fonction concave sur son domaine Cette fonction (qui est la fonction logarithme) est au-dessus de ses s\u00e9cantes sur \\([0; +\\infty[\\) ! Elle est concave sur \\([0; +\\infty[\\) (pas encore d\u00e9montr\u00e9). Attention Il faut toujours pr\u00e9ciser l'intervalle sur lequel une fonction est convexe (ou concave) ! Attention Une fonction qui n'est pas convexe sur un intervalle \\(I\\) n'est pas une fonction concave sur \\(I\\) !! Comme pour le sens de variations, il faudra le plus souvent d\u00e9crire la convexit\u00e9 d'une fonction. Par exemple, une fonction est convexe sur \\([-5;2]\\) , concave sur \\([2;10]\\) et convexe sur \\([10; + \\infty[\\) . Une fonction quelconque Cette fonction est au-dessus de ses s\u00e9cantes sur \\(]-\\infty; 1]\\) ! Elle est concave sur \\(]-\\infty; 1]\\) (pas encore d\u00e9montr\u00e9). Cette fonction est au-dessous de ses s\u00e9cantes sur \\([1; +\\infty[\\) ! Elle est convexe sur \\([1; +\\infty[\\) (pas encore d\u00e9montr\u00e9). Une d\u00e9finition presque inutilisable Il est plut\u00f4t compliqu\u00e9 de d\u00e9montrer qu'une courbe est au-dessous au-dessus de toutes ses s\u00e9cantes sur un intervalle. Aussi, ne cherchez pas \u00e0 le faire ! Les th\u00e9or\u00e8mes ci-dessous sont beaucoup plus simples d'utilisation. L'\u00e9tude de la convexit\u00e9 d'une fonction permet (entre autre) d'affiner la compr\u00e9hension de son comportement : cela permet de savoir si la croissance \u00ab acc\u00e9l\u00e8re \u00bb ou \u00ab ralentit \u00bb.","title":"Premi\u00e8re approche"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation%20-%20les%20bases/05_Convexite.html#convexite_et_derivation","text":"Convexe et d\u00e9rivation Soit \\(f\\) une fonction d\u00e9finie et deux fois d\u00e9rivable sur un intervalle I. \\(f\\) est convexe sur \\(I\\) \u00e9quivaut \u00e0 \\(f'\\) est croissante sur \\(I\\) . \\(f\\) est convexe sur \\(I\\) \u00e9quivaut \u00e0 \\(f''\\) est positive sur \\(I\\) . \\(f\\) est convexe sur \\(I\\) \u00e9quivaut \u00e0 \\(\\mathcal{C}_f\\) est au-dessus de ses tangentes sur \\(I\\) . Concave et d\u00e9rivation Soit \\(f\\) une fonction d\u00e9finie et deux fois d\u00e9rivable sur un intervalle I. \\(f\\) est concave sur \\(I\\) \u00e9quivaut \u00e0 \\(f'\\) est d\u00e9croissante sur \\(I\\) . \\(f\\) est concave sur \\(I\\) \u00e9quivaut \u00e0 \\(f''\\) est n\u00e9gative sur \\(I\\) . \\(f\\) est concave sur \\(I\\) \u00e9quivaut \u00e0 \\(\\mathcal{C}_f\\) est au-dessous de ses tangentes sur \\(I\\) . tangente et convexti\u00e9 Avec la convexit\u00e9 (resp. concavit\u00e9), la position relative entre une courbe et ses tangentes n'est connue que sur l'intervalle o\u00f9 la fonction est convexe (resp. concave). Courbe et tangente Cette fonction est concave sur \\(]-\\infty; 1]\\) . Elle est au-dessous de ses tangentes uniquement sur \\(]-\\infty; 1]\\) ! On remarque que la courbe passe en dessus de la tangente trac\u00e9e un peu plus loin sur \\([1; +\\infty[\\) . Cette fonction est convexe sur \\([1; +\\infty[\\) . Elle est au-dessus de ses tangentes uniquement sur \\([1; +\\infty[\\) ! On remarque que la courbe passe en dessous de la tangente trac\u00e9e un peu plus loin sur \\(]-\\infty; 1]\\) .","title":"Convexit\u00e9 et d\u00e9rivation"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation%20-%20les%20bases/05_Convexite.html#point_dinflexion","text":"Il est int\u00e9ressant de trouver le moment o\u00f9 se produit le changement de convexit\u00e9. D'o\u00f9 la d\u00e9finition : Point d'inflexion Un point d'inflexion est un point o\u00f9 la courbe repr\u00e9sentative d'une fonction traverse sa tangente. Caract\u00e9risation d'un point d'inflexion Soit \\(f\\) une fonction d\u00e9finie sur un intervalle \\(I\\) et \\(a\\) un r\u00e9el de \\(I\\) . Le point \\(A(a;f(a))\\) est un point d'inflexion de \\(\\mathcal{C}_f\\) si et seulement si la convexit\u00e9 de \\(f\\) change en \\(a\\) . Si de plus \\(f\\) est deux fois d\u00e9rivable sur \\(I\\) , alors le point \\(A(a;f(a))\\) est un point d'inflexion si et seulement \\(f''\\) s'annule et change de signe en \\(a\\) . Astuce Il est \u00e9vident que, pour trouver un point d'inflexion, le plus simple est d'\u00e9tudier le signe de \\(f''\\) ! Attention La seule r\u00e9solution de \\(f''(x) = 0\\) ne permet pas de conclure ! Il faut en plus savoir si la d\u00e9riv\u00e9e seconde change de signe !","title":"Point d'inflexion"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation_au_prog/conv_ineg.html","text":"Convexit\u00e9 et in\u00e9galit\u00e9 Convexit\u00e9 et tangente Rappel : Soit \\(f\\) une fonction d\u00e9finie et d\u00e9rivable sur un intervalle I. \\(f\\) est convexe sur \\(I\\) \u00e9quivaut \u00e0 \\(\\mathcal{C}_f\\) est au-dessus de ses tangentes sur \\(I\\) . Soit \\(f\\) une fonction d\u00e9finie et d\u00e9rivable sur un intervalle I. \\(f\\) est concave sur \\(I\\) \u00e9quivaut \u00e0 \\(\\mathcal{C}_f\\) est au-dessous de ses tangentes sur \\(I\\) . Exercice Montrer que pour tout \\(x \\in \\mathbb{R}\\) , e \\(^x \\geq x + 1\\) . R\u00e9ponse Soit \\(f\\) la fonction d\u00e9finie sur \\(\\mathbb{R}\\) par \\(f(x) = \\text{e}^x\\) . \\(f'(x) = \\text{e}^x\\) et \\(f''(x)=\\text{e}^x\\) . Ainsi, pour tout \\(x \\in \\mathbb{R}\\) , \\(f''(x) \\geq 0\\) . Donc \\(f\\) est convexe sur \\(\\mathbb{R}\\) . Par ailleurs, la tangente au point d'abscisse \\(0\\) a pour \u00e9quation \\(y = f'(0)(x-0)+f(0)\\) , c'est-\u00e0-dire \\(y=x+1\\) . Comme \\(f\\) est convexe sur $\\mathbb{R}, sa courbe est au-dessus de ses tangentes sur \\(\\mathbb{R}\\) , en particulier au-dessus de la tangente d'\u00e9quation \\(y=x+1\\) . Donc pour tout \\(x \\in \\mathbb{R}\\) , \\(f(x) \\geq x+1\\) , c'est-\u00e0-dire pour tout \\(x \\in \\mathbb{R}\\) , e \\(^x \\geq x + 1\\) . Exercice Soit \\(f\\) la fonction d\u00e9finie sur \\(\\mathbb{R}\\) par \\(f(x) = \\dfrac{1}{2}x^3-\\dfrac{3}{2}x^2-3x+4\\) . On note \\(\\mathcal{C}_f\\) sa courbe repr\u00e9sentative. D\u00e9terminer l'\u00e9quation de la tangente \\((T)\\) \u00e0 \\(\\mathcal{C}_f\\) en \\(x_0 = 0.5\\) D\u00e9terminer la convexit\u00e9 de \\(f\\) sur \\(\\mathbb{R}\\) . En d\u00e9duire que, pour tout $x \\in ]-\\infty; 1], \\(f(x) \\leq -\\dfrac{9}{8}x+\\dfrac{9}{2}\\) . Soit \\(P(x) = f(x) - \\left(-\\dfrac{9}{8}x+\\dfrac{9}{2}\\right)\\) . Calculer \\(P(4)\\) . D\u00e9terminer les r\u00e9els \\(a, b, c\\) tels que \\(P(x) = (x-4)(ax^2+bx+c)\\) . En d\u00e9duire la position relative de \\(\\mathcal{C}_f\\) et de \\((T)\\) . Convexit\u00e9 et corde Dans un rep\u00e8re du plan, soient \\(A(x_A;y_A)\\) , \\(B(x_B;yB)\\) et \\(M(x;y)\\) \\[\\begin{eqnarray*} M \\text{ appartient au segment } [AB] & \\Leftrightarrow & \\exists t \\in [0;1]\\ :\\ \\overrightarrow{AM} = t \\overrightarrow{AB} \\\\ & \\Leftrightarrow & \\exists t \\in [0;1]\\ :\\ x = t (x_B-x_A) + x_A \\text{ et } y = t (y_B-y_A) + y_A\\\\ & \\Leftrightarrow & \\exists t \\in [0;1]\\ :\\ x = (1-t)x_A + t \\times x_B \\text{ et } y = (1-t)y_A + t \\times y_B\\\\ \\end{eqnarray*}\\] Rappel : Soit une fonction et \\(\\mathcal{C}_f\\) sa courbe repr\u00e9sentative dans un rep\u00e8re. On dit que \\(f\\) est convexe sur un intervalle \\(I\\) si \\(\\mathcal{C}_f\\) est en dessous de toutes ses s\u00e9cantes entre les deux points d'intersection, c'est-\u00e0-dire en dessous des cordes associ\u00e9es. On suppose que \\(f\\) est convexe sur \\(I\\) et \\(x\\) et \\(y\\) sont deux r\u00e9els de \\(I\\) . On note \\(A(y; f(y))\\) et \\(B(x; f(x))\\) . \\(M(x_M;y_M)\\) appartient \u00e0 la corde \\([AB]\\) si et seulement si il existe un r\u00e9el \\(t \\in [0;1]\\) , tel que \\[ \\left\\{ \\begin{array}{l} x_M = (1-t)y + t \\times x\\\\ y_M = (1-t)f(y) + t\\times f(x) \\end{array} \\right. \\] Ainsi, \\(\\mathcal{C}_f\\) est en dessous de la corde \\([AB]\\) signifie que \\(y_M \\geq f(x_M)\\) . D'o\u00f9 \\[ t \\times f(x) + (1-t) f(y) \\geq f(t \\times x + (1-t)y) \\] A retenir Si \\(f\\) est convexe sur \\(I\\) , alors pour tout \\(x,y\\) deux r\u00e9els de \\(I\\) et pour tout \\(t \\in [0;1]\\) \\[ t \\times f(x) + (1-t) f(y) \\geq f(t \\times x + (1-t)y) \\]","title":"Convexit\u00e9 et in\u00e9galit\u00e9s"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation_au_prog/conv_ineg.html#convexite_et_inegalite","text":"","title":"Convexit\u00e9 et in\u00e9galit\u00e9"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation_au_prog/conv_ineg.html#convexite_et_tangente","text":"Rappel : Soit \\(f\\) une fonction d\u00e9finie et d\u00e9rivable sur un intervalle I. \\(f\\) est convexe sur \\(I\\) \u00e9quivaut \u00e0 \\(\\mathcal{C}_f\\) est au-dessus de ses tangentes sur \\(I\\) . Soit \\(f\\) une fonction d\u00e9finie et d\u00e9rivable sur un intervalle I. \\(f\\) est concave sur \\(I\\) \u00e9quivaut \u00e0 \\(\\mathcal{C}_f\\) est au-dessous de ses tangentes sur \\(I\\) . Exercice Montrer que pour tout \\(x \\in \\mathbb{R}\\) , e \\(^x \\geq x + 1\\) . R\u00e9ponse Soit \\(f\\) la fonction d\u00e9finie sur \\(\\mathbb{R}\\) par \\(f(x) = \\text{e}^x\\) . \\(f'(x) = \\text{e}^x\\) et \\(f''(x)=\\text{e}^x\\) . Ainsi, pour tout \\(x \\in \\mathbb{R}\\) , \\(f''(x) \\geq 0\\) . Donc \\(f\\) est convexe sur \\(\\mathbb{R}\\) . Par ailleurs, la tangente au point d'abscisse \\(0\\) a pour \u00e9quation \\(y = f'(0)(x-0)+f(0)\\) , c'est-\u00e0-dire \\(y=x+1\\) . Comme \\(f\\) est convexe sur $\\mathbb{R}, sa courbe est au-dessus de ses tangentes sur \\(\\mathbb{R}\\) , en particulier au-dessus de la tangente d'\u00e9quation \\(y=x+1\\) . Donc pour tout \\(x \\in \\mathbb{R}\\) , \\(f(x) \\geq x+1\\) , c'est-\u00e0-dire pour tout \\(x \\in \\mathbb{R}\\) , e \\(^x \\geq x + 1\\) . Exercice Soit \\(f\\) la fonction d\u00e9finie sur \\(\\mathbb{R}\\) par \\(f(x) = \\dfrac{1}{2}x^3-\\dfrac{3}{2}x^2-3x+4\\) . On note \\(\\mathcal{C}_f\\) sa courbe repr\u00e9sentative. D\u00e9terminer l'\u00e9quation de la tangente \\((T)\\) \u00e0 \\(\\mathcal{C}_f\\) en \\(x_0 = 0.5\\) D\u00e9terminer la convexit\u00e9 de \\(f\\) sur \\(\\mathbb{R}\\) . En d\u00e9duire que, pour tout $x \\in ]-\\infty; 1], \\(f(x) \\leq -\\dfrac{9}{8}x+\\dfrac{9}{2}\\) . Soit \\(P(x) = f(x) - \\left(-\\dfrac{9}{8}x+\\dfrac{9}{2}\\right)\\) . Calculer \\(P(4)\\) . D\u00e9terminer les r\u00e9els \\(a, b, c\\) tels que \\(P(x) = (x-4)(ax^2+bx+c)\\) . En d\u00e9duire la position relative de \\(\\mathcal{C}_f\\) et de \\((T)\\) .","title":"Convexit\u00e9 et tangente"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation_au_prog/conv_ineg.html#convexite_et_corde","text":"Dans un rep\u00e8re du plan, soient \\(A(x_A;y_A)\\) , \\(B(x_B;yB)\\) et \\(M(x;y)\\) \\[\\begin{eqnarray*} M \\text{ appartient au segment } [AB] & \\Leftrightarrow & \\exists t \\in [0;1]\\ :\\ \\overrightarrow{AM} = t \\overrightarrow{AB} \\\\ & \\Leftrightarrow & \\exists t \\in [0;1]\\ :\\ x = t (x_B-x_A) + x_A \\text{ et } y = t (y_B-y_A) + y_A\\\\ & \\Leftrightarrow & \\exists t \\in [0;1]\\ :\\ x = (1-t)x_A + t \\times x_B \\text{ et } y = (1-t)y_A + t \\times y_B\\\\ \\end{eqnarray*}\\] Rappel : Soit une fonction et \\(\\mathcal{C}_f\\) sa courbe repr\u00e9sentative dans un rep\u00e8re. On dit que \\(f\\) est convexe sur un intervalle \\(I\\) si \\(\\mathcal{C}_f\\) est en dessous de toutes ses s\u00e9cantes entre les deux points d'intersection, c'est-\u00e0-dire en dessous des cordes associ\u00e9es. On suppose que \\(f\\) est convexe sur \\(I\\) et \\(x\\) et \\(y\\) sont deux r\u00e9els de \\(I\\) . On note \\(A(y; f(y))\\) et \\(B(x; f(x))\\) . \\(M(x_M;y_M)\\) appartient \u00e0 la corde \\([AB]\\) si et seulement si il existe un r\u00e9el \\(t \\in [0;1]\\) , tel que \\[ \\left\\{ \\begin{array}{l} x_M = (1-t)y + t \\times x\\\\ y_M = (1-t)f(y) + t\\times f(x) \\end{array} \\right. \\] Ainsi, \\(\\mathcal{C}_f\\) est en dessous de la corde \\([AB]\\) signifie que \\(y_M \\geq f(x_M)\\) . D'o\u00f9 \\[ t \\times f(x) + (1-t) f(y) \\geq f(t \\times x + (1-t)y) \\] A retenir Si \\(f\\) est convexe sur \\(I\\) , alors pour tout \\(x,y\\) deux r\u00e9els de \\(I\\) et pour tout \\(t \\in [0;1]\\) \\[ t \\times f(x) + (1-t) f(y) \\geq f(t \\times x + (1-t)y) \\]","title":"Convexit\u00e9 et corde"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation_au_prog/dem_prog.html","text":"D\u00e9monstration au programme Th\u00e9or\u00e8me Soit \\(f\\) une fonction d\u00e9finie et deux fois d\u00e9rivable sur un intervalle I. \\(f''\\) est positive sur \\(I\\) \u00e9quivaut \u00e0 \\(\\mathcal{C}_f\\) est au-dessus de ses tangentes sur \\(I\\) . D\u00e9monstration Hypoth\u00e8ses du corollaire : \\(f\\) est deux fois d\u00e9rivable sur un intervalle \\(I\\) . \\(f''\\) est positive \\(I\\) Objectif de la d\u00e9monstration : \\(\\mathcal{C}_f\\) est au-dessus de ses tangentes sur \\(I\\) } Une m\u00e9thode pour l'\u00e9tude de la position relative : Pour \u00e9tudier la position relative de la courbe de \\(h\\) et celle de \\(k\\) , il faut \u00e9tudier le signe de \\(h-k\\) . D\u00e9monstration Soit \\(f\\) une fonction d\u00e9finie et deux fois d\u00e9rivable sur un intervalle \\(I\\) et telle que \\(f''\\) est positive sur \\(I\\) . Soit \\(a\\) un r\u00e9el de \\(I\\) . L'\u00e9quation de la tangente en \\(a\\) est \\(y=f'(a)(x-a)+f(a)\\) . Etudions donc le signe \\(g(x)=f(x)-\\left( f'(a)(x-a)+f(a) \\right)\\) Une m\u00e9thode pour \u00e9tudier le signe d'une expression : On peut utiliser un tableau de variations pour trouver le signe. Calculons \\(g'\\) , ce qui est possible car \\(f\\) est d\u00e9rivable sur \\(I\\) : \\(g'(x)=f'(x)-f'(a)\\) . Comme \\(f''\\) est positive sur \\(I\\) , \\(f'\\) est croissante sur \\(I\\) . Si \\(x \\geq a\\) , \\(f'(x) \\geq f'(a)\\) donc \\(g'(x)\\geq 0\\) sur \\([a ; +\\infty[\\cap I\\) Si \\(x \\leq a\\) , \\(f'(x) \\leq f'(a)\\) donc \\(g'(x)\\leq 0\\) sur \\(]-\\infty;a] \\cap I\\) D'o\u00f9 le tableau de variations de \\(g\\) sur \\(I=[c;d]\\) : Comme \\(g\\) admet \\(0\\) pour minimum sur \\(I\\) , alors \\(g\\) est positive sur \\(I\\) . Donc pour tout \\(a \\in I\\) et pour tout \\(x \\in I\\) , \\(f\\) est au-dessus de sa tangente en \\(a\\) .","title":"D\u00e9monstration au programme"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation_au_prog/dem_prog.html#demonstration_au_programme","text":"Th\u00e9or\u00e8me Soit \\(f\\) une fonction d\u00e9finie et deux fois d\u00e9rivable sur un intervalle I. \\(f''\\) est positive sur \\(I\\) \u00e9quivaut \u00e0 \\(\\mathcal{C}_f\\) est au-dessus de ses tangentes sur \\(I\\) . D\u00e9monstration Hypoth\u00e8ses du corollaire : \\(f\\) est deux fois d\u00e9rivable sur un intervalle \\(I\\) . \\(f''\\) est positive \\(I\\) Objectif de la d\u00e9monstration : \\(\\mathcal{C}_f\\) est au-dessus de ses tangentes sur \\(I\\) } Une m\u00e9thode pour l'\u00e9tude de la position relative : Pour \u00e9tudier la position relative de la courbe de \\(h\\) et celle de \\(k\\) , il faut \u00e9tudier le signe de \\(h-k\\) . D\u00e9monstration Soit \\(f\\) une fonction d\u00e9finie et deux fois d\u00e9rivable sur un intervalle \\(I\\) et telle que \\(f''\\) est positive sur \\(I\\) . Soit \\(a\\) un r\u00e9el de \\(I\\) . L'\u00e9quation de la tangente en \\(a\\) est \\(y=f'(a)(x-a)+f(a)\\) . Etudions donc le signe \\(g(x)=f(x)-\\left( f'(a)(x-a)+f(a) \\right)\\) Une m\u00e9thode pour \u00e9tudier le signe d'une expression : On peut utiliser un tableau de variations pour trouver le signe. Calculons \\(g'\\) , ce qui est possible car \\(f\\) est d\u00e9rivable sur \\(I\\) : \\(g'(x)=f'(x)-f'(a)\\) . Comme \\(f''\\) est positive sur \\(I\\) , \\(f'\\) est croissante sur \\(I\\) . Si \\(x \\geq a\\) , \\(f'(x) \\geq f'(a)\\) donc \\(g'(x)\\geq 0\\) sur \\([a ; +\\infty[\\cap I\\) Si \\(x \\leq a\\) , \\(f'(x) \\leq f'(a)\\) donc \\(g'(x)\\leq 0\\) sur \\(]-\\infty;a] \\cap I\\) D'o\u00f9 le tableau de variations de \\(g\\) sur \\(I=[c;d]\\) : Comme \\(g\\) admet \\(0\\) pour minimum sur \\(I\\) , alors \\(g\\) est positive sur \\(I\\) . Donc pour tout \\(a \\in I\\) et pour tout \\(x \\in I\\) , \\(f\\) est au-dessus de sa tangente en \\(a\\) .","title":"D\u00e9monstration au programme"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation_en_plus/D%C3%A9rivation_best.html","text":"D\u00e9rivation : vers le sup\u00e9rieur D\u00e9rivation et approximation affine D\u00e9riv\u00e9e n-i\u00e8me","title":"D\u00e9rivation : vers le sup\u00e9rieur"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation_en_plus/D%C3%A9rivation_best.html#derivation_vers_le_superieur","text":"","title":"D\u00e9rivation : vers le sup\u00e9rieur"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation_en_plus/D%C3%A9rivation_best.html#derivation_et_approximation_affine","text":"","title":"D\u00e9rivation et approximation affine"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Derivation_et_convexite/D%C3%A9rivation_en_plus/D%C3%A9rivation_best.html#derivee_n-ieme","text":"","title":"D\u00e9riv\u00e9e n-i\u00e8me"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Limite_de_suite/Limite_suite_base/01_Limite_d_une_suite.html","text":"Limites d'une suite Limite infinie d'une suite D\u00e9finition D\u00e9finition Une suite \\((u_n)\\) a pour limite \\(+\\infty\\) quand \\(n\\) tend vers \\(+\\infty\\) , si tout intervalle de la forme \\(]A,+\\infty[\\) contient tous les termes \\(u_n\\) \u00e0 partir d'un certain rang. Autrement dit : pour tout r\u00e9el \\(A\\) , on peut trouver un entier \\(n_0\\) tel que , pour tout \\(n \\geq n_0\\) , on ait \\(u_n>A\\) . On note : \\[ \\lim_{n \\to +\\infty} u_n=+\\infty \\] D\u00e9finition De m\u00eame , une suite \\((u_n)\\) a pour limite \\(-\\infty\\) quand \\(n\\) tend vers \\(+\\infty\\) , si tout intervalle de la forme \\(]-\\infty,B[\\) contient tous les termes \\(u_n\\) \u00e0 partir d'un certain rang. Autrement dit : pour tout r\u00e9el \\(B\\) , on peut trouver un entier \\(n_0\\) tel que , pour tout \\(n \\geq n_0\\) , on ait \\(u_n<B\\) . On note : \\[ \\lim_{n \\to +\\infty} u_n=-\\infty \\] Exercice Soit \\(u_n=2n-5\\) pour tout \\(n \\geq 0\\) . 1. Conjecturer \u00e0 l'aide de la calculatrice la limite de la suite \\((u_n)\\) en \\(+\\infty\\) . 2. R\u00e9soudre l'in\u00e9quation \\(u_n>A\\) o\u00f9 \\(n\\) est l'inconnue et o\u00f9 \\(A\\) est un r\u00e9el donn\u00e9. 3. Justifier que la suite ( \\(u_n\\) ) a pour limite \\(+\\infty\\) Solution \\(\\lim_{n \\to +\\infty}u_n=+\\infty\\) \\(2n-5>A \\iff 2n> A+5 \\iff n>\\dfrac{A+5}{2}\\) Soit \\(A\\) un r\u00e9el donn\u00e9. Soit \\(n_0\\) le plus petit entier naturel tel que \\(n_0 \\geq \\dfrac{A+5}{2}\\) (on prend ceci car on ne sait pas si \\(\\dfrac{A+5}{2}\\) est un entier ), alors , pour tout \\(n \\geq n_0\\) on a : \\(u_n>A\\) .Donc \\[ \\lim_{n \\to +\\infty}u_n=+\\infty \\] Exercice Soit \\(v_n=-4n-1\\) pour tout \\(n\\geq 0\\) . 1. Conjecturer \u00e0 l'aide de la calculatrice la limite de la suite \\((v_n)\\) en \\(+\\infty\\) . 2. R\u00e9soudre l'in\u00e9quation \\(v_n<A\\) o\u00f9 \\(n\\) est l'inconnue et o\u00f9 \\(A\\) est un r\u00e9el donn\u00e9. 3. Justifier que la suite ( \\(v_n\\) ) a pour limite \\(-\\infty\\) Solution \\(\\lim_{n \\to+\\infty}v_n=-\\infty\\) \\(-4n-1<A \\iff -4n<A+1 \\iff n>-\\dfrac{A+1}{4}\\) Soit \\(A\\) un r\u00e9el donn\u00e9. Soit \\(n_0\\) le plus petit entier naturel tel que \\(n_0 \\geq -\\dfrac{A+1}{4}\\) alors , pour tout \\(n \\geq n_0\\) on a : \\(v_n<A\\) . Donc \\[ \\lim_{n \\to +\\infty}v_n=-\\infty \\] Algorithme de seuil pour une limite infinie Soit \\(u\\) la suite d\u00e9finie par \\(u_n =0,5n^2-n+1\\) . Exercice Conjecturer \u00e0 l'aide de la calculatrice la limite de la suite \\((u_n)\\) en \\(+\\infty\\) . D\u00e9terminer un seuil (c'est-\u00e0-dire un entier \\(n\\) ) \u00e0 partir duquel on a , \\(u_n\\in ]A,+\\infty[\\) c'est-\u00e0-dire \\(u_n > A\\) , pour tout \\(n \\in \\mathbb{N}\\) Ecrire le programme python qui permet d\u00e9terminer le seuil. Warning Un programme (seul) ne trouve pas la valeur seuil, mais la plus petite valeur \\(n_0\\) telle que \\(u_{n_0} > A\\) . Mais rien ne permettra alors d'affirmer, que pour tout \\(n \\geq n_0\\) , \\(u_n>A\\) ! Suites de r\u00e9f\u00e9rence de limite infinie Th\u00e9or\u00e8me Les suites ( \\(\\sqrt{n}\\) ) , ( \\(n\\) ) ,( \\(n^2\\) ), \\(\\cdots\\) ,( \\(n^p\\) ), ( \\(e^n\\) )ont pour limite \\(+\\infty\\) Si \\(k>0\\) alors ( \\(k\\sqrt{n}\\) ) , ( \\(kn\\) ) ,( \\(kn^2\\) ), \\(\\cdots\\) ,( \\(kn^p\\) ), ( \\(ke^n\\) ) ont pour limite \\(+\\infty\\) quand $n $ tend vers \\(+\\infty\\) Si \\(k >0\\) alors ( \\(-k\\sqrt{n}\\) ) , ( \\(-kn\\) ) ,( \\(-kn^2\\) ), \\(\\cdots\\) ,( \\(-kn^p\\) ),( \\(-ke^n\\) ) ont pour limite \\(-\\infty\\) quand $n $ tend vers \\(+\\infty\\) Limite finie d'une suite D\u00e9finition D\u00e9finition Une suite \\((u_n)\\) a pour limite le r\u00e9el \\(\\ell\\) quand \\(n\\) tend vers \\(+\\infty\\) ou la suite \\((u_n)\\) converge vers \\(\\ell\\) , si tout intervalle ouvert \\(I\\) contenant \\(\\ell\\) contient tous les termes \\(u_n\\) \u00e0 partir d'un certain rang. On note : \\[ \\lim_{n_+\\infty} u_n=\\ell \\] Th\u00e9or\u00e8me Cette limite est unique . Remarque Tout intervalle ouvert contenant \\(\\ell\\) contient un intervalle ouvert centr\u00e9 en \\(\\ell\\) de la forme \\(]\\ell-\\epsilon,\\ell+\\epsilon[\\) o\u00f9 \\(\\epsilon>0\\) . On peut donc se contenter de chercher si tout intervalle ouvert centr\u00e9 en \\(\\ell\\) contient tous les termes \\(u_n\\) \u00e0 partir d'un certain rang. Quand \\(n\\) tend vers \\(+\\infty\\) , \u00ab ( \\(u_n\\) ) tend vers \\(\\ell\\) \u00bb \u00e9quivaut \u00e0 \\(u_n-\\ell\\) tend vers 0. Si \\((u_n)\\) converge vers \\(\\ell\\) alors les suites \\((u_{n+1})\\) , ( \\(u_{2n}\\) ) , ( \\(u_{2n+1}\\) ) convergent aussi vers \\(\\ell\\) . Une suite convergente est born\u00e9e. Algorithme de seuil pour une limite finie Exercice Soit la suite ( \\(u_n\\) ) d\u00e9finie par : \\[ \\Syst{u_0 & = & 0,1}{u_{n+1} & = &2u_n(1-u_n)} \\] Programmer la suite \u00e0 la calculatrice .Cette suite converge vers \\(\\ell =0,5\\) D\u00e9terminer un seuil \\cad un entier \\(n\\) , \u00e0 partir duquel les \\(u_n\\) sont dans un intervalle contenant \\(\\ell\\) . On peut traduire aussi par trouver un entier \\(n\\) tel que \\(|u_n-\\ell|<\\epsilon\\) . Ecrire le programme python qui permet d\u00e9terminer le seuil. Utilisez-le pour conna\u00eetre \u00e0 partir de quel entier \\(n\\) la suite est dans l\u2019intervalle ouvert centr\u00e9 en 0,5 et de rayon \\(10^{-3}\\) . Suites de r\u00e9f\u00e9rence de limite 0 Th\u00e9or\u00e8me Les suites \\(\\left(\\dfrac{1}{\\sqrt{n}}\\right)\\) , \\(\\left(\\dfrac{1}{n}\\right)\\) , \\(\\left(\\dfrac{1}{n^2}\\right)\\) , \\(\\left(\\dfrac{1}{n^3}\\right)\\) \\dots \\(\\left(\\dfrac{1}{n^p }\\right)\\) ( \\(p\\in\\N^{*}\\) ) ont pour limite 0 Si \\(k\\) est un r\u00e9el , les suites \\(\\left(\\dfrac{k}{\\sqrt{n}}\\right)\\) , \\(\\left(\\dfrac{k}{n}\\right)\\) , \\(\\left(\\dfrac{k}{n^2}\\right)\\) , \\(\\left(\\dfrac{k}{n^3}\\right)\\) \\dots \\(\\left(\\dfrac{k}{n^p }\\right)\\) ( \\(p\\in\\N^*\\) ) ont pour limite 0. Suites qui n'ont pas de limite Certaines suites n'ont pas de limite c'est le cas des suites de termes g\u00e9n\u00e9raux: \\((-1)^n\\) , \\((-3)^n\\) , \\(\\cos n\\) , \\(\\sin n\\) . D\u00e9finition On dit qu'une suite est divergente si elle n'est pas convergente c'est-\u00e0-dire : soit elle tend vers \\(\\pm \\infty\\) soit elle n'a pas de limite. M\u00e9thode Il est souvent demand\u00e9 de justifier qu'une suite est convergente sans qu'il soit possible de trouver sa limite (cf plus loin ) !","title":"Limite d'une suite"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Limite_de_suite/Limite_suite_base/01_Limite_d_une_suite.html#limites_dune_suite","text":"","title":"Limites d'une suite"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Limite_de_suite/Limite_suite_base/01_Limite_d_une_suite.html#limite_infinie_dune_suite","text":"","title":"Limite infinie d'une suite"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Limite_de_suite/Limite_suite_base/01_Limite_d_une_suite.html#definition","text":"D\u00e9finition Une suite \\((u_n)\\) a pour limite \\(+\\infty\\) quand \\(n\\) tend vers \\(+\\infty\\) , si tout intervalle de la forme \\(]A,+\\infty[\\) contient tous les termes \\(u_n\\) \u00e0 partir d'un certain rang. Autrement dit : pour tout r\u00e9el \\(A\\) , on peut trouver un entier \\(n_0\\) tel que , pour tout \\(n \\geq n_0\\) , on ait \\(u_n>A\\) . On note : \\[ \\lim_{n \\to +\\infty} u_n=+\\infty \\] D\u00e9finition De m\u00eame , une suite \\((u_n)\\) a pour limite \\(-\\infty\\) quand \\(n\\) tend vers \\(+\\infty\\) , si tout intervalle de la forme \\(]-\\infty,B[\\) contient tous les termes \\(u_n\\) \u00e0 partir d'un certain rang. Autrement dit : pour tout r\u00e9el \\(B\\) , on peut trouver un entier \\(n_0\\) tel que , pour tout \\(n \\geq n_0\\) , on ait \\(u_n<B\\) . On note : \\[ \\lim_{n \\to +\\infty} u_n=-\\infty \\] Exercice Soit \\(u_n=2n-5\\) pour tout \\(n \\geq 0\\) . 1. Conjecturer \u00e0 l'aide de la calculatrice la limite de la suite \\((u_n)\\) en \\(+\\infty\\) . 2. R\u00e9soudre l'in\u00e9quation \\(u_n>A\\) o\u00f9 \\(n\\) est l'inconnue et o\u00f9 \\(A\\) est un r\u00e9el donn\u00e9. 3. Justifier que la suite ( \\(u_n\\) ) a pour limite \\(+\\infty\\) Solution \\(\\lim_{n \\to +\\infty}u_n=+\\infty\\) \\(2n-5>A \\iff 2n> A+5 \\iff n>\\dfrac{A+5}{2}\\) Soit \\(A\\) un r\u00e9el donn\u00e9. Soit \\(n_0\\) le plus petit entier naturel tel que \\(n_0 \\geq \\dfrac{A+5}{2}\\) (on prend ceci car on ne sait pas si \\(\\dfrac{A+5}{2}\\) est un entier ), alors , pour tout \\(n \\geq n_0\\) on a : \\(u_n>A\\) .Donc \\[ \\lim_{n \\to +\\infty}u_n=+\\infty \\] Exercice Soit \\(v_n=-4n-1\\) pour tout \\(n\\geq 0\\) . 1. Conjecturer \u00e0 l'aide de la calculatrice la limite de la suite \\((v_n)\\) en \\(+\\infty\\) . 2. R\u00e9soudre l'in\u00e9quation \\(v_n<A\\) o\u00f9 \\(n\\) est l'inconnue et o\u00f9 \\(A\\) est un r\u00e9el donn\u00e9. 3. Justifier que la suite ( \\(v_n\\) ) a pour limite \\(-\\infty\\) Solution \\(\\lim_{n \\to+\\infty}v_n=-\\infty\\) \\(-4n-1<A \\iff -4n<A+1 \\iff n>-\\dfrac{A+1}{4}\\) Soit \\(A\\) un r\u00e9el donn\u00e9. Soit \\(n_0\\) le plus petit entier naturel tel que \\(n_0 \\geq -\\dfrac{A+1}{4}\\) alors , pour tout \\(n \\geq n_0\\) on a : \\(v_n<A\\) . Donc \\[ \\lim_{n \\to +\\infty}v_n=-\\infty \\]","title":"D\u00e9finition"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Limite_de_suite/Limite_suite_base/01_Limite_d_une_suite.html#algorithme_de_seuil_pour_une_limite_infinie","text":"Soit \\(u\\) la suite d\u00e9finie par \\(u_n =0,5n^2-n+1\\) . Exercice Conjecturer \u00e0 l'aide de la calculatrice la limite de la suite \\((u_n)\\) en \\(+\\infty\\) . D\u00e9terminer un seuil (c'est-\u00e0-dire un entier \\(n\\) ) \u00e0 partir duquel on a , \\(u_n\\in ]A,+\\infty[\\) c'est-\u00e0-dire \\(u_n > A\\) , pour tout \\(n \\in \\mathbb{N}\\) Ecrire le programme python qui permet d\u00e9terminer le seuil. Warning Un programme (seul) ne trouve pas la valeur seuil, mais la plus petite valeur \\(n_0\\) telle que \\(u_{n_0} > A\\) . Mais rien ne permettra alors d'affirmer, que pour tout \\(n \\geq n_0\\) , \\(u_n>A\\) !","title":"Algorithme de seuil pour une limite infinie"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Limite_de_suite/Limite_suite_base/01_Limite_d_une_suite.html#suites_de_reference_de_limite_infinie","text":"Th\u00e9or\u00e8me Les suites ( \\(\\sqrt{n}\\) ) , ( \\(n\\) ) ,( \\(n^2\\) ), \\(\\cdots\\) ,( \\(n^p\\) ), ( \\(e^n\\) )ont pour limite \\(+\\infty\\) Si \\(k>0\\) alors ( \\(k\\sqrt{n}\\) ) , ( \\(kn\\) ) ,( \\(kn^2\\) ), \\(\\cdots\\) ,( \\(kn^p\\) ), ( \\(ke^n\\) ) ont pour limite \\(+\\infty\\) quand $n $ tend vers \\(+\\infty\\) Si \\(k >0\\) alors ( \\(-k\\sqrt{n}\\) ) , ( \\(-kn\\) ) ,( \\(-kn^2\\) ), \\(\\cdots\\) ,( \\(-kn^p\\) ),( \\(-ke^n\\) ) ont pour limite \\(-\\infty\\) quand $n $ tend vers \\(+\\infty\\)","title":"Suites de r\u00e9f\u00e9rence de limite infinie"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Limite_de_suite/Limite_suite_base/01_Limite_d_une_suite.html#limite_finie_dune_suite","text":"","title":"Limite finie d'une suite"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Limite_de_suite/Limite_suite_base/01_Limite_d_une_suite.html#definition_1","text":"D\u00e9finition Une suite \\((u_n)\\) a pour limite le r\u00e9el \\(\\ell\\) quand \\(n\\) tend vers \\(+\\infty\\) ou la suite \\((u_n)\\) converge vers \\(\\ell\\) , si tout intervalle ouvert \\(I\\) contenant \\(\\ell\\) contient tous les termes \\(u_n\\) \u00e0 partir d'un certain rang. On note : \\[ \\lim_{n_+\\infty} u_n=\\ell \\] Th\u00e9or\u00e8me Cette limite est unique . Remarque Tout intervalle ouvert contenant \\(\\ell\\) contient un intervalle ouvert centr\u00e9 en \\(\\ell\\) de la forme \\(]\\ell-\\epsilon,\\ell+\\epsilon[\\) o\u00f9 \\(\\epsilon>0\\) . On peut donc se contenter de chercher si tout intervalle ouvert centr\u00e9 en \\(\\ell\\) contient tous les termes \\(u_n\\) \u00e0 partir d'un certain rang. Quand \\(n\\) tend vers \\(+\\infty\\) , \u00ab ( \\(u_n\\) ) tend vers \\(\\ell\\) \u00bb \u00e9quivaut \u00e0 \\(u_n-\\ell\\) tend vers 0. Si \\((u_n)\\) converge vers \\(\\ell\\) alors les suites \\((u_{n+1})\\) , ( \\(u_{2n}\\) ) , ( \\(u_{2n+1}\\) ) convergent aussi vers \\(\\ell\\) . Une suite convergente est born\u00e9e.","title":"D\u00e9finition"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Limite_de_suite/Limite_suite_base/01_Limite_d_une_suite.html#algorithme_de_seuil_pour_une_limite_finie","text":"Exercice Soit la suite ( \\(u_n\\) ) d\u00e9finie par : \\[ \\Syst{u_0 & = & 0,1}{u_{n+1} & = &2u_n(1-u_n)} \\] Programmer la suite \u00e0 la calculatrice .Cette suite converge vers \\(\\ell =0,5\\) D\u00e9terminer un seuil \\cad un entier \\(n\\) , \u00e0 partir duquel les \\(u_n\\) sont dans un intervalle contenant \\(\\ell\\) . On peut traduire aussi par trouver un entier \\(n\\) tel que \\(|u_n-\\ell|<\\epsilon\\) . Ecrire le programme python qui permet d\u00e9terminer le seuil. Utilisez-le pour conna\u00eetre \u00e0 partir de quel entier \\(n\\) la suite est dans l\u2019intervalle ouvert centr\u00e9 en 0,5 et de rayon \\(10^{-3}\\) .","title":"Algorithme de seuil pour une limite finie"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Limite_de_suite/Limite_suite_base/01_Limite_d_une_suite.html#suites_de_reference_de_limite_0","text":"Th\u00e9or\u00e8me Les suites \\(\\left(\\dfrac{1}{\\sqrt{n}}\\right)\\) , \\(\\left(\\dfrac{1}{n}\\right)\\) , \\(\\left(\\dfrac{1}{n^2}\\right)\\) , \\(\\left(\\dfrac{1}{n^3}\\right)\\) \\dots \\(\\left(\\dfrac{1}{n^p }\\right)\\) ( \\(p\\in\\N^{*}\\) ) ont pour limite 0 Si \\(k\\) est un r\u00e9el , les suites \\(\\left(\\dfrac{k}{\\sqrt{n}}\\right)\\) , \\(\\left(\\dfrac{k}{n}\\right)\\) , \\(\\left(\\dfrac{k}{n^2}\\right)\\) , \\(\\left(\\dfrac{k}{n^3}\\right)\\) \\dots \\(\\left(\\dfrac{k}{n^p }\\right)\\) ( \\(p\\in\\N^*\\) ) ont pour limite 0.","title":"Suites de r\u00e9f\u00e9rence de limite 0"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Limite_de_suite/Limite_suite_base/01_Limite_d_une_suite.html#suites_qui_nont_pas_de_limite","text":"Certaines suites n'ont pas de limite c'est le cas des suites de termes g\u00e9n\u00e9raux: \\((-1)^n\\) , \\((-3)^n\\) , \\(\\cos n\\) , \\(\\sin n\\) . D\u00e9finition On dit qu'une suite est divergente si elle n'est pas convergente c'est-\u00e0-dire : soit elle tend vers \\(\\pm \\infty\\) soit elle n'a pas de limite. M\u00e9thode Il est souvent demand\u00e9 de justifier qu'une suite est convergente sans qu'il soit possible de trouver sa limite (cf plus loin ) !","title":"Suites qui n'ont pas de limite"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Limite_de_suite/Limite_suite_base/02_Limite_de_la_suite_qn.html","text":"Limite de la suite \\(q^n\\) Th\u00e9or\u00e8me \\(q\\) d\u00e9signe un nombre r\u00e9el. Si \\(q>1\\) alors \\[ q>1 \\Rightarrow \\lim_{n \\to +\\infty} q^n=+\\infty \\] Si \\(q=1\\) alors \\[ q=1 \\Rightarrow \\lim_{n \\to +\\infty} q^n=1 \\] Si \\(-1<q<1\\) alors \\[ -1<q<1 \\Rightarrow \\lim_{n \\to +\\infty} q^n=0 \\] Si \\(q \\leq-1\\) alors la suite $ q^n$ n'a pas de limite. Dessiner \u00e0 la calculatrice les termes de la suite \\(1,8^n\\) , $(-0,7)^n $ et \\((-1,2)^n\\) Exercice Calculer \\[ \\lim_{n \\to +\\infty} e^{-n} \\] Solution \\(e^{-n}=\\dfrac{1}{e^n}=\\left(\\dfrac{1}{e}\\right)^n\\) . Comme \\(-1< \\dfrac{1}{e} <1\\) alors \\[ \\lim_{n \\to +\\infty}\\left(\\dfrac{1}{e}\\right)^n=0 \\] donc \\[ \\lim_{n \\to +\\infty} e^{-n}=0 \\]","title":"Limite de la suite $q^n$"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Limite_de_suite/Limite_suite_base/02_Limite_de_la_suite_qn.html#limite_de_la_suite_qn","text":"Th\u00e9or\u00e8me \\(q\\) d\u00e9signe un nombre r\u00e9el. Si \\(q>1\\) alors \\[ q>1 \\Rightarrow \\lim_{n \\to +\\infty} q^n=+\\infty \\] Si \\(q=1\\) alors \\[ q=1 \\Rightarrow \\lim_{n \\to +\\infty} q^n=1 \\] Si \\(-1<q<1\\) alors \\[ -1<q<1 \\Rightarrow \\lim_{n \\to +\\infty} q^n=0 \\] Si \\(q \\leq-1\\) alors la suite $ q^n$ n'a pas de limite. Dessiner \u00e0 la calculatrice les termes de la suite \\(1,8^n\\) , $(-0,7)^n $ et \\((-1,2)^n\\) Exercice Calculer \\[ \\lim_{n \\to +\\infty} e^{-n} \\] Solution \\(e^{-n}=\\dfrac{1}{e^n}=\\left(\\dfrac{1}{e}\\right)^n\\) . Comme \\(-1< \\dfrac{1}{e} <1\\) alors \\[ \\lim_{n \\to +\\infty}\\left(\\dfrac{1}{e}\\right)^n=0 \\] donc \\[ \\lim_{n \\to +\\infty} e^{-n}=0 \\]","title":"Limite de la suite \\(q^n\\)"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Limite_de_suite/Limite_suite_base/03_Theoremes_d_operation.html","text":"Th\u00e9or\u00e8mes d'op\u00e9rations Dans tout ce qui suit, \\(\\ell\\) et \\(\\ell'\\) d\u00e9signent deux nombres r\u00e9els. Attention La notation \"FI\" d\u00e9signe une Forme Ind\u00e9termin\u00e9e, c'est \u00e0 dire qu'on ne sait pas calculer par une op\u00e9ration \u00e9l\u00e9mentaire. Limite d'une somme Th\u00e9or\u00e8me Si \\(\\lim\\limits_{n \\to +\\infty}~u_n=\\cdots\\) \\(\\ell\\) \\(\\ell\\) \\(\\ell\\) \\(+\\infty\\) \\(-\\infty\\) \\(-\\infty\\) \\(\\text{et si }\\lim\\limits_{n \\to +\\infty} v_n=\\cdots\\) \\(\\ell'\\) \\(+\\infty\\) \\(-\\infty\\) \\(+\\infty\\) \\(-\\infty\\) \\(+\\infty\\) alors \\(\\lim\\limits_{n \\to +\\infty}~(u_n+v_n)=\\cdots\\) \\(\\ell+\\ell'\\) \\(+\\infty\\) \\(-\\infty\\) \\(+\\infty\\) \\(-\\infty\\) On ne peut pas conclure : \\(FI\\) Exercice Calculer les limites des suites \\((a_n)\\) , \\((b_n)\\) et \\((c_n)\\) d\u00e9finies par \\(a_n=n^2+4n+1\\) ,~ \\(b_n=\\dfrac1n-n^2\\) et \\(c_n=n^3-n^2\\) \\(a_n=n^2+4n+1\\) Solution \\[ \\left. \\begin{array}{l} \\lim\\limits_{n \\to +\\infty}~n^2 = +\\infty \\\\ \\lim\\limits_{n\\to +\\infty}~n = +\\infty \\quad \\text{et} \\lim\\limits_{n\\to +\\infty}~4n=+\\infty \\quad\\text{et} \\lim\\limits_{n\\to +\\infty}~4n+1 & = & +\\infty \\end{array} \\right\\} \\quad \\text{par somme} \\quad \\lim\\limits_{n \\to +\\infty}~\\left(n^2+4n+1\\right)=+\\infty. \\] \\(b_n=\\dfrac1n-n^2\\) Solution \\[ \\left. \\begin{array}{l} \\lim\\limits_{n \\to +\\infty}~\\dfrac{1}{n}&=&0\\\\ \\lim\\limits_{n \\to +\\infty}~-n^2&=&-\\infty \\end{array} \\right\\} \\quad \\text{par somme} \\quad \\lim\\limits_{n \\to +\\infty}\\left(\\dfrac{1}{n}-n^2\\right)=-\\infty \\] \\(c_n=n^3-n^2\\) Solution \\[ \\left. \\begin{array}{l} \\lim\\limits_{n\\to +\\infty}~n^3&=&+\\infty\\\\ \\lim\\limits_{n \\to +\\infty}~-n^3&=&-\\infty \\end{array} \\right\\} \\quad \\lim\\limits_{x \\to -\\infty}\\left(n^3-n^2\\right)$ \\quad\\text{ est une forme indeterminee du type }\\infty-\\infty. \\] Limite d'un produit Th\u00e9or\u00e8me Si \\(\\lim\\limits_{n \\to +\\infty}~u_n=\\cdots\\) \\(\\ell\\) \\(\\ell>0\\) \\(\\ell>0\\) \\(\\ell<0\\) \\(\\ell<0\\) \\(+\\infty\\) \\(+\\infty\\) \\(-\\infty\\) \\(0\\) 0 et si \\(\\lim\\limits_{n \\to +\\infty}~v_n=\\cdots\\) \\(\\ell'\\) \\(+\\infty\\) \\(-\\infty\\) \\(+\\infty\\) \\(-\\infty\\) \\(+\\infty\\) \\(-\\infty\\) \\(-\\infty\\) \\(+\\infty\\) \\(-\\infty\\) alors \\(\\lim\\limits_{n \\to +\\infty}~(u_n\\times v_n)=\\cdots\\) \\(\\ell\\times\\ell'\\) \\(+\\infty\\) \\(-\\infty\\) \\(-\\infty\\) \\(+\\infty\\) \\(+\\infty\\) \\(-\\infty\\) \\(+\\infty\\) \\(FI\\) \\(FI\\) R\u00e8gle des signes R\u00e8gle des signes Exercice En utilisant les suites de l'exemple 3 , calculer les limites des suites \\(p_n=a_n \\times b_n\\) \\(c_n\\) . Solution Pour \\(p_n\\) \\[ \\left. \\begin{array}{l} \\lim\\limits_{n \\to +\\infty}~a_n&=&+\\infty\\\\ \\lim\\limits_{n \\to +\\infty}~b_n&=&-\\infty \\end{array} \\right\\} \\quad \\text{par produit } \\quad \\lim\\limits_{n\\to +\\infty}p_n=-\\infty \\] On a une forme ind\u00e9termin\u00e9e \\((\\infty-\\infty)\\) . M\u00e9thode On factorise par le terme pr\u00e9pond\u00e9rant c'est-\u00e0-dire celui qui tend le plus vite vers \\(+\\infty\\) . \\(c_n=n^3-n^2=n^3(1-\\dfrac1n)\\) \\[ \\left. \\begin{array}{l} \\lim\\limits_{n \\to +\\infty}~n^3 = +\\infty\\\\ \\lim\\limits_{n\\to +\\infty}~1=1 \\quad \\text{et} \\lim\\limits_{n\\to +\\infty}~-\\dfrac1n=0 \\quad\\text{et par somme } \\lim\\limits_{n\\to +\\infty}~1-\\dfrac1n & =& 1 \\end{array} \\right\\} \\quad \\text{par produit } \\quad \\lim\\limits_{n \\to +\\infty}~c_n=+\\infty. \\] Limite de l'inverse Th\u00e9or\u00e8me Si \\(\\lim\\limits_{n \\to +\\infty}~v_n\\) = \\(\\ell\\neq 0\\) \\(0\\) avec \\(v_n>0\\) \u00e0 partir d'un certain rang \\(0\\) avec \\(v_n<0\\) \u00e0 partir d'un certain rang \\(+\\infty\\) ou \\(-\\infty\\) alors \\(\\lim\\limits_{n \\to +\\infty }~\\dfrac{1}{v_n}\\) = \\(\\dfrac{1}{\\ell}\\) \\(+\\infty\\) \\(-\\infty\\) \\(0\\) Limite d'un quotient M\u00e9thode Parfois, pour chercher la limite d'un quotient \\(\\dfrac{u_n}{v_n}\\) , on l'\u00e9crit comme le produit \\(u_n\\times \\dfrac{1}{v_n}\\) . Th\u00e9or\u00e8me Pour la limite d'un quotient \\(\\frac{u_n}{v_n}\\) , distinguons deux cas : Cas o\u00f9 \\(\\lim_{n \\to +\\infty} v_n \\neq 0\\) : \\[ \\begin{array}{|l|*{7}{c|}} \\hline \\text{Si } \\lim_{n \\to +\\infty} u_n = & \\ell & \\ell & +\\infty & -\\infty & +\\infty & -\\infty & + \\infty \\text{ ou } \\\\ & & & & & & & - \\infty\\\\ \\hline \\text{Si } \\lim_{n \\to +\\infty} v_n = & \\ell' \\neq 0 & + \\infty \\text{ ou }& \\ell' > 0 & \\ell' > 0 & \\ell' < 0 & \\ell' < 0 & + \\infty \\text{ ou }\\\\ & & - \\infty & & & & & -\\infty \\\\ \\hline \\rule[-0.5cm]{0pt}{1.2cm} \\text{Alors } \\lim_{n \\to +\\infty} \\left( \\frac{u_n}{v_n} \\right) = & \\frac{\\ell}{\\ell '} & 0 & +\\infty & - \\infty & -\\infty & +\\infty & \\text{ FI }\\\\ \\hline \\end{array} \\] Exemple D\u00e9terminer les limites des suites \\((u_n)\\) , \\((v_n)\\) et \\((w_n)\\) d\u00e9finies par \\(u_n=\\dfrac{2}{\\left(1+\\dfrac{1}{\\sqrt{n}}\\right)}\\) , \\(v_n=\\dfrac{n^2+3n}{3n^2+4}\\) et \\(w_n=\\dfrac{n+3}{n^2-2}\\) R\u00e9ponse pour \\(u_n\\) \\(u_n=\\dfrac{2}{\\left(1+\\dfrac{1}{\\sqrt{n}}\\right)}=2\\times\\dfrac{1}{\\left(1+\\dfrac{1}{\\sqrt{n}}\\right)}\\) \\(\\displaystyle\\lim_{n \\to +\\infty} 2 = 2\\) \\(\\lim\\limits_{n\\to +\\infty}~\\left(\\dfrac{1}{\\sqrt{n}}\\right)=0 \\quad \\text{et} \\lim\\limits_{n\\to +\\infty}~\\left(1+\\dfrac{1}{\\sqrt{n}}\\right)=1\\quad \\text{d'o\u00f9} \\lim\\limits_{n\\to +\\infty}~\\dfrac{1}{\\left(1+\\dfrac{1}{\\sqrt{n}}\\right)} = 1\\) par produit : \\(\\lim\\limits_{n \\to +\\infty}~u_n=2\\) R\u00e9ponse pour \\(v_n\\) \\(v_n=\\dfrac{n^2+3n}{3n^2+4}\\) \\(\\lim\\limits_{n \\to +\\infty}~n^2+3n = +\\infty\\) \\(\\lim\\limits_{n\\to +\\infty}~3n^2+4=+\\infty\\) par quotient, on a une forme ind\u00e9termin\u00e9e du type \u00ab \\(\\dfrac{\\infty}{\\infty}\\) \u00bb. M\u00e9thode On factorise par le terme pr\u00e9pond\u00e9rant au num\u00e9rateur et le terme pr\u00e9pond\u00e9rant au d\u00e9nominateur. Puis il faut simplifier ! \\(v_n=\\dfrac{n^2+3n}{3n^2+4}=\\dfrac{n^2(1+\\dfrac3n)}{n^2(3+\\dfrac{4}{n^2})}=\\dfrac{1+\\dfrac3n}{3+\\dfrac{4}{n^2}}\\) \\(\\lim\\limits_{n \\to +\\infty}~1+\\dfrac3n=1\\) \\(\\lim\\limits_{n\\to +\\infty}~3+\\dfrac{4}{n^2}=3\\) Par quotient \\(\\lim\\limits_{n \\to +\\infty}~v_n=\\dfrac13\\) R\u00e9ponse pour \\(w_n\\) \\(w_n=\\dfrac{n+3}{n^2-2}\\) \\(\\lim\\limits_{n \\to +\\infty}~n+3=+\\infty\\) \\(\\lim\\limits_{n\\to +\\infty}~n^2-2=+\\infty\\) par quotient, on a une forme ind\u00e9termin\u00e9e du type \u00ab \\(\\dfrac{\\infty}{\\infty}\\) \u00bb \\(w_n=\\dfrac{n+3}{n^2-2}=\\dfrac{n(1+\\dfrac3n)}{n^2(1-\\dfrac{2}{n^2})}=\\dfrac{1}{n}\\times \\dfrac{1+\\dfrac3n}{1-\\dfrac{2}{n^2}} = \\dfrac{1}{n}\\times \\left(1+\\dfrac3n\\right)\\times \\dfrac{1}{1-\\dfrac{2}{n^2}}\\) \\(\\lim\\limits_{n \\to +\\infty}~\\dfrac1n=0\\) \\(\\lim\\limits_{n \\to +\\infty}~1+\\dfrac3n=1\\) \\(\\lim\\limits_{n\\to +\\infty}~1-\\dfrac{2}{n^2}=1\\) d'o\u00f9 \\(\\lim\\limits_{n\\to +\\infty}~\\dfrac{1}{\\left(1-\\dfrac{2}{n^2}\\right)}=1\\) Ainsi, par produit, \\(\\lim\\limits_{n \\to +\\infty}~w_n=0\\) Bilan En r\u00e9sum\u00e9 , il y a 4 formes ind\u00e9termin\u00e9es: \u00ab \\(\\infty-\\infty\\) \u00bb, \u00ab \\(0\\times \\infty\\) \u00bb, \u00ab \\(\\dfrac{\\infty}{\\infty}\\) \u00bb et \u00ab \\(\\dfrac{0}{0}\\) \u00bb .","title":"Limite et op\u00e9rations"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Limite_de_suite/Limite_suite_base/03_Theoremes_d_operation.html#theoremes_doperations","text":"Dans tout ce qui suit, \\(\\ell\\) et \\(\\ell'\\) d\u00e9signent deux nombres r\u00e9els. Attention La notation \"FI\" d\u00e9signe une Forme Ind\u00e9termin\u00e9e, c'est \u00e0 dire qu'on ne sait pas calculer par une op\u00e9ration \u00e9l\u00e9mentaire.","title":"Th\u00e9or\u00e8mes d'op\u00e9rations"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Limite_de_suite/Limite_suite_base/03_Theoremes_d_operation.html#limite_dune_somme","text":"Th\u00e9or\u00e8me Si \\(\\lim\\limits_{n \\to +\\infty}~u_n=\\cdots\\) \\(\\ell\\) \\(\\ell\\) \\(\\ell\\) \\(+\\infty\\) \\(-\\infty\\) \\(-\\infty\\) \\(\\text{et si }\\lim\\limits_{n \\to +\\infty} v_n=\\cdots\\) \\(\\ell'\\) \\(+\\infty\\) \\(-\\infty\\) \\(+\\infty\\) \\(-\\infty\\) \\(+\\infty\\) alors \\(\\lim\\limits_{n \\to +\\infty}~(u_n+v_n)=\\cdots\\) \\(\\ell+\\ell'\\) \\(+\\infty\\) \\(-\\infty\\) \\(+\\infty\\) \\(-\\infty\\) On ne peut pas conclure : \\(FI\\) Exercice Calculer les limites des suites \\((a_n)\\) , \\((b_n)\\) et \\((c_n)\\) d\u00e9finies par \\(a_n=n^2+4n+1\\) ,~ \\(b_n=\\dfrac1n-n^2\\) et \\(c_n=n^3-n^2\\) \\(a_n=n^2+4n+1\\) Solution \\[ \\left. \\begin{array}{l} \\lim\\limits_{n \\to +\\infty}~n^2 = +\\infty \\\\ \\lim\\limits_{n\\to +\\infty}~n = +\\infty \\quad \\text{et} \\lim\\limits_{n\\to +\\infty}~4n=+\\infty \\quad\\text{et} \\lim\\limits_{n\\to +\\infty}~4n+1 & = & +\\infty \\end{array} \\right\\} \\quad \\text{par somme} \\quad \\lim\\limits_{n \\to +\\infty}~\\left(n^2+4n+1\\right)=+\\infty. \\] \\(b_n=\\dfrac1n-n^2\\) Solution \\[ \\left. \\begin{array}{l} \\lim\\limits_{n \\to +\\infty}~\\dfrac{1}{n}&=&0\\\\ \\lim\\limits_{n \\to +\\infty}~-n^2&=&-\\infty \\end{array} \\right\\} \\quad \\text{par somme} \\quad \\lim\\limits_{n \\to +\\infty}\\left(\\dfrac{1}{n}-n^2\\right)=-\\infty \\] \\(c_n=n^3-n^2\\) Solution \\[ \\left. \\begin{array}{l} \\lim\\limits_{n\\to +\\infty}~n^3&=&+\\infty\\\\ \\lim\\limits_{n \\to +\\infty}~-n^3&=&-\\infty \\end{array} \\right\\} \\quad \\lim\\limits_{x \\to -\\infty}\\left(n^3-n^2\\right)$ \\quad\\text{ est une forme indeterminee du type }\\infty-\\infty. \\]","title":"Limite d'une somme"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Limite_de_suite/Limite_suite_base/03_Theoremes_d_operation.html#limite_dun_produit","text":"Th\u00e9or\u00e8me Si \\(\\lim\\limits_{n \\to +\\infty}~u_n=\\cdots\\) \\(\\ell\\) \\(\\ell>0\\) \\(\\ell>0\\) \\(\\ell<0\\) \\(\\ell<0\\) \\(+\\infty\\) \\(+\\infty\\) \\(-\\infty\\) \\(0\\) 0 et si \\(\\lim\\limits_{n \\to +\\infty}~v_n=\\cdots\\) \\(\\ell'\\) \\(+\\infty\\) \\(-\\infty\\) \\(+\\infty\\) \\(-\\infty\\) \\(+\\infty\\) \\(-\\infty\\) \\(-\\infty\\) \\(+\\infty\\) \\(-\\infty\\) alors \\(\\lim\\limits_{n \\to +\\infty}~(u_n\\times v_n)=\\cdots\\) \\(\\ell\\times\\ell'\\) \\(+\\infty\\) \\(-\\infty\\) \\(-\\infty\\) \\(+\\infty\\) \\(+\\infty\\) \\(-\\infty\\) \\(+\\infty\\) \\(FI\\) \\(FI\\) R\u00e8gle des signes R\u00e8gle des signes Exercice En utilisant les suites de l'exemple 3 , calculer les limites des suites \\(p_n=a_n \\times b_n\\) \\(c_n\\) . Solution Pour \\(p_n\\) \\[ \\left. \\begin{array}{l} \\lim\\limits_{n \\to +\\infty}~a_n&=&+\\infty\\\\ \\lim\\limits_{n \\to +\\infty}~b_n&=&-\\infty \\end{array} \\right\\} \\quad \\text{par produit } \\quad \\lim\\limits_{n\\to +\\infty}p_n=-\\infty \\] On a une forme ind\u00e9termin\u00e9e \\((\\infty-\\infty)\\) . M\u00e9thode On factorise par le terme pr\u00e9pond\u00e9rant c'est-\u00e0-dire celui qui tend le plus vite vers \\(+\\infty\\) . \\(c_n=n^3-n^2=n^3(1-\\dfrac1n)\\) \\[ \\left. \\begin{array}{l} \\lim\\limits_{n \\to +\\infty}~n^3 = +\\infty\\\\ \\lim\\limits_{n\\to +\\infty}~1=1 \\quad \\text{et} \\lim\\limits_{n\\to +\\infty}~-\\dfrac1n=0 \\quad\\text{et par somme } \\lim\\limits_{n\\to +\\infty}~1-\\dfrac1n & =& 1 \\end{array} \\right\\} \\quad \\text{par produit } \\quad \\lim\\limits_{n \\to +\\infty}~c_n=+\\infty. \\]","title":"Limite d'un produit"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Limite_de_suite/Limite_suite_base/03_Theoremes_d_operation.html#limite_de_linverse","text":"Th\u00e9or\u00e8me Si \\(\\lim\\limits_{n \\to +\\infty}~v_n\\) = \\(\\ell\\neq 0\\) \\(0\\) avec \\(v_n>0\\) \u00e0 partir d'un certain rang \\(0\\) avec \\(v_n<0\\) \u00e0 partir d'un certain rang \\(+\\infty\\) ou \\(-\\infty\\) alors \\(\\lim\\limits_{n \\to +\\infty }~\\dfrac{1}{v_n}\\) = \\(\\dfrac{1}{\\ell}\\) \\(+\\infty\\) \\(-\\infty\\) \\(0\\)","title":"Limite de l'inverse"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Limite_de_suite/Limite_suite_base/03_Theoremes_d_operation.html#limite_dun_quotient","text":"M\u00e9thode Parfois, pour chercher la limite d'un quotient \\(\\dfrac{u_n}{v_n}\\) , on l'\u00e9crit comme le produit \\(u_n\\times \\dfrac{1}{v_n}\\) . Th\u00e9or\u00e8me Pour la limite d'un quotient \\(\\frac{u_n}{v_n}\\) , distinguons deux cas : Cas o\u00f9 \\(\\lim_{n \\to +\\infty} v_n \\neq 0\\) : \\[ \\begin{array}{|l|*{7}{c|}} \\hline \\text{Si } \\lim_{n \\to +\\infty} u_n = & \\ell & \\ell & +\\infty & -\\infty & +\\infty & -\\infty & + \\infty \\text{ ou } \\\\ & & & & & & & - \\infty\\\\ \\hline \\text{Si } \\lim_{n \\to +\\infty} v_n = & \\ell' \\neq 0 & + \\infty \\text{ ou }& \\ell' > 0 & \\ell' > 0 & \\ell' < 0 & \\ell' < 0 & + \\infty \\text{ ou }\\\\ & & - \\infty & & & & & -\\infty \\\\ \\hline \\rule[-0.5cm]{0pt}{1.2cm} \\text{Alors } \\lim_{n \\to +\\infty} \\left( \\frac{u_n}{v_n} \\right) = & \\frac{\\ell}{\\ell '} & 0 & +\\infty & - \\infty & -\\infty & +\\infty & \\text{ FI }\\\\ \\hline \\end{array} \\] Exemple D\u00e9terminer les limites des suites \\((u_n)\\) , \\((v_n)\\) et \\((w_n)\\) d\u00e9finies par \\(u_n=\\dfrac{2}{\\left(1+\\dfrac{1}{\\sqrt{n}}\\right)}\\) , \\(v_n=\\dfrac{n^2+3n}{3n^2+4}\\) et \\(w_n=\\dfrac{n+3}{n^2-2}\\) R\u00e9ponse pour \\(u_n\\) \\(u_n=\\dfrac{2}{\\left(1+\\dfrac{1}{\\sqrt{n}}\\right)}=2\\times\\dfrac{1}{\\left(1+\\dfrac{1}{\\sqrt{n}}\\right)}\\) \\(\\displaystyle\\lim_{n \\to +\\infty} 2 = 2\\) \\(\\lim\\limits_{n\\to +\\infty}~\\left(\\dfrac{1}{\\sqrt{n}}\\right)=0 \\quad \\text{et} \\lim\\limits_{n\\to +\\infty}~\\left(1+\\dfrac{1}{\\sqrt{n}}\\right)=1\\quad \\text{d'o\u00f9} \\lim\\limits_{n\\to +\\infty}~\\dfrac{1}{\\left(1+\\dfrac{1}{\\sqrt{n}}\\right)} = 1\\) par produit : \\(\\lim\\limits_{n \\to +\\infty}~u_n=2\\) R\u00e9ponse pour \\(v_n\\) \\(v_n=\\dfrac{n^2+3n}{3n^2+4}\\) \\(\\lim\\limits_{n \\to +\\infty}~n^2+3n = +\\infty\\) \\(\\lim\\limits_{n\\to +\\infty}~3n^2+4=+\\infty\\) par quotient, on a une forme ind\u00e9termin\u00e9e du type \u00ab \\(\\dfrac{\\infty}{\\infty}\\) \u00bb. M\u00e9thode On factorise par le terme pr\u00e9pond\u00e9rant au num\u00e9rateur et le terme pr\u00e9pond\u00e9rant au d\u00e9nominateur. Puis il faut simplifier ! \\(v_n=\\dfrac{n^2+3n}{3n^2+4}=\\dfrac{n^2(1+\\dfrac3n)}{n^2(3+\\dfrac{4}{n^2})}=\\dfrac{1+\\dfrac3n}{3+\\dfrac{4}{n^2}}\\) \\(\\lim\\limits_{n \\to +\\infty}~1+\\dfrac3n=1\\) \\(\\lim\\limits_{n\\to +\\infty}~3+\\dfrac{4}{n^2}=3\\) Par quotient \\(\\lim\\limits_{n \\to +\\infty}~v_n=\\dfrac13\\) R\u00e9ponse pour \\(w_n\\) \\(w_n=\\dfrac{n+3}{n^2-2}\\) \\(\\lim\\limits_{n \\to +\\infty}~n+3=+\\infty\\) \\(\\lim\\limits_{n\\to +\\infty}~n^2-2=+\\infty\\) par quotient, on a une forme ind\u00e9termin\u00e9e du type \u00ab \\(\\dfrac{\\infty}{\\infty}\\) \u00bb \\(w_n=\\dfrac{n+3}{n^2-2}=\\dfrac{n(1+\\dfrac3n)}{n^2(1-\\dfrac{2}{n^2})}=\\dfrac{1}{n}\\times \\dfrac{1+\\dfrac3n}{1-\\dfrac{2}{n^2}} = \\dfrac{1}{n}\\times \\left(1+\\dfrac3n\\right)\\times \\dfrac{1}{1-\\dfrac{2}{n^2}}\\) \\(\\lim\\limits_{n \\to +\\infty}~\\dfrac1n=0\\) \\(\\lim\\limits_{n \\to +\\infty}~1+\\dfrac3n=1\\) \\(\\lim\\limits_{n\\to +\\infty}~1-\\dfrac{2}{n^2}=1\\) d'o\u00f9 \\(\\lim\\limits_{n\\to +\\infty}~\\dfrac{1}{\\left(1-\\dfrac{2}{n^2}\\right)}=1\\) Ainsi, par produit, \\(\\lim\\limits_{n \\to +\\infty}~w_n=0\\) Bilan En r\u00e9sum\u00e9 , il y a 4 formes ind\u00e9termin\u00e9es: \u00ab \\(\\infty-\\infty\\) \u00bb, \u00ab \\(0\\times \\infty\\) \u00bb, \u00ab \\(\\dfrac{\\infty}{\\infty}\\) \u00bb et \u00ab \\(\\dfrac{0}{0}\\) \u00bb .","title":"Limite d'un quotient"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/01_Rappels_sur_les_suites.html","text":"Rappels sur les suites D\u00e9finition D\u00e9finition Une suite not\u00e9e \\(u\\) ou ( \\(u_n\\) ) est une fonction dans laquelle la variable \\(n\\) ne prend que des valeurs enti\u00e8res positives. A chaque entier naturel \\(n\\) on associe un nombre r\u00e9el \\(u(n)\\) image de l'entier \\(n\\) par \\(u\\) , not\u00e9e \\(u_n\\) , appel\u00e9e terme d'indice \\(n\\) ou terme g\u00e9n\u00e9ral de la suite \\((u_n)\\) . Warning Attention bien faire la diff\u00e9rence entre le terme g\u00e9n\u00e9ral \\(u_n\\) et la suite ( \\(u_n\\) ). Modes de g\u00e9n\u00e9ration d'une suite M\u00e9thode On peut d\u00e9finir une suite de fa\u00e7on explicite en fonction de \\(n\\) : \\(\\mathbf{u_n=f(n)}\\) Exercice Soit \\((u_n)\\) la suite d\u00e9finie par \\(u_n=-5+7n\\) pour \\(n \\geqslant0\\) . Ici \\(u_n=f(n)\\) . D\u00e9terminer \\(f\\) . Calculer \\(u_0\\) , \\(u_1\\) , \\(u_2\\) , \\(u_6\\) Solution \\(f(x)=-5+7x\\) \\(u_0=-5+7\\times0=-5\\) \\(u_1=-5+7\\times1=2\\) \\(u_2=-5+7\\times2=9\\) \\(u_6=-5+7\\times6=37\\) M\u00e9thode On peut d\u00e9finir une suite de fa\u00e7on r\u00e9currente du type \\[\\begin{array}{lcl} u_{0} & = & a \\\\ u_{n+1} & = & f(u_n) \\end{array}\\] La suite est d\u00e9finie par la donn\u00e9e de son premier terme et d'une relation de r\u00e9currence entre un terme et le terme suivant ) Exercice Soit \\((u_n)_{n \\in \\mathbb{N}}\\) la suite d\u00e9finie par : \\[ \\left\\{ \\begin{array}{lcl} u_{0} & = & 4 \\\\ u_{n+1} & = & 0.75 u_n+2 \\end{array} \\right. \\] D\u00e9terminer \\(f\\) telle que \\(u_{n+1}=f(u_n)\\) Calculer \\(u_1\\) , \\(u_2\\) , \\(u_3\\) . Et pour \\(u_{100}\\) , qu'en pensez-vous ? Solution Ici \\(u_{n+1} =f(u_n)\\) avec \\(f(x)=-2x+1\\) \\(u_1=0.75u_0+2=0.75\\times4+2=5\\) \\(u_2=0.75u_1+2=0.75\\times(5)+2=5.75\\) \\(u_3=0.75u_2+2=0.75\\times5.75+2=6,3125\\) L'inconv\u00e9nient est que des termes \"\u00e9loign\u00e9s\" du d\u00e9but de la suite sont difficiles d'acc\u00e8s: pour calculer \\(u_{100}\\) il faut, a priori, calculer tous les termes pr\u00e9c\u00e9dents, jusqu'\u00e0 \\(u_{99}\\) !! Il sera parfois n\u00e9cessaire d'utiliser un programme afin de calculer des termes \u00e9loign\u00e9es. M\u00e9thode On peut encore d\u00e9finir une suite par l\u2019interm\u00e9diaire d\u2019une autre suite ou par une somme de termes, etc. . . Par exemple : \\((u_n)\\) \u00e9tant d\u00e9finie, on d\u00e9finit la suite ( \\(v_n\\) ) par : \\(v_n = u_n- 4\\) On d\u00e9finit la suite ( \\(w_n\\) ) pour tout \\(n\\in \\mathbb{N}^*\\) par : \\[ w_n = \\sum_{i=1}^n \\dfrac{1}{i} =1+\\dfrac12+\\dfrac13+\\cdots+\\dfrac{1}{n} \\] Repr\u00e9sentation graphique d'une suite La suite est d\u00e9finie de fa\u00e7on explicite On peut representer une telle suite sur une droite (avec donc des points de coordonn\u00e9es \\((u_n;0)\\) ) ou dans un plan avec des points de coordonn\u00e9es \\((n;u_n)\\) . Suite \\(u_n=\\sqrt{n}\\) sur une droite : Suite \\(u_n=\\sqrt{n}\\) dans un plan : La suite est d\u00e9finie \u00e0 l'aide d'une relation de r\u00e9currence Le plan est muni d'un rep\u00e8re , on peut repr\u00e9senter graphiquement les premiers termes de la suite sans les calculer \u00e0 l'aide de la courbe \\(C_f\\) repr\u00e9sentant la fonction \\(f\\) et la droite \\(\\Delta\\) d'\u00e9quation \\(y=x\\) M\u00e9thode : Programme de construction Placer \\(u_0\\) sur l'axe des abscisses Placer le point \\(A_0\\) de \\(C_f\\) d'abscisse de \\(u_0\\) , son ordonn\u00e9e est \\(u_1=f(u_0)\\) . Placer le point \\(B_0\\) de \\(\\Delta\\) de m\u00eame ordonn\u00e9e que \\(A_0\\) c'est-\u00e0-dire d'ordonn\u00e9e \\(u_1\\) , son abscisse est aussi \\(u_1\\) Placer \\(u_1\\) l'abscisse de \\(B_0\\) sur l'axe des abscisses . Recommencer \u00e0 partir de \\(u_1\\) les m\u00eames \u00e9tapes et placer \\(u_2\\) , etc... La lecture graphique donne des valeurs approch\u00e9es des \\(u_n\\) , et elle permet d'\u00e9mettre des conjectures concernant le comportement global et asymptotique de la suite. Elle semble : \u00eatre croissante, d\u00e9croissante, stationnaire ou p\u00e9riodique; converger vers l'abscisse du point d'intersection de \\(C_f\\) et de \\(\\Delta\\) , ou diverger. Exercice On consid\u00e8re la suite \\((u_n)\\) d\u00e9finie par \\[ \\left\\{ \\begin{array}{lcl} u_{0} & = & 1.8 \\\\ u_{n+1} & = & f(u_n) \\end{array} \\right. \\] avec \\(f(x) =\\dfrac{2}{3-x}\\) . On admet que \\(f\\) est croissante sur \\([0,3[\\) . Construire les premiers termes de la suite en utilisant le programme de construction. Conjecturer les variations de la suite \\(u\\) . Par quelles valeurs semble-t-elle born\u00e9e?","title":"Rappel sur les suites"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/01_Rappels_sur_les_suites.html#rappels_sur_les_suites","text":"","title":"Rappels sur les suites"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/01_Rappels_sur_les_suites.html#definition","text":"D\u00e9finition Une suite not\u00e9e \\(u\\) ou ( \\(u_n\\) ) est une fonction dans laquelle la variable \\(n\\) ne prend que des valeurs enti\u00e8res positives. A chaque entier naturel \\(n\\) on associe un nombre r\u00e9el \\(u(n)\\) image de l'entier \\(n\\) par \\(u\\) , not\u00e9e \\(u_n\\) , appel\u00e9e terme d'indice \\(n\\) ou terme g\u00e9n\u00e9ral de la suite \\((u_n)\\) . Warning Attention bien faire la diff\u00e9rence entre le terme g\u00e9n\u00e9ral \\(u_n\\) et la suite ( \\(u_n\\) ).","title":"D\u00e9finition"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/01_Rappels_sur_les_suites.html#modes_de_generation_dune_suite","text":"M\u00e9thode On peut d\u00e9finir une suite de fa\u00e7on explicite en fonction de \\(n\\) : \\(\\mathbf{u_n=f(n)}\\) Exercice Soit \\((u_n)\\) la suite d\u00e9finie par \\(u_n=-5+7n\\) pour \\(n \\geqslant0\\) . Ici \\(u_n=f(n)\\) . D\u00e9terminer \\(f\\) . Calculer \\(u_0\\) , \\(u_1\\) , \\(u_2\\) , \\(u_6\\) Solution \\(f(x)=-5+7x\\) \\(u_0=-5+7\\times0=-5\\) \\(u_1=-5+7\\times1=2\\) \\(u_2=-5+7\\times2=9\\) \\(u_6=-5+7\\times6=37\\) M\u00e9thode On peut d\u00e9finir une suite de fa\u00e7on r\u00e9currente du type \\[\\begin{array}{lcl} u_{0} & = & a \\\\ u_{n+1} & = & f(u_n) \\end{array}\\] La suite est d\u00e9finie par la donn\u00e9e de son premier terme et d'une relation de r\u00e9currence entre un terme et le terme suivant ) Exercice Soit \\((u_n)_{n \\in \\mathbb{N}}\\) la suite d\u00e9finie par : \\[ \\left\\{ \\begin{array}{lcl} u_{0} & = & 4 \\\\ u_{n+1} & = & 0.75 u_n+2 \\end{array} \\right. \\] D\u00e9terminer \\(f\\) telle que \\(u_{n+1}=f(u_n)\\) Calculer \\(u_1\\) , \\(u_2\\) , \\(u_3\\) . Et pour \\(u_{100}\\) , qu'en pensez-vous ? Solution Ici \\(u_{n+1} =f(u_n)\\) avec \\(f(x)=-2x+1\\) \\(u_1=0.75u_0+2=0.75\\times4+2=5\\) \\(u_2=0.75u_1+2=0.75\\times(5)+2=5.75\\) \\(u_3=0.75u_2+2=0.75\\times5.75+2=6,3125\\) L'inconv\u00e9nient est que des termes \"\u00e9loign\u00e9s\" du d\u00e9but de la suite sont difficiles d'acc\u00e8s: pour calculer \\(u_{100}\\) il faut, a priori, calculer tous les termes pr\u00e9c\u00e9dents, jusqu'\u00e0 \\(u_{99}\\) !! Il sera parfois n\u00e9cessaire d'utiliser un programme afin de calculer des termes \u00e9loign\u00e9es. M\u00e9thode On peut encore d\u00e9finir une suite par l\u2019interm\u00e9diaire d\u2019une autre suite ou par une somme de termes, etc. . . Par exemple : \\((u_n)\\) \u00e9tant d\u00e9finie, on d\u00e9finit la suite ( \\(v_n\\) ) par : \\(v_n = u_n- 4\\) On d\u00e9finit la suite ( \\(w_n\\) ) pour tout \\(n\\in \\mathbb{N}^*\\) par : \\[ w_n = \\sum_{i=1}^n \\dfrac{1}{i} =1+\\dfrac12+\\dfrac13+\\cdots+\\dfrac{1}{n} \\]","title":"Modes de g\u00e9n\u00e9ration d'une suite"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/01_Rappels_sur_les_suites.html#representation_graphique_dune_suite","text":"","title":"Repr\u00e9sentation graphique d'une suite"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/01_Rappels_sur_les_suites.html#la_suite_est_definie_de_facon_explicite","text":"On peut representer une telle suite sur une droite (avec donc des points de coordonn\u00e9es \\((u_n;0)\\) ) ou dans un plan avec des points de coordonn\u00e9es \\((n;u_n)\\) . Suite \\(u_n=\\sqrt{n}\\) sur une droite : Suite \\(u_n=\\sqrt{n}\\) dans un plan :","title":"La suite est d\u00e9finie de fa\u00e7on explicite"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/01_Rappels_sur_les_suites.html#la_suite_est_definie_a_laide_dune_relation_de_recurrence","text":"Le plan est muni d'un rep\u00e8re , on peut repr\u00e9senter graphiquement les premiers termes de la suite sans les calculer \u00e0 l'aide de la courbe \\(C_f\\) repr\u00e9sentant la fonction \\(f\\) et la droite \\(\\Delta\\) d'\u00e9quation \\(y=x\\) M\u00e9thode : Programme de construction Placer \\(u_0\\) sur l'axe des abscisses Placer le point \\(A_0\\) de \\(C_f\\) d'abscisse de \\(u_0\\) , son ordonn\u00e9e est \\(u_1=f(u_0)\\) . Placer le point \\(B_0\\) de \\(\\Delta\\) de m\u00eame ordonn\u00e9e que \\(A_0\\) c'est-\u00e0-dire d'ordonn\u00e9e \\(u_1\\) , son abscisse est aussi \\(u_1\\) Placer \\(u_1\\) l'abscisse de \\(B_0\\) sur l'axe des abscisses . Recommencer \u00e0 partir de \\(u_1\\) les m\u00eames \u00e9tapes et placer \\(u_2\\) , etc... La lecture graphique donne des valeurs approch\u00e9es des \\(u_n\\) , et elle permet d'\u00e9mettre des conjectures concernant le comportement global et asymptotique de la suite. Elle semble : \u00eatre croissante, d\u00e9croissante, stationnaire ou p\u00e9riodique; converger vers l'abscisse du point d'intersection de \\(C_f\\) et de \\(\\Delta\\) , ou diverger. Exercice On consid\u00e8re la suite \\((u_n)\\) d\u00e9finie par \\[ \\left\\{ \\begin{array}{lcl} u_{0} & = & 1.8 \\\\ u_{n+1} & = & f(u_n) \\end{array} \\right. \\] avec \\(f(x) =\\dfrac{2}{3-x}\\) . On admet que \\(f\\) est croissante sur \\([0,3[\\) . Construire les premiers termes de la suite en utilisant le programme de construction. Conjecturer les variations de la suite \\(u\\) . Par quelles valeurs semble-t-elle born\u00e9e?","title":"La suite est d\u00e9finie \u00e0 l'aide d'une relation de r\u00e9currence"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/02_Suites_et_python.html","text":"Suites et python Suite d\u00e9finie de fa\u00e7on explicite Pour d\u00e9terminer, dans le cas d'une suite d\u00e9finie explicitement, il suffit d'utiliser la m\u00eame m\u00e9thode que pour calculer une image d'une fonction. def f ( x ): return - 5 + 7 * x def suiteU ( n ): return f ( n ) n = 5 print ( \"u(\" + str ( n ) + \") = \" + str ( suiteU ( 5 ))) affiche u ( 5 ) = 30 L'utilisation d'une fonction python pour \\(f\\) simplifie le calcul pour une autre suite : il suffit de modifier cette fonction python. Exercice Quelle est la suite d\u00e9finie par le programme pr\u00e9c\u00e9dent ? Exercice Ecrire un programme qui fait la m\u00eame chose, mais sans utiliser la fonction def f(x) . Suite d\u00e9finie par une relation de r\u00e9currence - Boucle for Rappel La boucle for M\u00e9thode Pour calculer \\(u_n\\) avec une suite d\u00e9finie par r\u00e9currence def suiteU ( n , u0 ): u = u0 for i in range ( n ): u = 0.75 * u + 4 return u n = 10 u0 = 2 print ( \"u(\" + str ( n ) + \") = \" + str ( suiteU ( n , u0 ))) affiche u ( 10 ) = 15.211610794067383 Exercice Quelle est la suite d\u00e9finie par le programme pr\u00e9c\u00e9dent ? Que pouvez-vous modifier facilement ? En vous inspirant de l'exemple de la partie pr\u00e9c\u00e9dente, am\u00e9liorez-le ! Modifiez ce programme pour qu'il affiche toutes les valeurs interm\u00e9diares de la suite. Solution def f ( x ): return 0.75 * x + 4 def suiteU ( n , u0 ): u = u0 for i in range ( n ): u = f ( u ) return u n = 10 u0 = 2 print ( \"u(\" + str ( n ) + \") = \" + str ( suiteU ( n , u0 ))) def f ( x ): return 0.75 * x + 4 def suiteU ( n , u0 ): u = u0 for i in range ( n ): print ( u ) u = f ( u ) return u n = 10 u0 = 2 print ( \"u(\" + str ( n ) + \") = \" + str ( suiteU ( n , u0 ))) La place du print(u) est important. Essayez de la positionner apr\u00e8s u=f(u) Suite d\u00e9finie par une relation de r\u00e9currence - Boucle while Exercice Quelle est l'\u00e9norme erreur du code suivant ? ERREUR A NE JAMAIS FAIRE def f ( x ): return 0.75 * x + 4 def suiteU ( n , u0 ): u = u0 ind = 0 while ind < n : u = f ( u ) return u n = 10 u0 = 2 print ( \"u(\" + str ( n ) + \") = \" + str ( suiteU ( n , u0 ))) Modifiez-le ! Solution Il ya une boucle infinie, car la condition du while n'est jamais modifi\u00e9e ! ```python def f(x): return 0.75*x+4 def suiteU(n,u0): u=u0 ind=0 while ind<n: ind=ind+1 u=f(u) return u n=10 u0=2 print(\"u(\"+str(n)+\") = \"+str(suiteU(n,u0))) ``` Somme des termes d'une suite Pour calculer une somme de termes, il faut une variable qui va accumuler en les ajoutant les termes au fur et \u00e0 mesure. def f ( x ): return - 5 + 7 * x def suiteU ( n ): return f ( n ) def somme ( n ): S = 0 for i in range ( n + 1 ): S = S + suiteU ( i ) return S n = 10 print ( 'Sa somme u(0)+...+u(' + str ( n ) + ') = ' , somme ( n )) Exercice Soit \\[ \\left\\{ \\begin{array}{lcl} u_0 = 3000 \\\\ u_{n+1} = 0.9u_n+100 \\end{array} \\right. \\] Ecrivez le programme qui retourne \\(u_0+u_1+\\ldots+u_{n}\\) en fonction de \\(n\\) . Calcul de l'indice d'une valeur seuil Le but est de d\u00e9terminer un indice \\(p\\) tel que \\(u_p > v\\) , o\u00f9 \\(v\\) est une valeur pr\u00e9cis\u00e9e par le contexte. A FAIRE","title":"Suites et python"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/02_Suites_et_python.html#suites_et_python","text":"","title":"Suites et python"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/02_Suites_et_python.html#suite_definie_de_facon_explicite","text":"Pour d\u00e9terminer, dans le cas d'une suite d\u00e9finie explicitement, il suffit d'utiliser la m\u00eame m\u00e9thode que pour calculer une image d'une fonction. def f ( x ): return - 5 + 7 * x def suiteU ( n ): return f ( n ) n = 5 print ( \"u(\" + str ( n ) + \") = \" + str ( suiteU ( 5 ))) affiche u ( 5 ) = 30 L'utilisation d'une fonction python pour \\(f\\) simplifie le calcul pour une autre suite : il suffit de modifier cette fonction python. Exercice Quelle est la suite d\u00e9finie par le programme pr\u00e9c\u00e9dent ? Exercice Ecrire un programme qui fait la m\u00eame chose, mais sans utiliser la fonction def f(x) .","title":"Suite d\u00e9finie de fa\u00e7on explicite"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/02_Suites_et_python.html#suite_definie_par_une_relation_de_recurrence_-_boucle_for","text":"Rappel La boucle for M\u00e9thode Pour calculer \\(u_n\\) avec une suite d\u00e9finie par r\u00e9currence def suiteU ( n , u0 ): u = u0 for i in range ( n ): u = 0.75 * u + 4 return u n = 10 u0 = 2 print ( \"u(\" + str ( n ) + \") = \" + str ( suiteU ( n , u0 ))) affiche u ( 10 ) = 15.211610794067383 Exercice Quelle est la suite d\u00e9finie par le programme pr\u00e9c\u00e9dent ? Que pouvez-vous modifier facilement ? En vous inspirant de l'exemple de la partie pr\u00e9c\u00e9dente, am\u00e9liorez-le ! Modifiez ce programme pour qu'il affiche toutes les valeurs interm\u00e9diares de la suite. Solution def f ( x ): return 0.75 * x + 4 def suiteU ( n , u0 ): u = u0 for i in range ( n ): u = f ( u ) return u n = 10 u0 = 2 print ( \"u(\" + str ( n ) + \") = \" + str ( suiteU ( n , u0 ))) def f ( x ): return 0.75 * x + 4 def suiteU ( n , u0 ): u = u0 for i in range ( n ): print ( u ) u = f ( u ) return u n = 10 u0 = 2 print ( \"u(\" + str ( n ) + \") = \" + str ( suiteU ( n , u0 ))) La place du print(u) est important. Essayez de la positionner apr\u00e8s u=f(u)","title":"Suite d\u00e9finie par une relation de r\u00e9currence - Boucle for"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/02_Suites_et_python.html#suite_definie_par_une_relation_de_recurrence_-_boucle_while","text":"Exercice Quelle est l'\u00e9norme erreur du code suivant ? ERREUR A NE JAMAIS FAIRE def f ( x ): return 0.75 * x + 4 def suiteU ( n , u0 ): u = u0 ind = 0 while ind < n : u = f ( u ) return u n = 10 u0 = 2 print ( \"u(\" + str ( n ) + \") = \" + str ( suiteU ( n , u0 ))) Modifiez-le ! Solution Il ya une boucle infinie, car la condition du while n'est jamais modifi\u00e9e ! ```python def f(x): return 0.75*x+4 def suiteU(n,u0): u=u0 ind=0 while ind<n: ind=ind+1 u=f(u) return u n=10 u0=2 print(\"u(\"+str(n)+\") = \"+str(suiteU(n,u0))) ```","title":"Suite d\u00e9finie par une relation de r\u00e9currence - Boucle while"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/02_Suites_et_python.html#somme_des_termes_dune_suite","text":"Pour calculer une somme de termes, il faut une variable qui va accumuler en les ajoutant les termes au fur et \u00e0 mesure. def f ( x ): return - 5 + 7 * x def suiteU ( n ): return f ( n ) def somme ( n ): S = 0 for i in range ( n + 1 ): S = S + suiteU ( i ) return S n = 10 print ( 'Sa somme u(0)+...+u(' + str ( n ) + ') = ' , somme ( n )) Exercice Soit \\[ \\left\\{ \\begin{array}{lcl} u_0 = 3000 \\\\ u_{n+1} = 0.9u_n+100 \\end{array} \\right. \\] Ecrivez le programme qui retourne \\(u_0+u_1+\\ldots+u_{n}\\) en fonction de \\(n\\) .","title":"Somme des termes d'une suite"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/02_Suites_et_python.html#calcul_de_lindice_dune_valeur_seuil","text":"Le but est de d\u00e9terminer un indice \\(p\\) tel que \\(u_p > v\\) , o\u00f9 \\(v\\) est une valeur pr\u00e9cis\u00e9e par le contexte. A FAIRE","title":"Calcul de l'indice d'une valeur seuil"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/03_Suite_et_sens_de_variations.html","text":"Suite et sens de variations D\u00e9finition Une suite \\((u_n)\\) est croissante ( \u00e0 partir d'un certain rang \\(k\\) ) si pour tout \\(n\\geqslant k\\) , on a \\(u_{n}\\leqslant u_{n+1}\\) Une suite \\((u_n)\\) est d\u00e9croissante ( \u00e0 partir d'un certain rang \\(k\\) ) si pour tout \\(n\\geqslant k\\) , on a \\(u_{n}\\geqslant u_{n+1}\\) Une suite \\((u_n)\\) est monotone ( \u00e0 partir d'un certain rang \\(k\\) ) si elle est croissante ou d\u00e9croissante ( \u00e0 partir d'un certain rang \\(k\\) ) ATTENTION Il existe des suites qui ne sont ni croissantes ni d\u00e9croissantes par exemple \\(u_n=(-1)^n\\) . M\u00e9thodes pour \u00e9tudier le sens de variation Suite d\u00e9finie par une relation explicite Technique alg\u00e9brique On utilise la d\u00e9finition pour cela on \u00e9tudie le signe de \\(u_{n+1}-u_n\\) Si la quantit\u00e9 est positive \u00e0 partir d'un certain rang \\(k\\) , la suite est croissante pour \\(n\\geqslant k\\) Si la quantit\u00e9 est n\u00e9gative \u00e0 partir d'un certain rang \\(k\\) , la suite est d\u00e9croissante pour \\(n\\geqslant k\\) Technique fonctionnelle Si \\(u_n=f(n)\\) o\u00f9 \\(f\\) est une fonction d\u00e9finie et monotone sur \\([0,+\\infty[\\) , on \u00e9tudie le sens de variation de \\(f\\) . En effet, sous cette hypoth\u00e8se, la suite a les m\u00eames variations que la fonction. ATTENTION Il est possible d'avoir une fonction non monotone sur \\([0,+\\infty[\\) , et pourtant la suite d\u00e9finie par \\(u_n=f(n)\\) est elle monotone. Comparaison avec 1 Si la suite \\(u\\) est \u00e0 termes strictement positifs c'est-\u00e0-dire si \\(u_n>0\\) alors on peut comparer \\(\\dfrac{u_{n+1}}{u_n}\\) avec 1. Si pour tout \\(n\\) , \\(\\dfrac{u_{n+1}}{u_n} \\geq 1\\) avec \\(u_n>0\\) alors \\(u_{n+1} \\geq u_n\\) et la suite \\(u\\) est croissante. Si pour tout \\(n\\) , \\(\\dfrac{u_{n+1}}{u_n} \\leq 1\\) avec \\(u_n>0\\) alors \\(u_{n+1} \\leq u_n\\) et la suite \\(u\\) est d\u00e9croissante. Et si \\(u_n < 0\\) ? Pour cette m\u00e9thode, il faut s'adapter si \\(u_n<0\\) pour tout \\(n\\) . R\u00e9ponse Si la suite \\(u\\) est \u00e0 termes strictement n\u00e9gatifs c'est-\u00e0-dire si \\(u_n<0\\) alors on peut comparer \\(\\dfrac{u_{n+1}}{u_n}\\) avec 1. Si pour tout \\(n\\) , \\(\\dfrac{u_{n+1}}{u_n} \\geq 1\\) avec \\(u_n<0\\) alors \\(u_{n+1} \\leq u_n\\) et la suite \\(u\\) est d\u00e9croissante. Si pour tout \\(n\\) , \\(\\dfrac{u_{n+1}}{u_n} \\leq 1\\) avec \\(u_n<0\\) alors \\(u_{n+1} \\geq u_n\\) et la suite \\(u\\) est croissante. ATTENTION Naturellement, cette m\u00e9thode est inutilisable si \\((u_n)\\) n'est pas (\u00e0 partir d'un certain rang) de signe constant. Utiliser une d\u00e9monstration par r\u00e9currence cf raisonnement par r\u00e9currence Naturellement, il est possible d'utiliser les m\u00e9thodes pr\u00e9c\u00e9dentes \u00e0 partir d'un certain rang. Exercice Conjecturer \u00e0 l'aide de la calculatrice le sens de variation de chacune des suites \\((u_n)\\) et d\u00e9montrer la conjecture . \\(u_n=- \\dfrac{n^2+1}{2n}\\) pour \\(n \\geq 1\\) \\(u_n=\\sqrt{n+1}\\) pour \\(n\\geq 0\\) \\(u_n=\\dfrac{2^n}{n}\\) pour \\(n\\geq 1\\) Solution Pour \\(n\\geq 1\\) , on a : \\(u_{n+1}-u_n=-\\dfrac{(n+1)^2+1}{2(n+1)}+\\dfrac{n^2+1}{2n}=\\dfrac{-n^2-n+1}{2n(n+1)}\\) . Or pour \\(n\\geq 1\\) , on a \\(1-n \\leq 0\\) et donc \\(-n^2+1-n<0\\) \\(2n(n+1)\\) >0 donc \\(u_{n+1}-u_n<0\\) et la suite $(u_n) $ est d\u00e9croissante \u00e0 partir du rang 1. \\(u_n=f(n)\\) avec \\(f(x)=\\sqrt{x+1}\\) La fonction \\(f\\) est croissante sur \\([0,+\\infty[\\) car elle a le m\u00eame sens de variation que la fonction \\(x\\mapsto x+1\\) . Pour tout \\(n\\geq0\\) , on a \\(n+1\\geq n\\) donc \\(f(n+1)\\geq f(n)\\) soit \\(u_{n+1}\\geq u_n\\) et la suite \\((u_n)\\) est croissante . \\(\\dfrac{u_{n+1}}{u_n}=\\dfrac{2^{n+1}}{n+1}\\times \\dfrac{n}{2^n}=\\dfrac{2n}{n+1}\\) Pour \\(n\\geq 1\\) on a \\(2n\\geq n+1\\) donc \\(\\dfrac{u_{n+1}}{u_n}\\geq 1\\) et puisque \\(u_n>0\\) , \\(u_{n+1}\\geq u_n\\) . La suite \\((u_n)\\) est croissante \u00e0 partir du rang 1. Suite d\u00e9finie par une relation de r\u00e9currence Ici, pas de m\u00e9thode particuli\u00e8re. Il faut essayer de se ramener \u00e0 une suite d\u00e9finie explicitement ou utiliser la d\u00e9finition. Pour ce dernier point, un raisonnement par r\u00e9currence est souvent appropri\u00e9.","title":"Suites et sens de variations"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/03_Suite_et_sens_de_variations.html#suite_et_sens_de_variations","text":"D\u00e9finition Une suite \\((u_n)\\) est croissante ( \u00e0 partir d'un certain rang \\(k\\) ) si pour tout \\(n\\geqslant k\\) , on a \\(u_{n}\\leqslant u_{n+1}\\) Une suite \\((u_n)\\) est d\u00e9croissante ( \u00e0 partir d'un certain rang \\(k\\) ) si pour tout \\(n\\geqslant k\\) , on a \\(u_{n}\\geqslant u_{n+1}\\) Une suite \\((u_n)\\) est monotone ( \u00e0 partir d'un certain rang \\(k\\) ) si elle est croissante ou d\u00e9croissante ( \u00e0 partir d'un certain rang \\(k\\) ) ATTENTION Il existe des suites qui ne sont ni croissantes ni d\u00e9croissantes par exemple \\(u_n=(-1)^n\\) .","title":"Suite et sens de variations"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/03_Suite_et_sens_de_variations.html#methodes_pour_etudier_le_sens_de_variation","text":"","title":"M\u00e9thodes pour \u00e9tudier le sens de variation"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/03_Suite_et_sens_de_variations.html#suite_definie_par_une_relation_explicite","text":"Technique alg\u00e9brique On utilise la d\u00e9finition pour cela on \u00e9tudie le signe de \\(u_{n+1}-u_n\\) Si la quantit\u00e9 est positive \u00e0 partir d'un certain rang \\(k\\) , la suite est croissante pour \\(n\\geqslant k\\) Si la quantit\u00e9 est n\u00e9gative \u00e0 partir d'un certain rang \\(k\\) , la suite est d\u00e9croissante pour \\(n\\geqslant k\\) Technique fonctionnelle Si \\(u_n=f(n)\\) o\u00f9 \\(f\\) est une fonction d\u00e9finie et monotone sur \\([0,+\\infty[\\) , on \u00e9tudie le sens de variation de \\(f\\) . En effet, sous cette hypoth\u00e8se, la suite a les m\u00eames variations que la fonction. ATTENTION Il est possible d'avoir une fonction non monotone sur \\([0,+\\infty[\\) , et pourtant la suite d\u00e9finie par \\(u_n=f(n)\\) est elle monotone. Comparaison avec 1 Si la suite \\(u\\) est \u00e0 termes strictement positifs c'est-\u00e0-dire si \\(u_n>0\\) alors on peut comparer \\(\\dfrac{u_{n+1}}{u_n}\\) avec 1. Si pour tout \\(n\\) , \\(\\dfrac{u_{n+1}}{u_n} \\geq 1\\) avec \\(u_n>0\\) alors \\(u_{n+1} \\geq u_n\\) et la suite \\(u\\) est croissante. Si pour tout \\(n\\) , \\(\\dfrac{u_{n+1}}{u_n} \\leq 1\\) avec \\(u_n>0\\) alors \\(u_{n+1} \\leq u_n\\) et la suite \\(u\\) est d\u00e9croissante. Et si \\(u_n < 0\\) ? Pour cette m\u00e9thode, il faut s'adapter si \\(u_n<0\\) pour tout \\(n\\) . R\u00e9ponse Si la suite \\(u\\) est \u00e0 termes strictement n\u00e9gatifs c'est-\u00e0-dire si \\(u_n<0\\) alors on peut comparer \\(\\dfrac{u_{n+1}}{u_n}\\) avec 1. Si pour tout \\(n\\) , \\(\\dfrac{u_{n+1}}{u_n} \\geq 1\\) avec \\(u_n<0\\) alors \\(u_{n+1} \\leq u_n\\) et la suite \\(u\\) est d\u00e9croissante. Si pour tout \\(n\\) , \\(\\dfrac{u_{n+1}}{u_n} \\leq 1\\) avec \\(u_n<0\\) alors \\(u_{n+1} \\geq u_n\\) et la suite \\(u\\) est croissante. ATTENTION Naturellement, cette m\u00e9thode est inutilisable si \\((u_n)\\) n'est pas (\u00e0 partir d'un certain rang) de signe constant. Utiliser une d\u00e9monstration par r\u00e9currence cf raisonnement par r\u00e9currence Naturellement, il est possible d'utiliser les m\u00e9thodes pr\u00e9c\u00e9dentes \u00e0 partir d'un certain rang. Exercice Conjecturer \u00e0 l'aide de la calculatrice le sens de variation de chacune des suites \\((u_n)\\) et d\u00e9montrer la conjecture . \\(u_n=- \\dfrac{n^2+1}{2n}\\) pour \\(n \\geq 1\\) \\(u_n=\\sqrt{n+1}\\) pour \\(n\\geq 0\\) \\(u_n=\\dfrac{2^n}{n}\\) pour \\(n\\geq 1\\) Solution Pour \\(n\\geq 1\\) , on a : \\(u_{n+1}-u_n=-\\dfrac{(n+1)^2+1}{2(n+1)}+\\dfrac{n^2+1}{2n}=\\dfrac{-n^2-n+1}{2n(n+1)}\\) . Or pour \\(n\\geq 1\\) , on a \\(1-n \\leq 0\\) et donc \\(-n^2+1-n<0\\) \\(2n(n+1)\\) >0 donc \\(u_{n+1}-u_n<0\\) et la suite $(u_n) $ est d\u00e9croissante \u00e0 partir du rang 1. \\(u_n=f(n)\\) avec \\(f(x)=\\sqrt{x+1}\\) La fonction \\(f\\) est croissante sur \\([0,+\\infty[\\) car elle a le m\u00eame sens de variation que la fonction \\(x\\mapsto x+1\\) . Pour tout \\(n\\geq0\\) , on a \\(n+1\\geq n\\) donc \\(f(n+1)\\geq f(n)\\) soit \\(u_{n+1}\\geq u_n\\) et la suite \\((u_n)\\) est croissante . \\(\\dfrac{u_{n+1}}{u_n}=\\dfrac{2^{n+1}}{n+1}\\times \\dfrac{n}{2^n}=\\dfrac{2n}{n+1}\\) Pour \\(n\\geq 1\\) on a \\(2n\\geq n+1\\) donc \\(\\dfrac{u_{n+1}}{u_n}\\geq 1\\) et puisque \\(u_n>0\\) , \\(u_{n+1}\\geq u_n\\) . La suite \\((u_n)\\) est croissante \u00e0 partir du rang 1.","title":"Suite d\u00e9finie par une relation explicite"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/03_Suite_et_sens_de_variations.html#suite_definie_par_une_relation_de_recurrence","text":"Ici, pas de m\u00e9thode particuli\u00e8re. Il faut essayer de se ramener \u00e0 une suite d\u00e9finie explicitement ou utiliser la d\u00e9finition. Pour ce dernier point, un raisonnement par r\u00e9currence est souvent appropri\u00e9.","title":"Suite d\u00e9finie par une relation de r\u00e9currence"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/04_Suites_aritmetiques.html","text":"Suites arithm\u00e9tiques D\u00e9finition Une suite \\((u_n)\\) est une suite arithm\u00e9tique de raison \\(r\\) si pour tout \\(n\\in\\mathbb{N}\\) : \\(u_{n+1}=u_n+r\\) Th\u00e9or\u00e8me Une suite arithm\u00e9tique est croissante si \\(r >0\\) et d\u00e9croissante si \\(r <0\\) Pour tous \\(n,p\\in \\mathbb{N}\\) , on a : \\(u_n=u_p+(n-p)r\\) en particulier \\(u_n= u_0+nr\\) Dans un rep\u00e8re ,les points de coordonn\u00e9es \\((n,u_n)\\) sont align\u00e9s sur une droite de coefficient directeur \\(r\\) . La somme des \\(n\\) premiers nombres entiers non nuls est: \\[ 1+2+3+\\cdots +n=\\sum_{k=1}^{n} k=\\dfrac{n(n+1)}{2} \\] Histoire : lisez l'article sur Carl Friedrich Gauss Plus g\u00e9n\u00e9ralement, si \\((u_n)\\) est une suite arithm\u00e9tique et \\(p\\leqslant n\\) : \\(\\sum_{i=p}^n u_i = u_p+u_{p+1}+ \\ldots + u_{n} = \\dfrac{(u_p+u_n)(n-p+1)}{2}\\) en particulier : \\[ \\sum_{i=0}^n u_i = u_0+u_1+ \\ldots + u_{n} = \\dfrac{(u_0+u_n)(n+1)}{2} \\] M\u00e9thode Cette derni\u00e8re formule se retient sous la forme : \\(u_p+u_{p+1}+ \\ldots + u_{n} = \\dfrac{(\\text{ premier terme }+\\text{ dernier terme })(\\text{ nombre de termes})}{2}\\) ATTENTION Le nombre de termes entre \\(u_p\\) et \\(u_n\\) ( \\(p\\leqslant n\\) ) est \\(n-p+1\\) ! Vous pouvez aller voir ici ou l\u00e0 Vous devez savoir justifier qu'une suite est une suite arithm\u00e9tique (par le calcul ou dans un contexte d'\u00e9volution avec une valeur fixe). Vous devez savoir d\u00e9montrer qu'une suite n'est pas une suite arithm\u00e9tique. Exercice Les suites \\((u_n)\\) suivantes d\u00e9finies pour \\(n \\in \\mathbb{N}\\) sont-elles arithm\u00e9tiques? \\(u_n= 3n + 1\\) \\(u_n = n^2 +1\\) Solution \\(u_{n+1}=3(n+1)+1=3n+1+3=u_n+3\\) donc suite arithm\u00e9tique de raison 3 et de premier terme 1. En effet, on a d\u00e9montr\u00e9 que pour tout \\(n \\in \\mathbb{N}\\) , \\(u_{n+1} = u_n+3\\) . \\(u_{n+1}=(n+1)^2+1=n^2+2n+1+1=u_n+2n+1\\) donc \\(u_n\\) ne semble pas arithm\u00e9tique. On peut alors le prouver avec un contre-exemple : \\(u_1-u_0=1 \\neq u_2-u_1\\) ( \\(=3\\) ) ATTENTION Le calcul des premiers valeurs (m\u00eame en tr\u00e8s grand nombre) ne permet pas de justifier qu'une suite est une suite arithm\u00e9tique ! Exercice Soit \\((u_n)\\) la suite d\u00e9finie sur \\(\\mathbb{N}\\) par \\[ u_n=0.5n+4+n(n-1)(n-2)(n-3)(n-4)(n-5)\\times 0.4^n \\] Calculer les 5 premiers termes de la suite \\((u_n)\\) . Que pouvez-vous conjecturer ? Comment se situent les points associ\u00e9s \u00e0 une suite arithm\u00e9tique ? Tracer le nuage de points de \\((u_n)\\) pour les dix premiers termes. Qu'en concluez-vous ? Modifier \\(u_n\\) afin qu'elle semble arithm\u00e9tique sur les \\(1000\\) premiers termes. Exercice Repr\u00e9senter \u00e0 la calculatrice les termes de la suite \\((u_n)\\) d\u00e9finie pour tout \\(n\\geq0\\) par : \\[ \\left\\{ \\begin{array}{lcl} u_{0} & = & 2 \\\\ u_{n+1} & = & u_n + 0.5 \\end{array} \\right. \\] Quelle est la nature de la suite \\((u_n)\\) Exprimer \\(u_n\\) en fonction de \\(n\\) Calculer \\(S_n= u_0+u_1+\\ldots + u_n\\)","title":"Suites arithm\u00e9tiques"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/04_Suites_aritmetiques.html#suites_arithmetiques","text":"D\u00e9finition Une suite \\((u_n)\\) est une suite arithm\u00e9tique de raison \\(r\\) si pour tout \\(n\\in\\mathbb{N}\\) : \\(u_{n+1}=u_n+r\\) Th\u00e9or\u00e8me Une suite arithm\u00e9tique est croissante si \\(r >0\\) et d\u00e9croissante si \\(r <0\\) Pour tous \\(n,p\\in \\mathbb{N}\\) , on a : \\(u_n=u_p+(n-p)r\\) en particulier \\(u_n= u_0+nr\\) Dans un rep\u00e8re ,les points de coordonn\u00e9es \\((n,u_n)\\) sont align\u00e9s sur une droite de coefficient directeur \\(r\\) . La somme des \\(n\\) premiers nombres entiers non nuls est: \\[ 1+2+3+\\cdots +n=\\sum_{k=1}^{n} k=\\dfrac{n(n+1)}{2} \\] Histoire : lisez l'article sur Carl Friedrich Gauss Plus g\u00e9n\u00e9ralement, si \\((u_n)\\) est une suite arithm\u00e9tique et \\(p\\leqslant n\\) : \\(\\sum_{i=p}^n u_i = u_p+u_{p+1}+ \\ldots + u_{n} = \\dfrac{(u_p+u_n)(n-p+1)}{2}\\) en particulier : \\[ \\sum_{i=0}^n u_i = u_0+u_1+ \\ldots + u_{n} = \\dfrac{(u_0+u_n)(n+1)}{2} \\] M\u00e9thode Cette derni\u00e8re formule se retient sous la forme : \\(u_p+u_{p+1}+ \\ldots + u_{n} = \\dfrac{(\\text{ premier terme }+\\text{ dernier terme })(\\text{ nombre de termes})}{2}\\) ATTENTION Le nombre de termes entre \\(u_p\\) et \\(u_n\\) ( \\(p\\leqslant n\\) ) est \\(n-p+1\\) ! Vous pouvez aller voir ici ou l\u00e0 Vous devez savoir justifier qu'une suite est une suite arithm\u00e9tique (par le calcul ou dans un contexte d'\u00e9volution avec une valeur fixe). Vous devez savoir d\u00e9montrer qu'une suite n'est pas une suite arithm\u00e9tique. Exercice Les suites \\((u_n)\\) suivantes d\u00e9finies pour \\(n \\in \\mathbb{N}\\) sont-elles arithm\u00e9tiques? \\(u_n= 3n + 1\\) \\(u_n = n^2 +1\\) Solution \\(u_{n+1}=3(n+1)+1=3n+1+3=u_n+3\\) donc suite arithm\u00e9tique de raison 3 et de premier terme 1. En effet, on a d\u00e9montr\u00e9 que pour tout \\(n \\in \\mathbb{N}\\) , \\(u_{n+1} = u_n+3\\) . \\(u_{n+1}=(n+1)^2+1=n^2+2n+1+1=u_n+2n+1\\) donc \\(u_n\\) ne semble pas arithm\u00e9tique. On peut alors le prouver avec un contre-exemple : \\(u_1-u_0=1 \\neq u_2-u_1\\) ( \\(=3\\) ) ATTENTION Le calcul des premiers valeurs (m\u00eame en tr\u00e8s grand nombre) ne permet pas de justifier qu'une suite est une suite arithm\u00e9tique ! Exercice Soit \\((u_n)\\) la suite d\u00e9finie sur \\(\\mathbb{N}\\) par \\[ u_n=0.5n+4+n(n-1)(n-2)(n-3)(n-4)(n-5)\\times 0.4^n \\] Calculer les 5 premiers termes de la suite \\((u_n)\\) . Que pouvez-vous conjecturer ? Comment se situent les points associ\u00e9s \u00e0 une suite arithm\u00e9tique ? Tracer le nuage de points de \\((u_n)\\) pour les dix premiers termes. Qu'en concluez-vous ? Modifier \\(u_n\\) afin qu'elle semble arithm\u00e9tique sur les \\(1000\\) premiers termes. Exercice Repr\u00e9senter \u00e0 la calculatrice les termes de la suite \\((u_n)\\) d\u00e9finie pour tout \\(n\\geq0\\) par : \\[ \\left\\{ \\begin{array}{lcl} u_{0} & = & 2 \\\\ u_{n+1} & = & u_n + 0.5 \\end{array} \\right. \\] Quelle est la nature de la suite \\((u_n)\\) Exprimer \\(u_n\\) en fonction de \\(n\\) Calculer \\(S_n= u_0+u_1+\\ldots + u_n\\)","title":"Suites arithm\u00e9tiques"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/05_Suites_geometrique.html","text":"Suites g\u00e9om\u00e9triques D\u00e9finition Une suite \\((u_n)\\) est une suite g\u00e9om\u00e9trique de raison \\(q\\) ( \\(q\\neq 0\\) ) si pour tout \\(n\\in\\mathbb{N}\\) : \\(u_{n+1}=qu_n\\) Th\u00e9or\u00e8me Pour tous \\(n,p\\in \\mathbb{N}\\) , on a : \\(u_n=u_p\\times q^{n-p}\\) en particulier \\(u_n= u_0\\times q^n\\) Th\u00e9or\u00e8me Soit \\(q\\) un r\u00e9el. La suite g\u00e9om\u00e9trique d\u00e9finie par : \\[ \\left\\{ \\begin{array}{lcl} u_{0} & = & 1 \\\\ u_{n+1} & = & q u_n \\end{array} \\right. \\] se note aussi \\((q^n)_{n \\in \\mathbb{N}}\\) . Le sens de variations d\u00e9pend de la valeur de \\(q\\) : la suite \\((q^n)_{n \\in \\mathbb{N}}\\) est croissante si \\(q>1\\) la suite \\((q^n)_{n \\in \\mathbb{N}}\\) est d\u00e9croissante si \\(0<q<1\\) la suite \\((q^n)_{n \\in \\mathbb{N}}\\) n'est pas monotone si \\(q<0\\) La somme des \\((n+1)\\) premi\u00e8res puissances d'un nombre r\u00e9el \\(q\\neq 1\\) est : \\[ S=1+q+q^2+ \\dots \\,+q^n=\\sum_{k=0}^{n} q^k=\\dfrac{1-q^{n+1}}{1-q} \\] ou plus g\u00e9n\u00e9ralement (pour \\(p \\leq n\\) ): \\[ S_1=q^p+q^{p+1}+\\dots \\,+q^n=\\sum_{k=0}^{n} q^k=\\dfrac{1-q^{n-p+1}}{1-q} \\] Exercice Que pensez-vous des cas \\(q=0\\) et \\(q=1\\) ? Le th\u00e9or\u00e8me pr\u00e9c\u00e9dent permet de trouver des r\u00e9sultats analogues pour les suites g\u00e9om\u00e9triques en g\u00e9n\u00e9ral. Le sens de variations d'une suite g\u00e9om\u00e9trique d\u00e9pend de la valeur de \\(q\\) et du signe des termes de la suite (Pourquoi ? \u00e0 vous d'y r\u00e9pondre) Les formules de la somme conduisent facilement \u00e0 celle d'une suite g\u00e9om\u00e9trique quelconque Th\u00e9or\u00e8me Si \\((u_n)\\) est une suite g\u00e9om\u00e9trique telle que \\(u_0>0\\) et \\(q>1\\) , alors \\((u_n)\\) est croissante. Si \\((u_n)\\) est une suite g\u00e9om\u00e9trique telle que \\(u_0>0\\) et \\(0<q<1\\) , alors \\((u_n)\\) est d\u00e9croissante. Si \\((u_n)\\) est une suite g\u00e9om\u00e9trique \\(q<0\\) , alors \\((u_n)\\) n'est pas monotone. si \\(p \\leq n\\) : \\[ S_n=\\sum_{i=p}^n u_i = u_p+u_{p+1}+ \\dots \\,+u_n=u_p\\dfrac{1-q^{n-p+1}}{1-q} \\] En particulier : \\[ S_n=\\sum_{i=0}^n u_i = u_0+u_{1}+ \\dots \\,+u_n=u_0\\dfrac{1-q^{n+1}}{1-q} \\] Exercice Donnez la formule dans le cas o\u00f9 \\((u_n)\\) est une suite g\u00e9om\u00e9trique de raison \\(q=1\\) . Exercice Repr\u00e9senter \u00e0 la calculatrice les termes de la suite \\((u_n)\\) d\u00e9finie pour tout \\(n\\geq0\\) par : $u_{n+1}=0,5 u _n $ et \\(u_0=2\\) Repr\u00e9senter \u00e0 la calculatrice les termes de la suite \\((u_n)\\) d\u00e9finie pour tout \\(n\\geq0\\) par : $u_{n+1}=-0,5 u _n $ et \\(u_0=2\\) Repr\u00e9senter \u00e0 la calculatrice les termes de la suite \\((u_n)\\) d\u00e9finie pour tout \\(n\\geq0\\) par : $u_{n+1}=1,2 u _n $ et \\(u_0=0,5\\) Exercice La suite \\(u\\) d\u00e9finie pour tout entier naturel \\(n\\) par \\(u_{n+1} = 3 u_n +1\\) avec \\(u_0=5\\) est-elle arithm\u00e9tique , g\u00e9om\u00e9trique ou ni l\u2019une ni l\u2019autre ? D\u00e9montrer que la suite \\((v_n)\\) d\u00e9finie pour tout entier naturel n , par \\(v_n = u_n +\\dfrac{1}{2}\\) est une suite g\u00e9om\u00e9trique dont on d\u00e9terminera le premier terme et la raison. Exprimer \\(v_n\\) en fonction de \\(n\\) Calculer \\(S_n= \\sum_{k=0}^{n}v_k\\) D\u00e9duire des questions pr\u00e9c\u00e9dentes l'expression de \\(u_n\\) et de \\(R_n=\\sum_{i=0}^n u_i\\) en fonction de \\(n\\) . Solution Ni l'un ni l'autre. En effet, comme \\(u_0=5\\) , \\(u_1=16\\) et \\(u_2=49\\) , \\(u_1-u_0 \\neq u_2-u_1\\) et \\(\\dfrac{u_1}{u_0} \\neq \\dfrac{u_2}{u_1}\\) . \\[\\begin{eqnarray} v_{n+1} & = & u_{n+1}+\\dfrac 12\\\\ & = & 3u_n+1+\\dfrac12\\\\ & = & 3u_n+\\dfrac32\\\\ & = & 3(u_n+\\dfrac12)\\\\ & = & 3v_n \\end{eqnarray}\\] \\((v_n)\\) est une suite g\u00e9om\u00e9trique de raison 3 et de premier terme \\(v_0= \\dfrac{11}{2}\\) . 3. \\(v_n= v_0q^n= \\dfrac{11}{2} \\times 3^n\\) . 4. \\(S_n=v_0+v_1+\\cdots v_n= \\dfrac{11}{2}+\\dfrac{11}{2} \\times 3+\\cdots \\dfrac{11}{2} \\times 3^n\\) \\(S_n= \\dfrac{11}{2}(1+3+\\cdots 3^n)= \\dfrac{11}{2}\\left(\\dfrac{1-3^{n+1}}{1-3}\\right)= -\\dfrac{11}{4}(1-3^{n+1})=\\dfrac{11}{4}(3^{n+1}-1)\\) Remarque : Pour la question 2., lorsque le facteur n'est pas \u00e9vident ou lorsque l'expression de \\(v_n\\) est plus compliqu\u00e9e, il est pr\u00e9f\u00e9rable d'utiliser la m\u00e9thode suivante : De \\(v_n=u_n+\\dfrac{1}{2}\\) , on trouve \\(u_n=v_n-\\dfrac{1}{2}\\) . Or \\(v_{n+1} = 3 u_n + \\dfrac{3}{2}\\) , donc \\(v_{n+1}=3 \\left( v_n-\\dfrac{1}{2} \\right)+\\dfrac{3}{2}=3v_n\\) . A lire suite arithm\u00e9tico g\u00e9om\u00e9trique Plan de remboursement Pour une lecture lors des soir\u00e9es d'hiver \\(1+2+3+4+5+\\ldots = - \\dfrac{1}{12}\\)","title":"Suites g\u00e9om\u00e9triques"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/05_Suites_geometrique.html#suites_geometriques","text":"D\u00e9finition Une suite \\((u_n)\\) est une suite g\u00e9om\u00e9trique de raison \\(q\\) ( \\(q\\neq 0\\) ) si pour tout \\(n\\in\\mathbb{N}\\) : \\(u_{n+1}=qu_n\\) Th\u00e9or\u00e8me Pour tous \\(n,p\\in \\mathbb{N}\\) , on a : \\(u_n=u_p\\times q^{n-p}\\) en particulier \\(u_n= u_0\\times q^n\\) Th\u00e9or\u00e8me Soit \\(q\\) un r\u00e9el. La suite g\u00e9om\u00e9trique d\u00e9finie par : \\[ \\left\\{ \\begin{array}{lcl} u_{0} & = & 1 \\\\ u_{n+1} & = & q u_n \\end{array} \\right. \\] se note aussi \\((q^n)_{n \\in \\mathbb{N}}\\) . Le sens de variations d\u00e9pend de la valeur de \\(q\\) : la suite \\((q^n)_{n \\in \\mathbb{N}}\\) est croissante si \\(q>1\\) la suite \\((q^n)_{n \\in \\mathbb{N}}\\) est d\u00e9croissante si \\(0<q<1\\) la suite \\((q^n)_{n \\in \\mathbb{N}}\\) n'est pas monotone si \\(q<0\\) La somme des \\((n+1)\\) premi\u00e8res puissances d'un nombre r\u00e9el \\(q\\neq 1\\) est : \\[ S=1+q+q^2+ \\dots \\,+q^n=\\sum_{k=0}^{n} q^k=\\dfrac{1-q^{n+1}}{1-q} \\] ou plus g\u00e9n\u00e9ralement (pour \\(p \\leq n\\) ): \\[ S_1=q^p+q^{p+1}+\\dots \\,+q^n=\\sum_{k=0}^{n} q^k=\\dfrac{1-q^{n-p+1}}{1-q} \\] Exercice Que pensez-vous des cas \\(q=0\\) et \\(q=1\\) ? Le th\u00e9or\u00e8me pr\u00e9c\u00e9dent permet de trouver des r\u00e9sultats analogues pour les suites g\u00e9om\u00e9triques en g\u00e9n\u00e9ral. Le sens de variations d'une suite g\u00e9om\u00e9trique d\u00e9pend de la valeur de \\(q\\) et du signe des termes de la suite (Pourquoi ? \u00e0 vous d'y r\u00e9pondre) Les formules de la somme conduisent facilement \u00e0 celle d'une suite g\u00e9om\u00e9trique quelconque Th\u00e9or\u00e8me Si \\((u_n)\\) est une suite g\u00e9om\u00e9trique telle que \\(u_0>0\\) et \\(q>1\\) , alors \\((u_n)\\) est croissante. Si \\((u_n)\\) est une suite g\u00e9om\u00e9trique telle que \\(u_0>0\\) et \\(0<q<1\\) , alors \\((u_n)\\) est d\u00e9croissante. Si \\((u_n)\\) est une suite g\u00e9om\u00e9trique \\(q<0\\) , alors \\((u_n)\\) n'est pas monotone. si \\(p \\leq n\\) : \\[ S_n=\\sum_{i=p}^n u_i = u_p+u_{p+1}+ \\dots \\,+u_n=u_p\\dfrac{1-q^{n-p+1}}{1-q} \\] En particulier : \\[ S_n=\\sum_{i=0}^n u_i = u_0+u_{1}+ \\dots \\,+u_n=u_0\\dfrac{1-q^{n+1}}{1-q} \\] Exercice Donnez la formule dans le cas o\u00f9 \\((u_n)\\) est une suite g\u00e9om\u00e9trique de raison \\(q=1\\) . Exercice Repr\u00e9senter \u00e0 la calculatrice les termes de la suite \\((u_n)\\) d\u00e9finie pour tout \\(n\\geq0\\) par : $u_{n+1}=0,5 u _n $ et \\(u_0=2\\) Repr\u00e9senter \u00e0 la calculatrice les termes de la suite \\((u_n)\\) d\u00e9finie pour tout \\(n\\geq0\\) par : $u_{n+1}=-0,5 u _n $ et \\(u_0=2\\) Repr\u00e9senter \u00e0 la calculatrice les termes de la suite \\((u_n)\\) d\u00e9finie pour tout \\(n\\geq0\\) par : $u_{n+1}=1,2 u _n $ et \\(u_0=0,5\\) Exercice La suite \\(u\\) d\u00e9finie pour tout entier naturel \\(n\\) par \\(u_{n+1} = 3 u_n +1\\) avec \\(u_0=5\\) est-elle arithm\u00e9tique , g\u00e9om\u00e9trique ou ni l\u2019une ni l\u2019autre ? D\u00e9montrer que la suite \\((v_n)\\) d\u00e9finie pour tout entier naturel n , par \\(v_n = u_n +\\dfrac{1}{2}\\) est une suite g\u00e9om\u00e9trique dont on d\u00e9terminera le premier terme et la raison. Exprimer \\(v_n\\) en fonction de \\(n\\) Calculer \\(S_n= \\sum_{k=0}^{n}v_k\\) D\u00e9duire des questions pr\u00e9c\u00e9dentes l'expression de \\(u_n\\) et de \\(R_n=\\sum_{i=0}^n u_i\\) en fonction de \\(n\\) . Solution Ni l'un ni l'autre. En effet, comme \\(u_0=5\\) , \\(u_1=16\\) et \\(u_2=49\\) , \\(u_1-u_0 \\neq u_2-u_1\\) et \\(\\dfrac{u_1}{u_0} \\neq \\dfrac{u_2}{u_1}\\) . \\[\\begin{eqnarray} v_{n+1} & = & u_{n+1}+\\dfrac 12\\\\ & = & 3u_n+1+\\dfrac12\\\\ & = & 3u_n+\\dfrac32\\\\ & = & 3(u_n+\\dfrac12)\\\\ & = & 3v_n \\end{eqnarray}\\] \\((v_n)\\) est une suite g\u00e9om\u00e9trique de raison 3 et de premier terme \\(v_0= \\dfrac{11}{2}\\) . 3. \\(v_n= v_0q^n= \\dfrac{11}{2} \\times 3^n\\) . 4. \\(S_n=v_0+v_1+\\cdots v_n= \\dfrac{11}{2}+\\dfrac{11}{2} \\times 3+\\cdots \\dfrac{11}{2} \\times 3^n\\) \\(S_n= \\dfrac{11}{2}(1+3+\\cdots 3^n)= \\dfrac{11}{2}\\left(\\dfrac{1-3^{n+1}}{1-3}\\right)= -\\dfrac{11}{4}(1-3^{n+1})=\\dfrac{11}{4}(3^{n+1}-1)\\) Remarque : Pour la question 2., lorsque le facteur n'est pas \u00e9vident ou lorsque l'expression de \\(v_n\\) est plus compliqu\u00e9e, il est pr\u00e9f\u00e9rable d'utiliser la m\u00e9thode suivante : De \\(v_n=u_n+\\dfrac{1}{2}\\) , on trouve \\(u_n=v_n-\\dfrac{1}{2}\\) . Or \\(v_{n+1} = 3 u_n + \\dfrac{3}{2}\\) , donc \\(v_{n+1}=3 \\left( v_n-\\dfrac{1}{2} \\right)+\\dfrac{3}{2}=3v_n\\) . A lire suite arithm\u00e9tico g\u00e9om\u00e9trique Plan de remboursement Pour une lecture lors des soir\u00e9es d'hiver \\(1+2+3+4+5+\\ldots = - \\dfrac{1}{12}\\)","title":"Suites g\u00e9om\u00e9triques"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/06_Raisonnement_par_recurrence.html","text":"Raisonnement par r\u00e9currence Le raisonnement par r\u00e9currence s'apparente \u00e0 la th\u00e9orie des dominos. On consid\u00e8re une suite de dominos. Quelles sont les deux conditions pour que tous les dominos tombent ? Faire tomber le premier domino et s'assurer que chaque domino renverse le suivant D'apr\u00e8s : maths-et-tiques.fr Lire Wikip\u00e9dia Le principe Soit une proposition \\(P(n)\\) (on lit \u00ab \\(P\\) au rang n\u00bb ) d\u00e9pendant d'un entier naturel \\(n\\) . Etape 1: initialisation : on v\u00e9rifie que la proposition est vraie pour la plus petite valeur \\(n_0\\) , Etape 2: h\u00e9r\u00e9dit\u00e9 : on suppose que pour un certain rang \\(k\\geq n_0\\) la proposition \\(P(k)\\) est vraie (on lit \u00ab \\(P\\) est vraie au rang k\u00bb ) :c'est l'hypoth\u00e8se de r\u00e9currence. Et on d\u00e9montre que \\(P(k+1)\\) est vraie. Etape 3: Conclusion : la proposition \\(P(n)\\) est vraie pour tout entier naturel \\(n\\geq n_0\\) . ATTENTION Une proposition est une phrase qui n'est pas obligatoirement une \u00e9galit\u00e9 ou une in\u00e9galit\u00e9 : Pour \\(n \\geq 2\\) , \\(P(n)\\) est \u00ab le nombre de diagonale dans un polygone \u00e0 \\(n\\) sommet est \\(n\\) \u00bb (cette proposition peut \u00eatre vraie ou fausse). Par contre, \u00ab la suite \\(u\\) est croissante \u00bb est une proposition qui ne d\u00e9pend pas de \\(n\\) . Elle ne convient pas pour un raisonnement par r\u00e9currence. On utilisera \\(P(n)\\) : \u00ab \\(u_{n+1} \\geq u_{n}\\) \u00bb. Exemple Soit la suite ( \\(u_n\\) ) d\u00e9finie pour tout naturel \\(n\\) par \\(u_0=2\\) et par la relation de r\u00e9currence : \\(u_{n+1}=3 u_n - 2\\) D\u00e9montrer par r\u00e9currence que pour tout entier naturel \\(n\\) , on a \\(u_n = 3^n+1\\) . Choix de la propoosition Soit \\(P(n)\\) la proposition d\u00e9finie par \u00ab \\(u_n = 3^n+1\\) \u00bb. Etape 1 : Initialisation Pour \\(n=0\\) on a: \\(3^0+1=2\\) et par ailleurs \\(u_0=2\\) donc \\(u_0=3^0+1\\) . La propri\u00e9t\u00e9 est vraie pour \\(n=0\\) donc \\(P(0)\\) est vraie . Etape 2 : h\u00e9r\u00e9dit\u00e9 On suppose que pour un entier $n \\geq 0 $ , \\(P(n)\\) est vraie, c'est-\u00e0-dire \\(u_n=3^{n}+1\\) et on d\u00e9montre que \\(P(n+1)\\) est vraie, c'est-\u00e0-dire : \\(u_{n+1}=3^{n+1}+1\\) . L'hypoth\u00e8se de r\u00e9currence est donc \u00ab \\(u_n=3^{n}+1\\) \u00bb. Par d\u00e9finition de la suite, \\(u_{n+1}=3u_n-2\\) . Par hypoth\u00e8se de r\u00e9currence : \\(u_n=3^{n}+1\\) Donc \\(u_{n+1}=3\\times(3^{n}+1)-2=3^{n+1}+1\\) . Ainsi la propri\u00e9t\u00e9 est h\u00e9r\u00e9ditaire ! Etape 3 : conclusion Nous avons d\u00e9montr\u00e9 par r\u00e9currence que pour tout entier naturel \\(n \\in \\mathbb{N}\\) , \\(P(n)\\) est vraie c'est-\u00e0-dire \\(u_n = 3^n+1\\) Remarque Si vous n'utilisez pas votre hypoth\u00e8se de r\u00e9currence dans l'h\u00e9r\u00e9dit\u00e9, il y a une erreur de raisonnement. Exercice On consid\u00e8re la suite \\(u\\) d\u00e9finie pour tout entier naturel \\(n\\) par \\[ \\left\\{\\begin{array}{l} u_0=1\\\\ u_{n+1}=\\sqrt{u_n+2} \\end{array}\\right. \\] Quelle conjecture peut-on faire sur le signe de chaque terme de la suite et sur le sens de variation de la suite ? D\u00e9montrer ces conjectures par r\u00e9currence. Solution La suite semble \u00eatre \u00e0 termes positifs et croissante. Soit \\(P(n)\\) la propri\u00e9t\u00e9 d\u00e9finie par \\(0<u_n \\leq u_{n+1}\\) . Initialisation pour \\(n=0\\) on a:\\ \\[ \\left\\{\\begin{array}{l} u_0=1\\\\ u_1=\\sqrt{u_0+2}=\\sqrt{3} \\end{array}\\right. \\] donc \\(0<u_0 \\leq u_1\\) . Donc \\(P(0)\\) est vraie. H\u00e9r\u00e9dit\u00e9 On suppose que pour un entier \\(n \\in \\mathbb{N}\\) , \\(P(n)\\) est vraie , c'est-\u00e0-dire \\(0<u_n \\leq u_{n+1}\\) et on d\u00e9montre que \\(P(n+1)\\) est vraie, c'est-\u00e0-dire : \\(0<u_{n+1} \\leq u_{n+2}\\) .\\ D'apr\u00e8s l'hypoth\u00e8se de r\u00e9currence \\(0<u_n \\leq u_{n+1}\\) donc \\(0+2<u_n+2 \\leq u_{n+1}+2\\) . La fonction racine carr\u00e9e \u00e9tant strictement croissante sur \\([0,+\\infty[\\) , on obtient : \\(\\sqrt{2}<\\sqrt{u_n+2} \\leq \\sqrt{u_{n+1}+2}\\) soit \\(\\sqrt{2}<u_{kn+1} \\leq u_{n+2}\\) \\qquad mais \\(\\sqrt{2}>0\\) donc \\(0<u_{n+1} \\leq u_{n+2}\\) donc si \\(P(n)\\) est vraie alors \\(P(n+1)\\) est vraie . Conclusion Pour tout entier naturel \\(n \\in \\mathbb{N}\\) , \\(P(n)\\) est vraie c'est-\u00e0-dire \\(0<u_n \\leq u_{n+1}\\) . Donc la suite \\(u\\) est croissante et positive.","title":"Raisonnement par r\u00e9currence"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/06_Raisonnement_par_recurrence.html#raisonnement_par_recurrence","text":"Le raisonnement par r\u00e9currence s'apparente \u00e0 la th\u00e9orie des dominos. On consid\u00e8re une suite de dominos. Quelles sont les deux conditions pour que tous les dominos tombent ? Faire tomber le premier domino et s'assurer que chaque domino renverse le suivant D'apr\u00e8s : maths-et-tiques.fr Lire Wikip\u00e9dia Le principe Soit une proposition \\(P(n)\\) (on lit \u00ab \\(P\\) au rang n\u00bb ) d\u00e9pendant d'un entier naturel \\(n\\) . Etape 1: initialisation : on v\u00e9rifie que la proposition est vraie pour la plus petite valeur \\(n_0\\) , Etape 2: h\u00e9r\u00e9dit\u00e9 : on suppose que pour un certain rang \\(k\\geq n_0\\) la proposition \\(P(k)\\) est vraie (on lit \u00ab \\(P\\) est vraie au rang k\u00bb ) :c'est l'hypoth\u00e8se de r\u00e9currence. Et on d\u00e9montre que \\(P(k+1)\\) est vraie. Etape 3: Conclusion : la proposition \\(P(n)\\) est vraie pour tout entier naturel \\(n\\geq n_0\\) . ATTENTION Une proposition est une phrase qui n'est pas obligatoirement une \u00e9galit\u00e9 ou une in\u00e9galit\u00e9 : Pour \\(n \\geq 2\\) , \\(P(n)\\) est \u00ab le nombre de diagonale dans un polygone \u00e0 \\(n\\) sommet est \\(n\\) \u00bb (cette proposition peut \u00eatre vraie ou fausse). Par contre, \u00ab la suite \\(u\\) est croissante \u00bb est une proposition qui ne d\u00e9pend pas de \\(n\\) . Elle ne convient pas pour un raisonnement par r\u00e9currence. On utilisera \\(P(n)\\) : \u00ab \\(u_{n+1} \\geq u_{n}\\) \u00bb. Exemple Soit la suite ( \\(u_n\\) ) d\u00e9finie pour tout naturel \\(n\\) par \\(u_0=2\\) et par la relation de r\u00e9currence : \\(u_{n+1}=3 u_n - 2\\) D\u00e9montrer par r\u00e9currence que pour tout entier naturel \\(n\\) , on a \\(u_n = 3^n+1\\) . Choix de la propoosition Soit \\(P(n)\\) la proposition d\u00e9finie par \u00ab \\(u_n = 3^n+1\\) \u00bb. Etape 1 : Initialisation Pour \\(n=0\\) on a: \\(3^0+1=2\\) et par ailleurs \\(u_0=2\\) donc \\(u_0=3^0+1\\) . La propri\u00e9t\u00e9 est vraie pour \\(n=0\\) donc \\(P(0)\\) est vraie . Etape 2 : h\u00e9r\u00e9dit\u00e9 On suppose que pour un entier $n \\geq 0 $ , \\(P(n)\\) est vraie, c'est-\u00e0-dire \\(u_n=3^{n}+1\\) et on d\u00e9montre que \\(P(n+1)\\) est vraie, c'est-\u00e0-dire : \\(u_{n+1}=3^{n+1}+1\\) . L'hypoth\u00e8se de r\u00e9currence est donc \u00ab \\(u_n=3^{n}+1\\) \u00bb. Par d\u00e9finition de la suite, \\(u_{n+1}=3u_n-2\\) . Par hypoth\u00e8se de r\u00e9currence : \\(u_n=3^{n}+1\\) Donc \\(u_{n+1}=3\\times(3^{n}+1)-2=3^{n+1}+1\\) . Ainsi la propri\u00e9t\u00e9 est h\u00e9r\u00e9ditaire ! Etape 3 : conclusion Nous avons d\u00e9montr\u00e9 par r\u00e9currence que pour tout entier naturel \\(n \\in \\mathbb{N}\\) , \\(P(n)\\) est vraie c'est-\u00e0-dire \\(u_n = 3^n+1\\) Remarque Si vous n'utilisez pas votre hypoth\u00e8se de r\u00e9currence dans l'h\u00e9r\u00e9dit\u00e9, il y a une erreur de raisonnement. Exercice On consid\u00e8re la suite \\(u\\) d\u00e9finie pour tout entier naturel \\(n\\) par \\[ \\left\\{\\begin{array}{l} u_0=1\\\\ u_{n+1}=\\sqrt{u_n+2} \\end{array}\\right. \\] Quelle conjecture peut-on faire sur le signe de chaque terme de la suite et sur le sens de variation de la suite ? D\u00e9montrer ces conjectures par r\u00e9currence. Solution La suite semble \u00eatre \u00e0 termes positifs et croissante. Soit \\(P(n)\\) la propri\u00e9t\u00e9 d\u00e9finie par \\(0<u_n \\leq u_{n+1}\\) . Initialisation pour \\(n=0\\) on a:\\ \\[ \\left\\{\\begin{array}{l} u_0=1\\\\ u_1=\\sqrt{u_0+2}=\\sqrt{3} \\end{array}\\right. \\] donc \\(0<u_0 \\leq u_1\\) . Donc \\(P(0)\\) est vraie. H\u00e9r\u00e9dit\u00e9 On suppose que pour un entier \\(n \\in \\mathbb{N}\\) , \\(P(n)\\) est vraie , c'est-\u00e0-dire \\(0<u_n \\leq u_{n+1}\\) et on d\u00e9montre que \\(P(n+1)\\) est vraie, c'est-\u00e0-dire : \\(0<u_{n+1} \\leq u_{n+2}\\) .\\ D'apr\u00e8s l'hypoth\u00e8se de r\u00e9currence \\(0<u_n \\leq u_{n+1}\\) donc \\(0+2<u_n+2 \\leq u_{n+1}+2\\) . La fonction racine carr\u00e9e \u00e9tant strictement croissante sur \\([0,+\\infty[\\) , on obtient : \\(\\sqrt{2}<\\sqrt{u_n+2} \\leq \\sqrt{u_{n+1}+2}\\) soit \\(\\sqrt{2}<u_{kn+1} \\leq u_{n+2}\\) \\qquad mais \\(\\sqrt{2}>0\\) donc \\(0<u_{n+1} \\leq u_{n+2}\\) donc si \\(P(n)\\) est vraie alors \\(P(n+1)\\) est vraie . Conclusion Pour tout entier naturel \\(n \\in \\mathbb{N}\\) , \\(P(n)\\) est vraie c'est-\u00e0-dire \\(0<u_n \\leq u_{n+1}\\) . Donc la suite \\(u\\) est croissante et positive.","title":"Raisonnement par r\u00e9currence"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/07_majoree_minoree_bornee.html","text":"Suite major\u00e9e, minor\u00e9e , born\u00e9e D\u00e9finition Une suite \\((u_n)\\) est major\u00e9e par un nombre r\u00e9el \\(M\\) si pour tout \\(n\\in \\mathbb{N}, u_n \\leq M\\) (attention \\(M\\) ne d\u00e9pend pas de \\(n\\) ) Si une suite est major\u00e9e par \\(M\\) , elle a une infinit\u00e9 de majorants . En particulier , tout nombre sup\u00e9rieur \u00e0 \\(M\\) est aussi un majorant de la suite. D\u00e9finition Une suite \\((u_n)\\) est minor\u00e9e par un nombre r\u00e9el \\(m\\) si pour tout \\(n\\in \\mathbb{N}, m \\leq u_n\\) (attention \\(m\\) ne d\u00e9pend pas de \\(n\\) ) Si une suite est minor\u00e9e par \\(m\\) , elle a une infinit\u00e9 de minorants. En particulier, tout nombre inf\u00e9rieur \u00e0 \\(m\\) est aussi un minorant de la suite. D\u00e9finition Une suite \\((u_n)\\) est born\u00e9e si elle est \u00e0 la fois major\u00e9e et minor\u00e9e. Exemple Une suite \u00e0 termes positifs est minor\u00e9e par 0 A retenir : Une suite croissante est minor\u00e9e par son premier terme \\(u_0\\) : \\(u_0 \\leq u_1 \\leq \\cdots \\leq u_n\\) A retenir : Une suite d\u00e9croissante est major\u00e9e par son premier terme \\(u_0\\) : \\(u_n \\leq \\cdots \\leq u_1 \\leq u_0\\) La suite \\(u\\) d\u00e9finie par \\(u_n=\\sin n\\) est minor\u00e9e par -1 et major\u00e9e par 1 La suite \\(u\\) d\u00e9finie par \\(u_n=n\\) est minor\u00e9e par 0 et non major\u00e9e. la suite d\u00e9finie pour \\(n \\geq 1\\) par \\(u_n=1+\\dfrac{2}{n}\\) est minor\u00e9e par 1 et major\u00e9e par 3. Elle est born\u00e9e. En effet pour \\(n \\geq 1\\) , \\(\\dfrac2n \\leq 2\\) donc \\(u_n \\leq 3\\) , la suite est major\u00e9e par 3. Pour \\(n \\geq 1\\) , \\(\\dfrac{2}{n} > 0\\) donc \\(u_n > 1\\) , la suite est minor\u00e9e par 1. M\u00e9thode Technique alg\u00e9brique : on manipule des in\u00e9galit\u00e9s ou on \u00e9tudie le signe de \\(u_n-M\\) ou \\(u_n-m\\) . Technique fonctionnelle : si \\(u_n=f(n)\\) , le tableau de variations de \\(f\\) permet de trouver (si ils existent) un majorant ou un minorant. Il est possible d'utiliser une d\u00e9monstration par r\u00e9currence. Exercice On consid\u00e8re la suite \\((u_n)\\) d\u00e9finie par \\[ \\left\\{\\begin{array}{lcl} u_0 & = & 1,8\\\\ u_{n+1} & = & f(u_n) \\end{array}\\right. \\] avec \\(f(x) =\\dfrac{2}{3-x}\\) . On admet que \\(f\\) est croissante sur \\([0,3[\\) . Emettre des conjectures sur la suite : variation ,majorant , minorant. D\u00e9montrer par r\u00e9currence les conjectures Solution La suite semble \u00eatre d\u00e9croissante , minor\u00e9e par 1 et major\u00e9e par 2. Soit \\(P(n)\\) la propri\u00e9t\u00e9 d\u00e9finie par \\(1 \\leq u_{n+1} \\leq u_n \\leq 2\\) Initialisation pour \\(n=0\\) on a: \\[ \\left \\{\\begin{array}{l} u_0=1,8\\\\ u_1=f(1,8)\\approx1,67 \\end{array}\\right. \\] donc \\(1 \\leq u_1 \\leq u_0 \\leq 2\\) \\(P(0)\\) est vraie. H\u00e9r\u00e9dit\u00e9 On suppose que pour un entier \\(k \\in \\mathbb{N}\\) , \\(P(k)\\) est vraie , c'est-\u00e0-dire \\(1 \\leq u_{k+1} \\leq u_k \\leq 2\\) et on d\u00e9montre que \\(P(k+1)\\) est vraie , c'est-\u00e0-dire : \\(0 < u_{k+2} \\leq u_{k+1} \\leq 2\\) . D'apr\u00e8s l'hypoth\u00e8se de r\u00e9currence \\(1 \\leq u_{k+1} \\leq u_k \\leq 2\\) donc comme \\(f\\) est croissante sur \\([0,3[\\) on a \\(f(1) \\leq f(u_{k+1}) \\leq f(u_k) \\leq f(2)\\) C'est-\u00e0-dire : \\(1 \\leq u_{k+2} \\leq u_{k+1} \\leq 2\\) . Donc la propri\u00e9t\u00e9 est h\u00e9r\u00e9ditaire . Conclusion Pour tout entier naturel \\(n \\in \\mathbb{N}\\) , \\(P(n)\\) est vraie c'est-\u00e0-dire \\(1 \\leq u_{n+1} \\leq u_n \\leq 2\\) .","title":"Suite major\u00e9e, minor\u00e9e, born\u00e9e"},{"location":"Cours/Terminale%20g%C3%A9n%C3%A9rale/Suites_et_recurrence/Suites_bases/07_majoree_minoree_bornee.html#suite_majoree_minoree_bornee","text":"D\u00e9finition Une suite \\((u_n)\\) est major\u00e9e par un nombre r\u00e9el \\(M\\) si pour tout \\(n\\in \\mathbb{N}, u_n \\leq M\\) (attention \\(M\\) ne d\u00e9pend pas de \\(n\\) ) Si une suite est major\u00e9e par \\(M\\) , elle a une infinit\u00e9 de majorants . En particulier , tout nombre sup\u00e9rieur \u00e0 \\(M\\) est aussi un majorant de la suite. D\u00e9finition Une suite \\((u_n)\\) est minor\u00e9e par un nombre r\u00e9el \\(m\\) si pour tout \\(n\\in \\mathbb{N}, m \\leq u_n\\) (attention \\(m\\) ne d\u00e9pend pas de \\(n\\) ) Si une suite est minor\u00e9e par \\(m\\) , elle a une infinit\u00e9 de minorants. En particulier, tout nombre inf\u00e9rieur \u00e0 \\(m\\) est aussi un minorant de la suite. D\u00e9finition Une suite \\((u_n)\\) est born\u00e9e si elle est \u00e0 la fois major\u00e9e et minor\u00e9e. Exemple Une suite \u00e0 termes positifs est minor\u00e9e par 0 A retenir : Une suite croissante est minor\u00e9e par son premier terme \\(u_0\\) : \\(u_0 \\leq u_1 \\leq \\cdots \\leq u_n\\) A retenir : Une suite d\u00e9croissante est major\u00e9e par son premier terme \\(u_0\\) : \\(u_n \\leq \\cdots \\leq u_1 \\leq u_0\\) La suite \\(u\\) d\u00e9finie par \\(u_n=\\sin n\\) est minor\u00e9e par -1 et major\u00e9e par 1 La suite \\(u\\) d\u00e9finie par \\(u_n=n\\) est minor\u00e9e par 0 et non major\u00e9e. la suite d\u00e9finie pour \\(n \\geq 1\\) par \\(u_n=1+\\dfrac{2}{n}\\) est minor\u00e9e par 1 et major\u00e9e par 3. Elle est born\u00e9e. En effet pour \\(n \\geq 1\\) , \\(\\dfrac2n \\leq 2\\) donc \\(u_n \\leq 3\\) , la suite est major\u00e9e par 3. Pour \\(n \\geq 1\\) , \\(\\dfrac{2}{n} > 0\\) donc \\(u_n > 1\\) , la suite est minor\u00e9e par 1. M\u00e9thode Technique alg\u00e9brique : on manipule des in\u00e9galit\u00e9s ou on \u00e9tudie le signe de \\(u_n-M\\) ou \\(u_n-m\\) . Technique fonctionnelle : si \\(u_n=f(n)\\) , le tableau de variations de \\(f\\) permet de trouver (si ils existent) un majorant ou un minorant. Il est possible d'utiliser une d\u00e9monstration par r\u00e9currence. Exercice On consid\u00e8re la suite \\((u_n)\\) d\u00e9finie par \\[ \\left\\{\\begin{array}{lcl} u_0 & = & 1,8\\\\ u_{n+1} & = & f(u_n) \\end{array}\\right. \\] avec \\(f(x) =\\dfrac{2}{3-x}\\) . On admet que \\(f\\) est croissante sur \\([0,3[\\) . Emettre des conjectures sur la suite : variation ,majorant , minorant. D\u00e9montrer par r\u00e9currence les conjectures Solution La suite semble \u00eatre d\u00e9croissante , minor\u00e9e par 1 et major\u00e9e par 2. Soit \\(P(n)\\) la propri\u00e9t\u00e9 d\u00e9finie par \\(1 \\leq u_{n+1} \\leq u_n \\leq 2\\) Initialisation pour \\(n=0\\) on a: \\[ \\left \\{\\begin{array}{l} u_0=1,8\\\\ u_1=f(1,8)\\approx1,67 \\end{array}\\right. \\] donc \\(1 \\leq u_1 \\leq u_0 \\leq 2\\) \\(P(0)\\) est vraie. H\u00e9r\u00e9dit\u00e9 On suppose que pour un entier \\(k \\in \\mathbb{N}\\) , \\(P(k)\\) est vraie , c'est-\u00e0-dire \\(1 \\leq u_{k+1} \\leq u_k \\leq 2\\) et on d\u00e9montre que \\(P(k+1)\\) est vraie , c'est-\u00e0-dire : \\(0 < u_{k+2} \\leq u_{k+1} \\leq 2\\) . D'apr\u00e8s l'hypoth\u00e8se de r\u00e9currence \\(1 \\leq u_{k+1} \\leq u_k \\leq 2\\) donc comme \\(f\\) est croissante sur \\([0,3[\\) on a \\(f(1) \\leq f(u_{k+1}) \\leq f(u_k) \\leq f(2)\\) C'est-\u00e0-dire : \\(1 \\leq u_{k+2} \\leq u_{k+1} \\leq 2\\) . Donc la propri\u00e9t\u00e9 est h\u00e9r\u00e9ditaire . Conclusion Pour tout entier naturel \\(n \\in \\mathbb{N}\\) , \\(P(n)\\) est vraie c'est-\u00e0-dire \\(1 \\leq u_{n+1} \\leq u_n \\leq 2\\) .","title":"Suite major\u00e9e, minor\u00e9e , born\u00e9e"},{"location":"Labo%20de%20math/c01.html","text":"En construction Programme de math de la sp\u00e9cialit\u00e9 en terminale : en pdf","title":"Accueil"},{"location":"Labo%20de%20math/c01.html#en_construction","text":"Programme de math de la sp\u00e9cialit\u00e9 en terminale : en pdf","title":"En construction"},{"location":"Labo%20de%20math/Liaison_lyc%C3%A9e_sup/sup%C3%A9rieur.html","text":"En construction","title":"Liaison lyc\u00e9e/sup\u00e9rieur"},{"location":"Labo%20de%20math/Liaison_lyc%C3%A9e_sup/sup%C3%A9rieur.html#en_construction","text":"","title":"En construction"}]}